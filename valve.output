Terminals unused in grammar

   INPUTS
   OUTPUTS
   COMMA
   BANG
   VAR_METHOD
   CONST_FLOAT


Grammar

    0 $accept: program $end

    1 program: statementList

    2 statementList: /* empty */
    3              | statementList statement

    4 statement: statementAssign
    5          | statementIf
    6          | arrayDefine

    7 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE
    8            | IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    9 statementAssign: VAR EQUAL expr SEMI
   10                | VAR LBRACKET expr RBRACKET EQUAL expr SEMI

   11 expr: LPAREN expr RPAREN
   12     | expr PLUS expr
   13     | expr MINUS expr
   14     | expr MULT expr
   15     | expr DIV expr
   16     | expr XOR expr
   17     | expr AND expr
   18     | expr OR expr
   19     | expr TEST_FOR_EQUAL expr
   20     | expr NEQ expr
   21     | expr GEQ expr
   22     | expr LEQ expr
   23     | expr GTR expr
   24     | expr LSS expr
   25     | VAR
   26     | CONST
   27     | VAR LBRACKET expr RBRACKET

   28 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI


Terminals, with rules where they appear

$end (0) 0
error (256)
INPUTS (258)
OUTPUTS (259)
COMMA (260)
BANG (261)
EQUAL (262) 9 10
LBRACE (263) 7 8
RBRACE (264) 7 8
ARRAYDEFINE (265) 28
IF (266) 7 8
ELSE (267) 8
VAR (268) 9 10 25 27 28
VAR_METHOD (269)
CONST (270) 26 28
CONST_FLOAT (271)
OR (272) 18
AND (273) 17
LSS (274) 24
GTR (275) 23
NEQ (276) 20
LEQ (277) 22
GEQ (278) 21
TEST_FOR_EQUAL (279) 19
LPAREN (280) 7 8 11
MINUS (281) 13
PLUS (282) 12
XOR (283) 16
DIV (284) 15
MULT (285) 14
LBRACKET (286) 10 27 28
RBRACKET (287) 10 27 28
RPAREN (288) 7 8 11
SEMI (289) 9 10 28


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
statementList (37)
    on left: 2 3, on right: 1 3 7 8
statement (38)
    on left: 4 5 6, on right: 3
statementIf (39)
    on left: 7 8, on right: 5
statementAssign (40)
    on left: 9 10, on right: 4
expr (41)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, on right:
    7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 27
arrayDefine (42)
    on left: 28, on right: 6


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (statementList)

    program        go to state 1
    statementList  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: statementList .
    3 statementList: statementList . statement

    ARRAYDEFINE  shift, and go to state 4
    IF           shift, and go to state 5
    VAR          shift, and go to state 6

    $default  reduce using rule 1 (program)

    statement        go to state 7
    statementIf      go to state 8
    statementAssign  go to state 9
    arrayDefine      go to state 10


state 3

    0 $accept: program $end .

    $default  accept


state 4

   28 arrayDefine: ARRAYDEFINE . VAR LBRACKET CONST RBRACKET SEMI

    VAR  shift, and go to state 11


state 5

    7 statementIf: IF . LPAREN expr RPAREN LBRACE statementList RBRACE
    8            | IF . LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LPAREN  shift, and go to state 12


state 6

    9 statementAssign: VAR . EQUAL expr SEMI
   10                | VAR . LBRACKET expr RBRACKET EQUAL expr SEMI

    EQUAL     shift, and go to state 13
    LBRACKET  shift, and go to state 14


state 7

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 8

    5 statement: statementIf .

    $default  reduce using rule 5 (statement)


state 9

    4 statement: statementAssign .

    $default  reduce using rule 4 (statement)


state 10

    6 statement: arrayDefine .

    $default  reduce using rule 6 (statement)


state 11

   28 arrayDefine: ARRAYDEFINE VAR . LBRACKET CONST RBRACKET SEMI

    LBRACKET  shift, and go to state 15


state 12

    7 statementIf: IF LPAREN . expr RPAREN LBRACE statementList RBRACE
    8            | IF LPAREN . expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 19


state 13

    9 statementAssign: VAR EQUAL . expr SEMI

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 20


state 14

   10 statementAssign: VAR LBRACKET . expr RBRACKET EQUAL expr SEMI

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 21


state 15

   28 arrayDefine: ARRAYDEFINE VAR LBRACKET . CONST RBRACKET SEMI

    CONST  shift, and go to state 22


state 16

   25 expr: VAR .
   27     | VAR . LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 23

    $default  reduce using rule 25 (expr)


state 17

   26 expr: CONST .

    $default  reduce using rule 26 (expr)


state 18

   11 expr: LPAREN . expr RPAREN

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 24


state 19

    7 statementIf: IF LPAREN expr . RPAREN LBRACE statementList RBRACE
    8            | IF LPAREN expr . RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE
   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    OR              shift, and go to state 25
    AND             shift, and go to state 26
    LSS             shift, and go to state 27
    GTR             shift, and go to state 28
    NEQ             shift, and go to state 29
    LEQ             shift, and go to state 30
    GEQ             shift, and go to state 31
    TEST_FOR_EQUAL  shift, and go to state 32
    MINUS           shift, and go to state 33
    PLUS            shift, and go to state 34
    XOR             shift, and go to state 35
    DIV             shift, and go to state 36
    MULT            shift, and go to state 37
    RPAREN          shift, and go to state 38


state 20

    9 statementAssign: VAR EQUAL expr . SEMI
   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    OR              shift, and go to state 25
    AND             shift, and go to state 26
    LSS             shift, and go to state 27
    GTR             shift, and go to state 28
    NEQ             shift, and go to state 29
    LEQ             shift, and go to state 30
    GEQ             shift, and go to state 31
    TEST_FOR_EQUAL  shift, and go to state 32
    MINUS           shift, and go to state 33
    PLUS            shift, and go to state 34
    XOR             shift, and go to state 35
    DIV             shift, and go to state 36
    MULT            shift, and go to state 37
    SEMI            shift, and go to state 39


state 21

   10 statementAssign: VAR LBRACKET expr . RBRACKET EQUAL expr SEMI
   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    OR              shift, and go to state 25
    AND             shift, and go to state 26
    LSS             shift, and go to state 27
    GTR             shift, and go to state 28
    NEQ             shift, and go to state 29
    LEQ             shift, and go to state 30
    GEQ             shift, and go to state 31
    TEST_FOR_EQUAL  shift, and go to state 32
    MINUS           shift, and go to state 33
    PLUS            shift, and go to state 34
    XOR             shift, and go to state 35
    DIV             shift, and go to state 36
    MULT            shift, and go to state 37
    RBRACKET        shift, and go to state 40


state 22

   28 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST . RBRACKET SEMI

    RBRACKET  shift, and go to state 41


state 23

   27 expr: VAR LBRACKET . expr RBRACKET

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 42


state 24

   11 expr: LPAREN expr . RPAREN
   12     | expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    OR              shift, and go to state 25
    AND             shift, and go to state 26
    LSS             shift, and go to state 27
    GTR             shift, and go to state 28
    NEQ             shift, and go to state 29
    LEQ             shift, and go to state 30
    GEQ             shift, and go to state 31
    TEST_FOR_EQUAL  shift, and go to state 32
    MINUS           shift, and go to state 33
    PLUS            shift, and go to state 34
    XOR             shift, and go to state 35
    DIV             shift, and go to state 36
    MULT            shift, and go to state 37
    RPAREN          shift, and go to state 43


state 25

   18 expr: expr OR . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 44


state 26

   17 expr: expr AND . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 45


state 27

   24 expr: expr LSS . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 46


state 28

   23 expr: expr GTR . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 47


state 29

   20 expr: expr NEQ . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 48


state 30

   22 expr: expr LEQ . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 49


state 31

   21 expr: expr GEQ . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 50


state 32

   19 expr: expr TEST_FOR_EQUAL . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 51


state 33

   13 expr: expr MINUS . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 52


state 34

   12 expr: expr PLUS . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 53


state 35

   16 expr: expr XOR . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 54


state 36

   15 expr: expr DIV . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 55


state 37

   14 expr: expr MULT . expr

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 56


state 38

    7 statementIf: IF LPAREN expr RPAREN . LBRACE statementList RBRACE
    8            | IF LPAREN expr RPAREN . LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LBRACE  shift, and go to state 57


state 39

    9 statementAssign: VAR EQUAL expr SEMI .

    $default  reduce using rule 9 (statementAssign)


state 40

   10 statementAssign: VAR LBRACKET expr RBRACKET . EQUAL expr SEMI

    EQUAL  shift, and go to state 58


state 41

   28 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET . SEMI

    SEMI  shift, and go to state 59


state 42

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   27     | VAR LBRACKET expr . RBRACKET

    OR              shift, and go to state 25
    AND             shift, and go to state 26
    LSS             shift, and go to state 27
    GTR             shift, and go to state 28
    NEQ             shift, and go to state 29
    LEQ             shift, and go to state 30
    GEQ             shift, and go to state 31
    TEST_FOR_EQUAL  shift, and go to state 32
    MINUS           shift, and go to state 33
    PLUS            shift, and go to state 34
    XOR             shift, and go to state 35
    DIV             shift, and go to state 36
    MULT            shift, and go to state 37
    RBRACKET        shift, and go to state 60


state 43

   11 expr: LPAREN expr RPAREN .

    $default  reduce using rule 11 (expr)


state 44

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   18     | expr OR expr .
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    LSS             shift, and go to state 27
    GTR             shift, and go to state 28
    NEQ             shift, and go to state 29
    LEQ             shift, and go to state 30
    GEQ             shift, and go to state 31
    TEST_FOR_EQUAL  shift, and go to state 32
    MINUS           shift, and go to state 33
    PLUS            shift, and go to state 34
    XOR             shift, and go to state 35
    DIV             shift, and go to state 36
    MULT            shift, and go to state 37

    $default  reduce using rule 18 (expr)


state 45

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   17     | expr AND expr .
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    LSS             shift, and go to state 27
    GTR             shift, and go to state 28
    NEQ             shift, and go to state 29
    LEQ             shift, and go to state 30
    GEQ             shift, and go to state 31
    TEST_FOR_EQUAL  shift, and go to state 32
    MINUS           shift, and go to state 33
    PLUS            shift, and go to state 34
    XOR             shift, and go to state 35
    DIV             shift, and go to state 36
    MULT            shift, and go to state 37

    $default  reduce using rule 17 (expr)


state 46

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr
   24     | expr LSS expr .

    MINUS  shift, and go to state 33
    PLUS   shift, and go to state 34
    XOR    shift, and go to state 35
    DIV    shift, and go to state 36
    MULT   shift, and go to state 37

    $default  reduce using rule 24 (expr)


state 47

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   23     | expr GTR expr .
   24     | expr . LSS expr

    MINUS  shift, and go to state 33
    PLUS   shift, and go to state 34
    XOR    shift, and go to state 35
    DIV    shift, and go to state 36
    MULT   shift, and go to state 37

    $default  reduce using rule 23 (expr)


state 48

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   20     | expr NEQ expr .
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    MINUS  shift, and go to state 33
    PLUS   shift, and go to state 34
    XOR    shift, and go to state 35
    DIV    shift, and go to state 36
    MULT   shift, and go to state 37

    $default  reduce using rule 20 (expr)


state 49

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   22     | expr LEQ expr .
   23     | expr . GTR expr
   24     | expr . LSS expr

    MINUS  shift, and go to state 33
    PLUS   shift, and go to state 34
    XOR    shift, and go to state 35
    DIV    shift, and go to state 36
    MULT   shift, and go to state 37

    $default  reduce using rule 22 (expr)


state 50

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   21     | expr GEQ expr .
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    MINUS  shift, and go to state 33
    PLUS   shift, and go to state 34
    XOR    shift, and go to state 35
    DIV    shift, and go to state 36
    MULT   shift, and go to state 37

    $default  reduce using rule 21 (expr)


state 51

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   19     | expr TEST_FOR_EQUAL expr .
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    MINUS  shift, and go to state 33
    PLUS   shift, and go to state 34
    XOR    shift, and go to state 35
    DIV    shift, and go to state 36
    MULT   shift, and go to state 37

    $default  reduce using rule 19 (expr)


state 52

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   13     | expr MINUS expr .
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    XOR   shift, and go to state 35
    DIV   shift, and go to state 36
    MULT  shift, and go to state 37

    $default  reduce using rule 13 (expr)


state 53

   12 expr: expr . PLUS expr
   12     | expr PLUS expr .
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    XOR   shift, and go to state 35
    DIV   shift, and go to state 36
    MULT  shift, and go to state 37

    $default  reduce using rule 12 (expr)


state 54

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   16     | expr XOR expr .
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    DIV   shift, and go to state 36
    MULT  shift, and go to state 37

    $default  reduce using rule 16 (expr)


state 55

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   15     | expr DIV expr .
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    $default  reduce using rule 15 (expr)


state 56

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   14     | expr MULT expr .
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    $default  reduce using rule 14 (expr)


state 57

    7 statementIf: IF LPAREN expr RPAREN LBRACE . statementList RBRACE
    8            | IF LPAREN expr RPAREN LBRACE . statementList RBRACE ELSE LBRACE statementList RBRACE

    $default  reduce using rule 2 (statementList)

    statementList  go to state 61


state 58

   10 statementAssign: VAR LBRACKET expr RBRACKET EQUAL . expr SEMI

    VAR     shift, and go to state 16
    CONST   shift, and go to state 17
    LPAREN  shift, and go to state 18

    expr  go to state 62


state 59

   28 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI .

    $default  reduce using rule 28 (arrayDefine)


state 60

   27 expr: VAR LBRACKET expr RBRACKET .

    $default  reduce using rule 27 (expr)


state 61

    3 statementList: statementList . statement
    7 statementIf: IF LPAREN expr RPAREN LBRACE statementList . RBRACE
    8            | IF LPAREN expr RPAREN LBRACE statementList . RBRACE ELSE LBRACE statementList RBRACE

    RBRACE       shift, and go to state 63
    ARRAYDEFINE  shift, and go to state 4
    IF           shift, and go to state 5
    VAR          shift, and go to state 6

    statement        go to state 7
    statementIf      go to state 8
    statementAssign  go to state 9
    arrayDefine      go to state 10


state 62

   10 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr . SEMI
   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . MULT expr
   15     | expr . DIV expr
   16     | expr . XOR expr
   17     | expr . AND expr
   18     | expr . OR expr
   19     | expr . TEST_FOR_EQUAL expr
   20     | expr . NEQ expr
   21     | expr . GEQ expr
   22     | expr . LEQ expr
   23     | expr . GTR expr
   24     | expr . LSS expr

    OR              shift, and go to state 25
    AND             shift, and go to state 26
    LSS             shift, and go to state 27
    GTR             shift, and go to state 28
    NEQ             shift, and go to state 29
    LEQ             shift, and go to state 30
    GEQ             shift, and go to state 31
    TEST_FOR_EQUAL  shift, and go to state 32
    MINUS           shift, and go to state 33
    PLUS            shift, and go to state 34
    XOR             shift, and go to state 35
    DIV             shift, and go to state 36
    MULT            shift, and go to state 37
    SEMI            shift, and go to state 64


state 63

    7 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE .
    8            | IF LPAREN expr RPAREN LBRACE statementList RBRACE . ELSE LBRACE statementList RBRACE

    ELSE  shift, and go to state 65

    $default  reduce using rule 7 (statementIf)


state 64

   10 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr SEMI .

    $default  reduce using rule 10 (statementAssign)


state 65

    8 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 66


state 66

    8 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE . statementList RBRACE

    $default  reduce using rule 2 (statementList)

    statementList  go to state 67


state 67

    3 statementList: statementList . statement
    8 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList . RBRACE

    RBRACE       shift, and go to state 68
    ARRAYDEFINE  shift, and go to state 4
    IF           shift, and go to state 5
    VAR          shift, and go to state 6

    statement        go to state 7
    statementIf      go to state 8
    statementAssign  go to state 9
    arrayDefine      go to state 10


state 68

    8 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE .

    $default  reduce using rule 8 (statementIf)
