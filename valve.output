Terminals unused in grammar

   INPUTS
   OUTPUTS
   COMMA
   BANG
   NEQ


Grammar

    0 $accept: program $end

    1 program: patternActionList

    2 patternActionList: /* empty */
    3                  | patternActionList statementIf

    4 statementList: /* empty */
    5              | statementList statement

    6 statement: statementAssign
    7          | arrayDefine

    8 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE
    9            | IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

   10 statementAssign: var EQUAL arithmeticExpression SEMI
   11                | array EQUAL arithmeticExpression SEMI

   12 expr: LPAREN expr RPAREN
   13     | expr AND expr
   14     | expr OR expr
   15     | var operandTest arithmeticExpression
   16     | var
   17     | CONST

   18 arithmeticExpression: LPAREN arithmeticExpression RPAREN
   19                     | arithmeticExpression PLUS arithmeticExpression
   20                     | arithmeticExpression MINUS arithmeticExpression
   21                     | arithmeticExpression MULT arithmeticExpression
   22                     | arithmeticExpression DIV arithmeticExpression
   23                     | arithmeticExpression XOR arithmeticExpression
   24                     | var
   25                     | CONST
   26                     | array

   27 var: VAR
   28    | VAR_METHOD

   29 array: VAR LBRACKET arithmeticExpression RBRACKET

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI

   31 operandTest: TEST_FOR_EQUAL
   32            | GEQ
   33            | LEQ
   34            | GTR
   35            | LSS


Terminals, with rules where they appear

$end (0) 0
error (256)
INPUTS (258)
OUTPUTS (259)
COMMA (260)
BANG (261)
EQUAL (262) 10 11
GEQ (263) 32
LEQ (264) 33
NEQ (265)
GTR (266) 34
LSS (267) 35
TEST_FOR_EQUAL (268) 31
LBRACE (269) 8 9
RBRACE (270) 8 9
ARRAYDEFINE (271) 30
IF (272) 8 9
ELSE (273) 9
VAR (274) 27 29 30
VAR_METHOD (275) 28
CONST (276) 17 25 30
LPAREN (277) 8 9 12 18
MINUS (278) 20
PLUS (279) 19
XOR (280) 23
OR (281) 14
AND (282) 13
DIV (283) 22
MULT (284) 21
LBRACKET (285) 29 30
RBRACKET (286) 29 30
RPAREN (287) 8 9 12 18
SEMI (288) 10 11 30


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
program (35)
    on left: 1, on right: 0
patternActionList (36)
    on left: 2 3, on right: 1 3
statementList (37)
    on left: 4 5, on right: 5 8 9
statement (38)
    on left: 6 7, on right: 5
statementIf (39)
    on left: 8 9, on right: 3
statementAssign (40)
    on left: 10 11, on right: 6
expr (41)
    on left: 12 13 14 15 16 17, on right: 8 9 12 13 14
arithmeticExpression (42)
    on left: 18 19 20 21 22 23 24 25 26, on right: 10 11 15 18 19 20
    21 22 23 29
var (43)
    on left: 27 28, on right: 10 15 16 24
array (44)
    on left: 29, on right: 11 26
arrayDefine (45)
    on left: 30, on right: 7
operandTest (46)
    on left: 31 32 33 34 35, on right: 15


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (patternActionList)

    program            go to state 1
    patternActionList  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: patternActionList .
    3 patternActionList: patternActionList . statementIf

    IF  shift, and go to state 4

    $default  reduce using rule 1 (program)

    statementIf  go to state 5


state 3

    0 $accept: program $end .

    $default  accept


state 4

    8 statementIf: IF . LPAREN expr RPAREN LBRACE statementList RBRACE
    9            | IF . LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LPAREN  shift, and go to state 6


state 5

    3 patternActionList: patternActionList statementIf .

    $default  reduce using rule 3 (patternActionList)


state 6

    8 statementIf: IF LPAREN . expr RPAREN LBRACE statementList RBRACE
    9            | IF LPAREN . expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    VAR         shift, and go to state 7
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 9
    LPAREN      shift, and go to state 10

    expr  go to state 11
    var   go to state 12


state 7

   27 var: VAR .

    $default  reduce using rule 27 (var)


state 8

   28 var: VAR_METHOD .

    $default  reduce using rule 28 (var)


state 9

   17 expr: CONST .

    $default  reduce using rule 17 (expr)


state 10

   12 expr: LPAREN . expr RPAREN

    VAR         shift, and go to state 7
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 9
    LPAREN      shift, and go to state 10

    expr  go to state 13
    var   go to state 12


state 11

    8 statementIf: IF LPAREN expr . RPAREN LBRACE statementList RBRACE
    9            | IF LPAREN expr . RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE
   13 expr: expr . AND expr
   14     | expr . OR expr

    OR      shift, and go to state 14
    AND     shift, and go to state 15
    RPAREN  shift, and go to state 16


state 12

   15 expr: var . operandTest arithmeticExpression
   16     | var .

    GEQ             shift, and go to state 17
    LEQ             shift, and go to state 18
    GTR             shift, and go to state 19
    LSS             shift, and go to state 20
    TEST_FOR_EQUAL  shift, and go to state 21

    $default  reduce using rule 16 (expr)

    operandTest  go to state 22


state 13

   12 expr: LPAREN expr . RPAREN
   13     | expr . AND expr
   14     | expr . OR expr

    OR      shift, and go to state 14
    AND     shift, and go to state 15
    RPAREN  shift, and go to state 23


state 14

   14 expr: expr OR . expr

    VAR         shift, and go to state 7
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 9
    LPAREN      shift, and go to state 10

    expr  go to state 24
    var   go to state 12


state 15

   13 expr: expr AND . expr

    VAR         shift, and go to state 7
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 9
    LPAREN      shift, and go to state 10

    expr  go to state 25
    var   go to state 12


state 16

    8 statementIf: IF LPAREN expr RPAREN . LBRACE statementList RBRACE
    9            | IF LPAREN expr RPAREN . LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LBRACE  shift, and go to state 26


state 17

   32 operandTest: GEQ .

    $default  reduce using rule 32 (operandTest)


state 18

   33 operandTest: LEQ .

    $default  reduce using rule 33 (operandTest)


state 19

   34 operandTest: GTR .

    $default  reduce using rule 34 (operandTest)


state 20

   35 operandTest: LSS .

    $default  reduce using rule 35 (operandTest)


state 21

   31 operandTest: TEST_FOR_EQUAL .

    $default  reduce using rule 31 (operandTest)


state 22

   15 expr: var operandTest . arithmeticExpression

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 30
    var                   go to state 31
    array                 go to state 32


state 23

   12 expr: LPAREN expr RPAREN .

    $default  reduce using rule 12 (expr)


state 24

   13 expr: expr . AND expr
   14     | expr . OR expr
   14     | expr OR expr .

    $default  reduce using rule 14 (expr)


state 25

   13 expr: expr . AND expr
   13     | expr AND expr .
   14     | expr . OR expr

    $default  reduce using rule 13 (expr)


state 26

    8 statementIf: IF LPAREN expr RPAREN LBRACE . statementList RBRACE
    9            | IF LPAREN expr RPAREN LBRACE . statementList RBRACE ELSE LBRACE statementList RBRACE

    $default  reduce using rule 4 (statementList)

    statementList  go to state 33


state 27

   27 var: VAR .
   29 array: VAR . LBRACKET arithmeticExpression RBRACKET

    LBRACKET  shift, and go to state 34

    $default  reduce using rule 27 (var)


state 28

   25 arithmeticExpression: CONST .

    $default  reduce using rule 25 (arithmeticExpression)


state 29

   18 arithmeticExpression: LPAREN . arithmeticExpression RPAREN

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 35
    var                   go to state 31
    array                 go to state 32


state 30

   15 expr: var operandTest arithmeticExpression .
   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression

    MINUS  shift, and go to state 36
    PLUS   shift, and go to state 37
    XOR    shift, and go to state 38
    DIV    shift, and go to state 39
    MULT   shift, and go to state 40

    $default  reduce using rule 15 (expr)


state 31

   24 arithmeticExpression: var .

    $default  reduce using rule 24 (arithmeticExpression)


state 32

   26 arithmeticExpression: array .

    $default  reduce using rule 26 (arithmeticExpression)


state 33

    5 statementList: statementList . statement
    8 statementIf: IF LPAREN expr RPAREN LBRACE statementList . RBRACE
    9            | IF LPAREN expr RPAREN LBRACE statementList . RBRACE ELSE LBRACE statementList RBRACE

    RBRACE       shift, and go to state 41
    ARRAYDEFINE  shift, and go to state 42
    VAR          shift, and go to state 27
    VAR_METHOD   shift, and go to state 8

    statement        go to state 43
    statementAssign  go to state 44
    var              go to state 45
    array            go to state 46
    arrayDefine      go to state 47


state 34

   29 array: VAR LBRACKET . arithmeticExpression RBRACKET

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 48
    var                   go to state 31
    array                 go to state 32


state 35

   18 arithmeticExpression: LPAREN arithmeticExpression . RPAREN
   19                     | arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression

    MINUS   shift, and go to state 36
    PLUS    shift, and go to state 37
    XOR     shift, and go to state 38
    DIV     shift, and go to state 39
    MULT    shift, and go to state 40
    RPAREN  shift, and go to state 49


state 36

   20 arithmeticExpression: arithmeticExpression MINUS . arithmeticExpression

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 50
    var                   go to state 31
    array                 go to state 32


state 37

   19 arithmeticExpression: arithmeticExpression PLUS . arithmeticExpression

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 51
    var                   go to state 31
    array                 go to state 32


state 38

   23 arithmeticExpression: arithmeticExpression XOR . arithmeticExpression

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 52
    var                   go to state 31
    array                 go to state 32


state 39

   22 arithmeticExpression: arithmeticExpression DIV . arithmeticExpression

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 53
    var                   go to state 31
    array                 go to state 32


state 40

   21 arithmeticExpression: arithmeticExpression MULT . arithmeticExpression

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 54
    var                   go to state 31
    array                 go to state 32


state 41

    8 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE .
    9            | IF LPAREN expr RPAREN LBRACE statementList RBRACE . ELSE LBRACE statementList RBRACE

    ELSE  shift, and go to state 55

    $default  reduce using rule 8 (statementIf)


state 42

   30 arrayDefine: ARRAYDEFINE . VAR LBRACKET CONST RBRACKET SEMI

    VAR  shift, and go to state 56


state 43

    5 statementList: statementList statement .

    $default  reduce using rule 5 (statementList)


state 44

    6 statement: statementAssign .

    $default  reduce using rule 6 (statement)


state 45

   10 statementAssign: var . EQUAL arithmeticExpression SEMI

    EQUAL  shift, and go to state 57


state 46

   11 statementAssign: array . EQUAL arithmeticExpression SEMI

    EQUAL  shift, and go to state 58


state 47

    7 statement: arrayDefine .

    $default  reduce using rule 7 (statement)


state 48

   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression
   29 array: VAR LBRACKET arithmeticExpression . RBRACKET

    MINUS     shift, and go to state 36
    PLUS      shift, and go to state 37
    XOR       shift, and go to state 38
    DIV       shift, and go to state 39
    MULT      shift, and go to state 40
    RBRACKET  shift, and go to state 59


state 49

   18 arithmeticExpression: LPAREN arithmeticExpression RPAREN .

    $default  reduce using rule 18 (arithmeticExpression)


state 50

   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression MINUS arithmeticExpression .
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression

    XOR   shift, and go to state 38
    DIV   shift, and go to state 39
    MULT  shift, and go to state 40

    $default  reduce using rule 20 (arithmeticExpression)


state 51

   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression PLUS arithmeticExpression .
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression

    XOR   shift, and go to state 38
    DIV   shift, and go to state 39
    MULT  shift, and go to state 40

    $default  reduce using rule 19 (arithmeticExpression)


state 52

   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression
   23                     | arithmeticExpression XOR arithmeticExpression .

    DIV   shift, and go to state 39
    MULT  shift, and go to state 40

    $default  reduce using rule 23 (arithmeticExpression)


state 53

   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression DIV arithmeticExpression .
   23                     | arithmeticExpression . XOR arithmeticExpression

    $default  reduce using rule 22 (arithmeticExpression)


state 54

   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression MULT arithmeticExpression .
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression

    $default  reduce using rule 21 (arithmeticExpression)


state 55

    9 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 60


state 56

   30 arrayDefine: ARRAYDEFINE VAR . LBRACKET CONST RBRACKET SEMI

    LBRACKET  shift, and go to state 61


state 57

   10 statementAssign: var EQUAL . arithmeticExpression SEMI

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 62
    var                   go to state 31
    array                 go to state 32


state 58

   11 statementAssign: array EQUAL . arithmeticExpression SEMI

    VAR         shift, and go to state 27
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 28
    LPAREN      shift, and go to state 29

    arithmeticExpression  go to state 63
    var                   go to state 31
    array                 go to state 32


state 59

   29 array: VAR LBRACKET arithmeticExpression RBRACKET .

    $default  reduce using rule 29 (array)


state 60

    9 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE . statementList RBRACE

    $default  reduce using rule 4 (statementList)

    statementList  go to state 64


state 61

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET . CONST RBRACKET SEMI

    CONST  shift, and go to state 65


state 62

   10 statementAssign: var EQUAL arithmeticExpression . SEMI
   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression

    MINUS  shift, and go to state 36
    PLUS   shift, and go to state 37
    XOR    shift, and go to state 38
    DIV    shift, and go to state 39
    MULT   shift, and go to state 40
    SEMI   shift, and go to state 66


state 63

   11 statementAssign: array EQUAL arithmeticExpression . SEMI
   19 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   20                     | arithmeticExpression . MINUS arithmeticExpression
   21                     | arithmeticExpression . MULT arithmeticExpression
   22                     | arithmeticExpression . DIV arithmeticExpression
   23                     | arithmeticExpression . XOR arithmeticExpression

    MINUS  shift, and go to state 36
    PLUS   shift, and go to state 37
    XOR    shift, and go to state 38
    DIV    shift, and go to state 39
    MULT   shift, and go to state 40
    SEMI   shift, and go to state 67


state 64

    5 statementList: statementList . statement
    9 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList . RBRACE

    RBRACE       shift, and go to state 68
    ARRAYDEFINE  shift, and go to state 42
    VAR          shift, and go to state 27
    VAR_METHOD   shift, and go to state 8

    statement        go to state 43
    statementAssign  go to state 44
    var              go to state 45
    array            go to state 46
    arrayDefine      go to state 47


state 65

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST . RBRACKET SEMI

    RBRACKET  shift, and go to state 69


state 66

   10 statementAssign: var EQUAL arithmeticExpression SEMI .

    $default  reduce using rule 10 (statementAssign)


state 67

   11 statementAssign: array EQUAL arithmeticExpression SEMI .

    $default  reduce using rule 11 (statementAssign)


state 68

    9 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE .

    $default  reduce using rule 9 (statementIf)


state 69

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET . SEMI

    SEMI  shift, and go to state 70


state 70

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI .

    $default  reduce using rule 30 (arrayDefine)
