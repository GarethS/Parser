Terminals unused in grammar

   INPUTS
   OUTPUTS
   COMMA
   BANG
   VAR_METHOD
   CONST_FLOAT


Grammar

    0 $accept: program $end

    1 program: functionMain functionList

    2 functionList: /* empty */
    3             | functionList function

    4 functionMain: MAIN LPAREN RPAREN LBRACE statementList RBRACE

    5 function: VAR LPAREN RPAREN LBRACE statementList RBRACE

    6 statementList: /* empty */
    7              | statementList statement

    8 statement: statementAssign
    9          | statementIf
   10          | statementWhile
   11          | arrayDefine

   12 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList RBRACE

   13 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE
   14            | IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

   15 statementAssign: VAR EQUAL expr SEMI
   16                | VAR LBRACKET expr RBRACKET EQUAL expr SEMI

   17 expr: LPAREN expr RPAREN
   18     | expr PLUS expr
   19     | expr MINUS expr
   20     | expr MULT expr
   21     | expr DIV expr
   22     | expr XOR expr
   23     | expr AND expr
   24     | expr OR expr
   25     | expr TEST_FOR_EQUAL expr
   26     | expr NEQ expr
   27     | expr GEQ expr
   28     | expr LEQ expr
   29     | expr GTR expr
   30     | expr LSS expr
   31     | VAR
   32     | CONST
   33     | VAR LBRACKET expr RBRACKET

   34 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI


Terminals, with rules where they appear

$end (0) 0
error (256)
INPUTS (258)
OUTPUTS (259)
COMMA (260)
BANG (261)
EQUAL (262) 15 16
LBRACE (263) 4 5 12 13 14
RBRACE (264) 4 5 12 13 14
ARRAYDEFINE (265) 34
IF (266) 13 14
ELSE (267) 14
WHILE (268) 12
MAIN (269) 4
VAR (270) 5 15 16 31 33 34
VAR_METHOD (271)
CONST (272) 32 34
CONST_FLOAT (273)
OR (274) 24
AND (275) 23
LSS (276) 30
GTR (277) 29
NEQ (278) 26
LEQ (279) 28
GEQ (280) 27
TEST_FOR_EQUAL (281) 25
LPAREN (282) 4 5 12 13 14 17
MINUS (283) 19
PLUS (284) 18
XOR (285) 22
DIV (286) 21
MULT (287) 20
LBRACKET (288) 16 33 34
RBRACKET (289) 16 33 34
RPAREN (290) 4 5 12 13 14 17
SEMI (291) 15 16 34


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 1, on right: 0
functionList (39)
    on left: 2 3, on right: 1 3
functionMain (40)
    on left: 4, on right: 1
function (41)
    on left: 5, on right: 3
statementList (42)
    on left: 6 7, on right: 4 5 7 12 13 14
statement (43)
    on left: 8 9 10 11, on right: 7
statementWhile (44)
    on left: 12, on right: 10
statementIf (45)
    on left: 13 14, on right: 9
statementAssign (46)
    on left: 15 16, on right: 8
expr (47)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33, on right:
    12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 33
arrayDefine (48)
    on left: 34, on right: 11


state 0

    0 $accept: . program $end

    MAIN  shift, and go to state 1

    program       go to state 2
    functionMain  go to state 3


state 1

    4 functionMain: MAIN . LPAREN RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: functionMain . functionList

    $default  reduce using rule 2 (functionList)

    functionList  go to state 6


state 4

    4 functionMain: MAIN LPAREN . RPAREN LBRACE statementList RBRACE

    RPAREN  shift, and go to state 7


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: functionMain functionList .
    3 functionList: functionList . function

    VAR  shift, and go to state 8

    $default  reduce using rule 1 (program)

    function  go to state 9


state 7

    4 functionMain: MAIN LPAREN RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 10


state 8

    5 function: VAR . LPAREN RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 11


state 9

    3 functionList: functionList function .

    $default  reduce using rule 3 (functionList)


state 10

    4 functionMain: MAIN LPAREN RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 6 (statementList)

    statementList  go to state 12


state 11

    5 function: VAR LPAREN . RPAREN LBRACE statementList RBRACE

    RPAREN  shift, and go to state 13


state 12

    4 functionMain: MAIN LPAREN RPAREN LBRACE statementList . RBRACE
    7 statementList: statementList . statement

    RBRACE       shift, and go to state 14
    ARRAYDEFINE  shift, and go to state 15
    IF           shift, and go to state 16
    WHILE        shift, and go to state 17
    VAR          shift, and go to state 18

    statement        go to state 19
    statementWhile   go to state 20
    statementIf      go to state 21
    statementAssign  go to state 22
    arrayDefine      go to state 23


state 13

    5 function: VAR LPAREN RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 24


state 14

    4 functionMain: MAIN LPAREN RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 4 (functionMain)


state 15

   34 arrayDefine: ARRAYDEFINE . VAR LBRACKET CONST RBRACKET SEMI

    VAR  shift, and go to state 25


state 16

   13 statementIf: IF . LPAREN expr RPAREN LBRACE statementList RBRACE
   14            | IF . LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LPAREN  shift, and go to state 26


state 17

   12 statementWhile: WHILE . LPAREN expr RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 27


state 18

   15 statementAssign: VAR . EQUAL expr SEMI
   16                | VAR . LBRACKET expr RBRACKET EQUAL expr SEMI

    EQUAL     shift, and go to state 28
    LBRACKET  shift, and go to state 29


state 19

    7 statementList: statementList statement .

    $default  reduce using rule 7 (statementList)


state 20

   10 statement: statementWhile .

    $default  reduce using rule 10 (statement)


state 21

    9 statement: statementIf .

    $default  reduce using rule 9 (statement)


state 22

    8 statement: statementAssign .

    $default  reduce using rule 8 (statement)


state 23

   11 statement: arrayDefine .

    $default  reduce using rule 11 (statement)


state 24

    5 function: VAR LPAREN RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 6 (statementList)

    statementList  go to state 30


state 25

   34 arrayDefine: ARRAYDEFINE VAR . LBRACKET CONST RBRACKET SEMI

    LBRACKET  shift, and go to state 31


state 26

   13 statementIf: IF LPAREN . expr RPAREN LBRACE statementList RBRACE
   14            | IF LPAREN . expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 35


state 27

   12 statementWhile: WHILE LPAREN . expr RPAREN LBRACE statementList RBRACE

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 36


state 28

   15 statementAssign: VAR EQUAL . expr SEMI

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 37


state 29

   16 statementAssign: VAR LBRACKET . expr RBRACKET EQUAL expr SEMI

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 38


state 30

    5 function: VAR LPAREN RPAREN LBRACE statementList . RBRACE
    7 statementList: statementList . statement

    RBRACE       shift, and go to state 39
    ARRAYDEFINE  shift, and go to state 15
    IF           shift, and go to state 16
    WHILE        shift, and go to state 17
    VAR          shift, and go to state 18

    statement        go to state 19
    statementWhile   go to state 20
    statementIf      go to state 21
    statementAssign  go to state 22
    arrayDefine      go to state 23


state 31

   34 arrayDefine: ARRAYDEFINE VAR LBRACKET . CONST RBRACKET SEMI

    CONST  shift, and go to state 40


state 32

   31 expr: VAR .
   33     | VAR . LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 41

    $default  reduce using rule 31 (expr)


state 33

   32 expr: CONST .

    $default  reduce using rule 32 (expr)


state 34

   17 expr: LPAREN . expr RPAREN

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 42


state 35

   13 statementIf: IF LPAREN expr . RPAREN LBRACE statementList RBRACE
   14            | IF LPAREN expr . RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    OR              shift, and go to state 43
    AND             shift, and go to state 44
    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55
    RPAREN          shift, and go to state 56


state 36

   12 statementWhile: WHILE LPAREN expr . RPAREN LBRACE statementList RBRACE
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    OR              shift, and go to state 43
    AND             shift, and go to state 44
    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55
    RPAREN          shift, and go to state 57


state 37

   15 statementAssign: VAR EQUAL expr . SEMI
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    OR              shift, and go to state 43
    AND             shift, and go to state 44
    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55
    SEMI            shift, and go to state 58


state 38

   16 statementAssign: VAR LBRACKET expr . RBRACKET EQUAL expr SEMI
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    OR              shift, and go to state 43
    AND             shift, and go to state 44
    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55
    RBRACKET        shift, and go to state 59


state 39

    5 function: VAR LPAREN RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 5 (function)


state 40

   34 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST . RBRACKET SEMI

    RBRACKET  shift, and go to state 60


state 41

   33 expr: VAR LBRACKET . expr RBRACKET

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 61


state 42

   17 expr: LPAREN expr . RPAREN
   18     | expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    OR              shift, and go to state 43
    AND             shift, and go to state 44
    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55
    RPAREN          shift, and go to state 62


state 43

   24 expr: expr OR . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 63


state 44

   23 expr: expr AND . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 64


state 45

   30 expr: expr LSS . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 65


state 46

   29 expr: expr GTR . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 66


state 47

   26 expr: expr NEQ . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 67


state 48

   28 expr: expr LEQ . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 68


state 49

   27 expr: expr GEQ . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 69


state 50

   25 expr: expr TEST_FOR_EQUAL . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 70


state 51

   19 expr: expr MINUS . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 71


state 52

   18 expr: expr PLUS . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 72


state 53

   22 expr: expr XOR . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 73


state 54

   21 expr: expr DIV . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 74


state 55

   20 expr: expr MULT . expr

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 75


state 56

   13 statementIf: IF LPAREN expr RPAREN . LBRACE statementList RBRACE
   14            | IF LPAREN expr RPAREN . LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LBRACE  shift, and go to state 76


state 57

   12 statementWhile: WHILE LPAREN expr RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 77


state 58

   15 statementAssign: VAR EQUAL expr SEMI .

    $default  reduce using rule 15 (statementAssign)


state 59

   16 statementAssign: VAR LBRACKET expr RBRACKET . EQUAL expr SEMI

    EQUAL  shift, and go to state 78


state 60

   34 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET . SEMI

    SEMI  shift, and go to state 79


state 61

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   33     | VAR LBRACKET expr . RBRACKET

    OR              shift, and go to state 43
    AND             shift, and go to state 44
    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55
    RBRACKET        shift, and go to state 80


state 62

   17 expr: LPAREN expr RPAREN .

    $default  reduce using rule 17 (expr)


state 63

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   24     | expr OR expr .
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55

    $default  reduce using rule 24 (expr)


state 64

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   23     | expr AND expr .
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55

    $default  reduce using rule 23 (expr)


state 65

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr
   30     | expr LSS expr .

    MINUS  shift, and go to state 51
    PLUS   shift, and go to state 52
    XOR    shift, and go to state 53
    DIV    shift, and go to state 54
    MULT   shift, and go to state 55

    $default  reduce using rule 30 (expr)


state 66

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   29     | expr GTR expr .
   30     | expr . LSS expr

    MINUS  shift, and go to state 51
    PLUS   shift, and go to state 52
    XOR    shift, and go to state 53
    DIV    shift, and go to state 54
    MULT   shift, and go to state 55

    $default  reduce using rule 29 (expr)


state 67

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   26     | expr NEQ expr .
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    MINUS  shift, and go to state 51
    PLUS   shift, and go to state 52
    XOR    shift, and go to state 53
    DIV    shift, and go to state 54
    MULT   shift, and go to state 55

    $default  reduce using rule 26 (expr)


state 68

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   28     | expr LEQ expr .
   29     | expr . GTR expr
   30     | expr . LSS expr

    MINUS  shift, and go to state 51
    PLUS   shift, and go to state 52
    XOR    shift, and go to state 53
    DIV    shift, and go to state 54
    MULT   shift, and go to state 55

    $default  reduce using rule 28 (expr)


state 69

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   27     | expr GEQ expr .
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    MINUS  shift, and go to state 51
    PLUS   shift, and go to state 52
    XOR    shift, and go to state 53
    DIV    shift, and go to state 54
    MULT   shift, and go to state 55

    $default  reduce using rule 27 (expr)


state 70

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   25     | expr TEST_FOR_EQUAL expr .
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    MINUS  shift, and go to state 51
    PLUS   shift, and go to state 52
    XOR    shift, and go to state 53
    DIV    shift, and go to state 54
    MULT   shift, and go to state 55

    $default  reduce using rule 25 (expr)


state 71

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   19     | expr MINUS expr .
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    XOR   shift, and go to state 53
    DIV   shift, and go to state 54
    MULT  shift, and go to state 55

    $default  reduce using rule 19 (expr)


state 72

   18 expr: expr . PLUS expr
   18     | expr PLUS expr .
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    XOR   shift, and go to state 53
    DIV   shift, and go to state 54
    MULT  shift, and go to state 55

    $default  reduce using rule 18 (expr)


state 73

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   22     | expr XOR expr .
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    DIV   shift, and go to state 54
    MULT  shift, and go to state 55

    $default  reduce using rule 22 (expr)


state 74

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   21     | expr DIV expr .
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    $default  reduce using rule 21 (expr)


state 75

   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   20     | expr MULT expr .
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    $default  reduce using rule 20 (expr)


state 76

   13 statementIf: IF LPAREN expr RPAREN LBRACE . statementList RBRACE
   14            | IF LPAREN expr RPAREN LBRACE . statementList RBRACE ELSE LBRACE statementList RBRACE

    $default  reduce using rule 6 (statementList)

    statementList  go to state 81


state 77

   12 statementWhile: WHILE LPAREN expr RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 6 (statementList)

    statementList  go to state 82


state 78

   16 statementAssign: VAR LBRACKET expr RBRACKET EQUAL . expr SEMI

    VAR     shift, and go to state 32
    CONST   shift, and go to state 33
    LPAREN  shift, and go to state 34

    expr  go to state 83


state 79

   34 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI .

    $default  reduce using rule 34 (arrayDefine)


state 80

   33 expr: VAR LBRACKET expr RBRACKET .

    $default  reduce using rule 33 (expr)


state 81

    7 statementList: statementList . statement
   13 statementIf: IF LPAREN expr RPAREN LBRACE statementList . RBRACE
   14            | IF LPAREN expr RPAREN LBRACE statementList . RBRACE ELSE LBRACE statementList RBRACE

    RBRACE       shift, and go to state 84
    ARRAYDEFINE  shift, and go to state 15
    IF           shift, and go to state 16
    WHILE        shift, and go to state 17
    VAR          shift, and go to state 18

    statement        go to state 19
    statementWhile   go to state 20
    statementIf      go to state 21
    statementAssign  go to state 22
    arrayDefine      go to state 23


state 82

    7 statementList: statementList . statement
   12 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList . RBRACE

    RBRACE       shift, and go to state 85
    ARRAYDEFINE  shift, and go to state 15
    IF           shift, and go to state 16
    WHILE        shift, and go to state 17
    VAR          shift, and go to state 18

    statement        go to state 19
    statementWhile   go to state 20
    statementIf      go to state 21
    statementAssign  go to state 22
    arrayDefine      go to state 23


state 83

   16 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr . SEMI
   18 expr: expr . PLUS expr
   19     | expr . MINUS expr
   20     | expr . MULT expr
   21     | expr . DIV expr
   22     | expr . XOR expr
   23     | expr . AND expr
   24     | expr . OR expr
   25     | expr . TEST_FOR_EQUAL expr
   26     | expr . NEQ expr
   27     | expr . GEQ expr
   28     | expr . LEQ expr
   29     | expr . GTR expr
   30     | expr . LSS expr

    OR              shift, and go to state 43
    AND             shift, and go to state 44
    LSS             shift, and go to state 45
    GTR             shift, and go to state 46
    NEQ             shift, and go to state 47
    LEQ             shift, and go to state 48
    GEQ             shift, and go to state 49
    TEST_FOR_EQUAL  shift, and go to state 50
    MINUS           shift, and go to state 51
    PLUS            shift, and go to state 52
    XOR             shift, and go to state 53
    DIV             shift, and go to state 54
    MULT            shift, and go to state 55
    SEMI            shift, and go to state 86


state 84

   13 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE .
   14            | IF LPAREN expr RPAREN LBRACE statementList RBRACE . ELSE LBRACE statementList RBRACE

    ELSE  shift, and go to state 87

    $default  reduce using rule 13 (statementIf)


state 85

   12 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 12 (statementWhile)


state 86

   16 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr SEMI .

    $default  reduce using rule 16 (statementAssign)


state 87

   14 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 88


state 88

   14 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE . statementList RBRACE

    $default  reduce using rule 6 (statementList)

    statementList  go to state 89


state 89

    7 statementList: statementList . statement
   14 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList . RBRACE

    RBRACE       shift, and go to state 90
    ARRAYDEFINE  shift, and go to state 15
    IF           shift, and go to state 16
    WHILE        shift, and go to state 17
    VAR          shift, and go to state 18

    statement        go to state 19
    statementWhile   go to state 20
    statementIf      go to state 21
    statementAssign  go to state 22
    arrayDefine      go to state 23


state 90

   14 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE .

    $default  reduce using rule 14 (statementIf)
