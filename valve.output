Terminals unused in grammar

   INPUTS
   OUTPUTS
   COMMA
   BANG
   VAR_METHOD
   CONST_FLOAT


Grammar

    0 $accept: program $end

    1 program: statementList

    2 statementList: /* empty */
    3              | statementList statement

    4 statement: statementAssign
    5          | statementIf
    6          | statementWhile
    7          | arrayDefine

    8 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList RBRACE

    9 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE
   10            | IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

   11 statementAssign: VAR EQUAL expr SEMI
   12                | VAR LBRACKET expr RBRACKET EQUAL expr SEMI

   13 expr: LPAREN expr RPAREN
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr MULT expr
   17     | expr DIV expr
   18     | expr XOR expr
   19     | expr AND expr
   20     | expr OR expr
   21     | expr TEST_FOR_EQUAL expr
   22     | expr NEQ expr
   23     | expr GEQ expr
   24     | expr LEQ expr
   25     | expr GTR expr
   26     | expr LSS expr
   27     | VAR
   28     | CONST
   29     | VAR LBRACKET expr RBRACKET

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI


Terminals, with rules where they appear

$end (0) 0
error (256)
INPUTS (258)
OUTPUTS (259)
COMMA (260)
BANG (261)
EQUAL (262) 11 12
LBRACE (263) 8 9 10
RBRACE (264) 8 9 10
ARRAYDEFINE (265) 30
IF (266) 9 10
ELSE (267) 10
WHILE (268) 8
VAR (269) 11 12 27 29 30
VAR_METHOD (270)
CONST (271) 28 30
CONST_FLOAT (272)
OR (273) 20
AND (274) 19
LSS (275) 26
GTR (276) 25
NEQ (277) 22
LEQ (278) 24
GEQ (279) 23
TEST_FOR_EQUAL (280) 21
LPAREN (281) 8 9 10 13
MINUS (282) 15
PLUS (283) 14
XOR (284) 18
DIV (285) 17
MULT (286) 16
LBRACKET (287) 12 29 30
RBRACKET (288) 12 29 30
RPAREN (289) 8 9 10 13
SEMI (290) 11 12 30


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
statementList (38)
    on left: 2 3, on right: 1 3 8 9 10
statement (39)
    on left: 4 5 6 7, on right: 3
statementWhile (40)
    on left: 8, on right: 6
statementIf (41)
    on left: 9 10, on right: 5
statementAssign (42)
    on left: 11 12, on right: 4
expr (43)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 29
arrayDefine (44)
    on left: 30, on right: 7


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (statementList)

    program        go to state 1
    statementList  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: statementList .
    3 statementList: statementList . statement

    ARRAYDEFINE  shift, and go to state 4
    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    VAR          shift, and go to state 7

    $default  reduce using rule 1 (program)

    statement        go to state 8
    statementWhile   go to state 9
    statementIf      go to state 10
    statementAssign  go to state 11
    arrayDefine      go to state 12


state 3

    0 $accept: program $end .

    $default  accept


state 4

   30 arrayDefine: ARRAYDEFINE . VAR LBRACKET CONST RBRACKET SEMI

    VAR  shift, and go to state 13


state 5

    9 statementIf: IF . LPAREN expr RPAREN LBRACE statementList RBRACE
   10            | IF . LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LPAREN  shift, and go to state 14


state 6

    8 statementWhile: WHILE . LPAREN expr RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 15


state 7

   11 statementAssign: VAR . EQUAL expr SEMI
   12                | VAR . LBRACKET expr RBRACKET EQUAL expr SEMI

    EQUAL     shift, and go to state 16
    LBRACKET  shift, and go to state 17


state 8

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 9

    6 statement: statementWhile .

    $default  reduce using rule 6 (statement)


state 10

    5 statement: statementIf .

    $default  reduce using rule 5 (statement)


state 11

    4 statement: statementAssign .

    $default  reduce using rule 4 (statement)


state 12

    7 statement: arrayDefine .

    $default  reduce using rule 7 (statement)


state 13

   30 arrayDefine: ARRAYDEFINE VAR . LBRACKET CONST RBRACKET SEMI

    LBRACKET  shift, and go to state 18


state 14

    9 statementIf: IF LPAREN . expr RPAREN LBRACE statementList RBRACE
   10            | IF LPAREN . expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 22


state 15

    8 statementWhile: WHILE LPAREN . expr RPAREN LBRACE statementList RBRACE

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 23


state 16

   11 statementAssign: VAR EQUAL . expr SEMI

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 24


state 17

   12 statementAssign: VAR LBRACKET . expr RBRACKET EQUAL expr SEMI

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 25


state 18

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET . CONST RBRACKET SEMI

    CONST  shift, and go to state 26


state 19

   27 expr: VAR .
   29     | VAR . LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 27

    $default  reduce using rule 27 (expr)


state 20

   28 expr: CONST .

    $default  reduce using rule 28 (expr)


state 21

   13 expr: LPAREN . expr RPAREN

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 28


state 22

    9 statementIf: IF LPAREN expr . RPAREN LBRACE statementList RBRACE
   10            | IF LPAREN expr . RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    OR              shift, and go to state 29
    AND             shift, and go to state 30
    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41
    RPAREN          shift, and go to state 42


state 23

    8 statementWhile: WHILE LPAREN expr . RPAREN LBRACE statementList RBRACE
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    OR              shift, and go to state 29
    AND             shift, and go to state 30
    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41
    RPAREN          shift, and go to state 43


state 24

   11 statementAssign: VAR EQUAL expr . SEMI
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    OR              shift, and go to state 29
    AND             shift, and go to state 30
    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41
    SEMI            shift, and go to state 44


state 25

   12 statementAssign: VAR LBRACKET expr . RBRACKET EQUAL expr SEMI
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    OR              shift, and go to state 29
    AND             shift, and go to state 30
    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41
    RBRACKET        shift, and go to state 45


state 26

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST . RBRACKET SEMI

    RBRACKET  shift, and go to state 46


state 27

   29 expr: VAR LBRACKET . expr RBRACKET

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 47


state 28

   13 expr: LPAREN expr . RPAREN
   14     | expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    OR              shift, and go to state 29
    AND             shift, and go to state 30
    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41
    RPAREN          shift, and go to state 48


state 29

   20 expr: expr OR . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 49


state 30

   19 expr: expr AND . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 50


state 31

   26 expr: expr LSS . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 51


state 32

   25 expr: expr GTR . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 52


state 33

   22 expr: expr NEQ . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 53


state 34

   24 expr: expr LEQ . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 54


state 35

   23 expr: expr GEQ . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 55


state 36

   21 expr: expr TEST_FOR_EQUAL . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 56


state 37

   15 expr: expr MINUS . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 57


state 38

   14 expr: expr PLUS . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 58


state 39

   18 expr: expr XOR . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 59


state 40

   17 expr: expr DIV . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 60


state 41

   16 expr: expr MULT . expr

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 61


state 42

    9 statementIf: IF LPAREN expr RPAREN . LBRACE statementList RBRACE
   10            | IF LPAREN expr RPAREN . LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LBRACE  shift, and go to state 62


state 43

    8 statementWhile: WHILE LPAREN expr RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 63


state 44

   11 statementAssign: VAR EQUAL expr SEMI .

    $default  reduce using rule 11 (statementAssign)


state 45

   12 statementAssign: VAR LBRACKET expr RBRACKET . EQUAL expr SEMI

    EQUAL  shift, and go to state 64


state 46

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET . SEMI

    SEMI  shift, and go to state 65


state 47

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr
   29     | VAR LBRACKET expr . RBRACKET

    OR              shift, and go to state 29
    AND             shift, and go to state 30
    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41
    RBRACKET        shift, and go to state 66


state 48

   13 expr: LPAREN expr RPAREN .

    $default  reduce using rule 13 (expr)


state 49

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   20     | expr OR expr .
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41

    $default  reduce using rule 20 (expr)


state 50

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   19     | expr AND expr .
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41

    $default  reduce using rule 19 (expr)


state 51

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr
   26     | expr LSS expr .

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41

    $default  reduce using rule 26 (expr)


state 52

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   25     | expr GTR expr .
   26     | expr . LSS expr

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41

    $default  reduce using rule 25 (expr)


state 53

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   22     | expr NEQ expr .
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41

    $default  reduce using rule 22 (expr)


state 54

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   24     | expr LEQ expr .
   25     | expr . GTR expr
   26     | expr . LSS expr

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41

    $default  reduce using rule 24 (expr)


state 55

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   23     | expr GEQ expr .
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41

    $default  reduce using rule 23 (expr)


state 56

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   21     | expr TEST_FOR_EQUAL expr .
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41

    $default  reduce using rule 21 (expr)


state 57

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    XOR   shift, and go to state 39
    DIV   shift, and go to state 40
    MULT  shift, and go to state 41

    $default  reduce using rule 15 (expr)


state 58

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    XOR   shift, and go to state 39
    DIV   shift, and go to state 40
    MULT  shift, and go to state 41

    $default  reduce using rule 14 (expr)


state 59

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   18     | expr XOR expr .
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    DIV   shift, and go to state 40
    MULT  shift, and go to state 41

    $default  reduce using rule 18 (expr)


state 60

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    $default  reduce using rule 17 (expr)


state 61

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   16     | expr MULT expr .
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    $default  reduce using rule 16 (expr)


state 62

    9 statementIf: IF LPAREN expr RPAREN LBRACE . statementList RBRACE
   10            | IF LPAREN expr RPAREN LBRACE . statementList RBRACE ELSE LBRACE statementList RBRACE

    $default  reduce using rule 2 (statementList)

    statementList  go to state 67


state 63

    8 statementWhile: WHILE LPAREN expr RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 2 (statementList)

    statementList  go to state 68


state 64

   12 statementAssign: VAR LBRACKET expr RBRACKET EQUAL . expr SEMI

    VAR     shift, and go to state 19
    CONST   shift, and go to state 20
    LPAREN  shift, and go to state 21

    expr  go to state 69


state 65

   30 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI .

    $default  reduce using rule 30 (arrayDefine)


state 66

   29 expr: VAR LBRACKET expr RBRACKET .

    $default  reduce using rule 29 (expr)


state 67

    3 statementList: statementList . statement
    9 statementIf: IF LPAREN expr RPAREN LBRACE statementList . RBRACE
   10            | IF LPAREN expr RPAREN LBRACE statementList . RBRACE ELSE LBRACE statementList RBRACE

    RBRACE       shift, and go to state 70
    ARRAYDEFINE  shift, and go to state 4
    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    VAR          shift, and go to state 7

    statement        go to state 8
    statementWhile   go to state 9
    statementIf      go to state 10
    statementAssign  go to state 11
    arrayDefine      go to state 12


state 68

    3 statementList: statementList . statement
    8 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList . RBRACE

    RBRACE       shift, and go to state 71
    ARRAYDEFINE  shift, and go to state 4
    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    VAR          shift, and go to state 7

    statement        go to state 8
    statementWhile   go to state 9
    statementIf      go to state 10
    statementAssign  go to state 11
    arrayDefine      go to state 12


state 69

   12 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr . SEMI
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MULT expr
   17     | expr . DIV expr
   18     | expr . XOR expr
   19     | expr . AND expr
   20     | expr . OR expr
   21     | expr . TEST_FOR_EQUAL expr
   22     | expr . NEQ expr
   23     | expr . GEQ expr
   24     | expr . LEQ expr
   25     | expr . GTR expr
   26     | expr . LSS expr

    OR              shift, and go to state 29
    AND             shift, and go to state 30
    LSS             shift, and go to state 31
    GTR             shift, and go to state 32
    NEQ             shift, and go to state 33
    LEQ             shift, and go to state 34
    GEQ             shift, and go to state 35
    TEST_FOR_EQUAL  shift, and go to state 36
    MINUS           shift, and go to state 37
    PLUS            shift, and go to state 38
    XOR             shift, and go to state 39
    DIV             shift, and go to state 40
    MULT            shift, and go to state 41
    SEMI            shift, and go to state 72


state 70

    9 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE .
   10            | IF LPAREN expr RPAREN LBRACE statementList RBRACE . ELSE LBRACE statementList RBRACE

    ELSE  shift, and go to state 73

    $default  reduce using rule 9 (statementIf)


state 71

    8 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 8 (statementWhile)


state 72

   12 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr SEMI .

    $default  reduce using rule 12 (statementAssign)


state 73

   10 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 74


state 74

   10 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE . statementList RBRACE

    $default  reduce using rule 2 (statementList)

    statementList  go to state 75


state 75

    3 statementList: statementList . statement
   10 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList . RBRACE

    RBRACE       shift, and go to state 76
    ARRAYDEFINE  shift, and go to state 4
    IF           shift, and go to state 5
    WHILE        shift, and go to state 6
    VAR          shift, and go to state 7

    statement        go to state 8
    statementWhile   go to state 9
    statementIf      go to state 10
    statementAssign  go to state 11
    arrayDefine      go to state 12


state 76

   10 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE .

    $default  reduce using rule 10 (statementIf)
