Terminals unused in grammar

   INPUTS
   OUTPUTS
   VAR_METHOD
   CONST_FLOAT
   SHR
   SHL


Grammar

    0 $accept: program $end

    1 program: functionDefnMain functionDefnList

    2 functionDefnList: /* empty */
    3                 | functionDefnList functionDefn

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    5 functionDefn: VAR LPAREN defnArgList RPAREN LBRACE statementList RBRACE
    6             | MOVEABSOLUTE LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    7 statementList: /* empty */
    8              | statementList statement

    9 statement: statementAssign
   10          | statementIf
   11          | statementWhile
   12          | VAR LPAREN argList RPAREN SEMI
   13          | MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   14          | MOVEABSOLUTE LPAREN argList RPAREN SEMI
   15          | MOVERELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   16          | MOVERELATIVE LPAREN argList RPAREN SEMI
   17          | SLEEP LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   18          | SLEEP LPAREN argList RPAREN SEMI
   19          | SLEEPUNTIL LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   20          | SLEEPUNTIL LPAREN argList RPAREN SEMI
   21          | LED LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   22          | LED LPAREN argList RPAREN SEMI
   23          | RPM LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   24          | RPM LPAREN argList RPAREN SEMI
   25          | RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   26          | RPMx10k LPAREN argList RPAREN SEMI
   27          | ACCELMICROSEC LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   28          | ACCELMICROSEC LPAREN argList RPAREN SEMI
   29          | DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   30          | DEGREEx10kABSOLUTE LPAREN argList RPAREN SEMI
   31          | DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   32          | DEGREEx10kRELATIVE LPAREN argList RPAREN SEMI
   33          | WAITFORIDLE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   34          | WAITFORIDLE LPAREN argList RPAREN SEMI
   35          | PRINTNUMBER LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   36          | PRINTNUMBER LPAREN argList RPAREN SEMI
   37          | GETINPUT LPAREN BITWISEAND VAR RPAREN SEMI
   38          | GETINPUT LPAREN argList RPAREN SEMI
   39          | SETOUTPUT LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   40          | SETOUTPUT LPAREN argList RPAREN SEMI
   41          | GETADC LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   42          | GETADC LPAREN argList RPAREN SEMI
   43          | GETTEMP LPAREN BITWISEAND VAR RPAREN SEMI
   44          | GETTEMP LPAREN argList RPAREN SEMI
   45          | GETPOSITION LPAREN BITWISEAND VAR RPAREN SEMI
   46          | GETPOSITION LPAREN argList RPAREN SEMI
   47          | RESET LPAREN BITWISEAND VAR RPAREN SEMI
   48          | RESET LPAREN argList RPAREN SEMI
   49          | arrayDefine

   50 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList RBRACE

   51 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE
   52            | IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

   53 statementAssign: VAR EQUAL expr SEMI
   54                | VAR LBRACKET expr RBRACKET EQUAL expr SEMI

   55 expr: MINUS expr
   56     | BANG expr
   57     | TILDE expr
   58     | LPAREN expr RPAREN
   59     | expr PLUS expr
   60     | expr MINUS expr
   61     | expr MULT expr
   62     | expr DIV expr
   63     | expr XOR expr
   64     | expr AND expr
   65     | expr OR expr
   66     | expr BITWISEAND expr
   67     | expr BITWISEOR expr
   68     | expr TEST_FOR_EQUAL expr
   69     | expr NEQ expr
   70     | expr GEQ expr
   71     | expr LEQ expr
   72     | expr GTR expr
   73     | expr LSS expr
   74     | VAR
   75     | CONST
   76     | VAR LPAREN argList RPAREN
   77     | VAR LBRACKET expr RBRACKET

   78 argList: /* empty */
   79        | commaArgList

   80 commaArgList: expr
   81             | expr COMMA commaArgList

   82 defnArgList: /* empty */
   83            | defnCommaArgList

   84 defnCommaArgList: VAR
   85                 | BITWISEAND VAR
   86                 | defnCommaArgList COMMA VAR
   87                 | defnCommaArgList COMMA BITWISEAND VAR

   88 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI


Terminals, with rules where they appear

$end (0) 0
error (256)
INPUTS (258)
OUTPUTS (259)
COMMA (260) 13 15 17 19 21 23 25 27 29 31 33 35 39 41 81 86 87
EQUAL (261) 53 54
LBRACE (262) 4 5 6 50 51 52
RBRACE (263) 4 5 6 50 51 52
ARRAYDEFINE (264) 88
IF (265) 51 52
ELSE (266) 52
WHILE (267) 50
VAR (268) 5 12 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47
    53 54 74 76 77 84 85 86 87 88
VAR_METHOD (269)
CONST (270) 75 88
CONST_FLOAT (271)
MAIN (272) 4
MOVEABSOLUTE (273) 6 13 14
MOVERELATIVE (274) 15 16
SLEEP (275) 17 18
SLEEPUNTIL (276) 19 20
LED (277) 21 22
RPM (278) 23 24
RPMx10k (279) 25 26
ACCELMICROSEC (280) 27 28
DEGREEx10kABSOLUTE (281) 29 30
DEGREEx10kRELATIVE (282) 31 32
WAITFORIDLE (283) 33 34
PRINTNUMBER (284) 35 36
GETINPUT (285) 37 38
SETOUTPUT (286) 39 40
GETADC (287) 41 42
GETTEMP (288) 43 44
GETPOSITION (289) 45 46
RESET (290) 47 48
BITWISEOR (291) 67
BITWISEAND (292) 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45
    47 66 85 87
OR (293) 65
AND (294) 64
SHR (295)
SHL (296)
LSS (297) 73
GTR (298) 72
NEQ (299) 69
LEQ (300) 71
GEQ (301) 70
TEST_FOR_EQUAL (302) 68
LPAREN (303) 4 5 6 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    50 51 52 58 76
MINUS (304) 55 60
PLUS (305) 59
XOR (306) 63
DIV (307) 62
MULT (308) 61
LBRACKET (309) 54 77 88
RBRACKET (310) 54 77 88
RPAREN (311) 4 5 6 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    50 51 52 58 76
SEMI (312) 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 53 54 88
BANG (313) 56
TILDE (314) 57


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
functionDefnList (62)
    on left: 2 3, on right: 1 3
functionDefnMain (63)
    on left: 4, on right: 1
functionDefn (64)
    on left: 5 6, on right: 3
statementList (65)
    on left: 7 8, on right: 4 5 6 8 50 51 52
statement (66)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49, on right: 8
statementWhile (67)
    on left: 50, on right: 11
statementIf (68)
    on left: 51 52, on right: 10
statementAssign (69)
    on left: 53 54, on right: 9
expr (70)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 76 77, on right: 13 15 17 19 21 23 25 27 29 31 33 35 39
    41 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 77 80 81
argList (71)
    on left: 78 79, on right: 12 14 16 18 20 22 24 26 28 30 32 34 36
    38 40 42 44 46 48 76
commaArgList (72)
    on left: 80 81, on right: 79 81
defnArgList (73)
    on left: 82 83, on right: 4 5 6
defnCommaArgList (74)
    on left: 84 85 86 87, on right: 83 86 87
arrayDefine (75)
    on left: 88, on right: 49


state 0

    0 $accept: . program $end

    MAIN  shift, and go to state 1

    program           go to state 2
    functionDefnMain  go to state 3


state 1

    4 functionDefnMain: MAIN . LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: functionDefnMain . functionDefnList

    $default  reduce using rule 2 (functionDefnList)

    functionDefnList  go to state 6


state 4

    4 functionDefnMain: MAIN LPAREN . defnArgList RPAREN LBRACE statementList RBRACE

    VAR         shift, and go to state 7
    BITWISEAND  shift, and go to state 8

    $default  reduce using rule 82 (defnArgList)

    defnArgList       go to state 9
    defnCommaArgList  go to state 10


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: functionDefnMain functionDefnList .
    3 functionDefnList: functionDefnList . functionDefn

    VAR           shift, and go to state 11
    MOVEABSOLUTE  shift, and go to state 12

    $default  reduce using rule 1 (program)

    functionDefn  go to state 13


state 7

   84 defnCommaArgList: VAR .

    $default  reduce using rule 84 (defnCommaArgList)


state 8

   85 defnCommaArgList: BITWISEAND . VAR

    VAR  shift, and go to state 14


state 9

    4 functionDefnMain: MAIN LPAREN defnArgList . RPAREN LBRACE statementList RBRACE

    RPAREN  shift, and go to state 15


state 10

   83 defnArgList: defnCommaArgList .
   86 defnCommaArgList: defnCommaArgList . COMMA VAR
   87                 | defnCommaArgList . COMMA BITWISEAND VAR

    COMMA  shift, and go to state 16

    $default  reduce using rule 83 (defnArgList)


state 11

    5 functionDefn: VAR . LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 17


state 12

    6 functionDefn: MOVEABSOLUTE . LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 18


state 13

    3 functionDefnList: functionDefnList functionDefn .

    $default  reduce using rule 3 (functionDefnList)


state 14

   85 defnCommaArgList: BITWISEAND VAR .

    $default  reduce using rule 85 (defnCommaArgList)


state 15

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 19


state 16

   86 defnCommaArgList: defnCommaArgList COMMA . VAR
   87                 | defnCommaArgList COMMA . BITWISEAND VAR

    VAR         shift, and go to state 20
    BITWISEAND  shift, and go to state 21


state 17

    5 functionDefn: VAR LPAREN . defnArgList RPAREN LBRACE statementList RBRACE

    VAR         shift, and go to state 7
    BITWISEAND  shift, and go to state 8

    $default  reduce using rule 82 (defnArgList)

    defnArgList       go to state 22
    defnCommaArgList  go to state 10


state 18

    6 functionDefn: MOVEABSOLUTE LPAREN . defnArgList RPAREN LBRACE statementList RBRACE

    VAR         shift, and go to state 7
    BITWISEAND  shift, and go to state 8

    $default  reduce using rule 82 (defnArgList)

    defnArgList       go to state 23
    defnCommaArgList  go to state 10


state 19

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 24


state 20

   86 defnCommaArgList: defnCommaArgList COMMA VAR .

    $default  reduce using rule 86 (defnCommaArgList)


state 21

   87 defnCommaArgList: defnCommaArgList COMMA BITWISEAND . VAR

    VAR  shift, and go to state 25


state 22

    5 functionDefn: VAR LPAREN defnArgList . RPAREN LBRACE statementList RBRACE

    RPAREN  shift, and go to state 26


state 23

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList . RPAREN LBRACE statementList RBRACE

    RPAREN  shift, and go to state 27


state 24

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN LBRACE statementList . RBRACE
    8 statementList: statementList . statement

    RBRACE              shift, and go to state 28
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42
    WAITFORIDLE         shift, and go to state 43
    PRINTNUMBER         shift, and go to state 44
    GETINPUT            shift, and go to state 45
    SETOUTPUT           shift, and go to state 46
    GETADC              shift, and go to state 47
    GETTEMP             shift, and go to state 48
    GETPOSITION         shift, and go to state 49
    RESET               shift, and go to state 50

    statement        go to state 51
    statementWhile   go to state 52
    statementIf      go to state 53
    statementAssign  go to state 54
    arrayDefine      go to state 55


state 25

   87 defnCommaArgList: defnCommaArgList COMMA BITWISEAND VAR .

    $default  reduce using rule 87 (defnCommaArgList)


state 26

    5 functionDefn: VAR LPAREN defnArgList RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 56


state 27

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 57


state 28

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 4 (functionDefnMain)


state 29

   88 arrayDefine: ARRAYDEFINE . VAR LBRACKET CONST RBRACKET SEMI

    VAR  shift, and go to state 58


state 30

   51 statementIf: IF . LPAREN expr RPAREN LBRACE statementList RBRACE
   52            | IF . LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LPAREN  shift, and go to state 59


state 31

   50 statementWhile: WHILE . LPAREN expr RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 60


state 32

   12 statement: VAR . LPAREN argList RPAREN SEMI
   53 statementAssign: VAR . EQUAL expr SEMI
   54                | VAR . LBRACKET expr RBRACKET EQUAL expr SEMI

    EQUAL     shift, and go to state 61
    LPAREN    shift, and go to state 62
    LBRACKET  shift, and go to state 63


state 33

   13 statement: MOVEABSOLUTE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   14          | MOVEABSOLUTE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 64


state 34

   15 statement: MOVERELATIVE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   16          | MOVERELATIVE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 65


state 35

   17 statement: SLEEP . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   18          | SLEEP . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 66


state 36

   19 statement: SLEEPUNTIL . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   20          | SLEEPUNTIL . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 67


state 37

   21 statement: LED . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   22          | LED . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 68


state 38

   23 statement: RPM . LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   24          | RPM . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 69


state 39

   25 statement: RPMx10k . LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   26          | RPMx10k . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 70


state 40

   27 statement: ACCELMICROSEC . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   28          | ACCELMICROSEC . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 71


state 41

   29 statement: DEGREEx10kABSOLUTE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   30          | DEGREEx10kABSOLUTE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 72


state 42

   31 statement: DEGREEx10kRELATIVE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   32          | DEGREEx10kRELATIVE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 73


state 43

   33 statement: WAITFORIDLE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   34          | WAITFORIDLE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 74


state 44

   35 statement: PRINTNUMBER . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   36          | PRINTNUMBER . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 75


state 45

   37 statement: GETINPUT . LPAREN BITWISEAND VAR RPAREN SEMI
   38          | GETINPUT . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 76


state 46

   39 statement: SETOUTPUT . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   40          | SETOUTPUT . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 77


state 47

   41 statement: GETADC . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   42          | GETADC . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 78


state 48

   43 statement: GETTEMP . LPAREN BITWISEAND VAR RPAREN SEMI
   44          | GETTEMP . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 79


state 49

   45 statement: GETPOSITION . LPAREN BITWISEAND VAR RPAREN SEMI
   46          | GETPOSITION . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 80


state 50

   47 statement: RESET . LPAREN BITWISEAND VAR RPAREN SEMI
   48          | RESET . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 81


state 51

    8 statementList: statementList statement .

    $default  reduce using rule 8 (statementList)


state 52

   11 statement: statementWhile .

    $default  reduce using rule 11 (statement)


state 53

   10 statement: statementIf .

    $default  reduce using rule 10 (statement)


state 54

    9 statement: statementAssign .

    $default  reduce using rule 9 (statement)


state 55

   49 statement: arrayDefine .

    $default  reduce using rule 49 (statement)


state 56

    5 functionDefn: VAR LPAREN defnArgList RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 82


state 57

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 83


state 58

   88 arrayDefine: ARRAYDEFINE VAR . LBRACKET CONST RBRACKET SEMI

    LBRACKET  shift, and go to state 84


state 59

   51 statementIf: IF LPAREN . expr RPAREN LBRACE statementList RBRACE
   52            | IF LPAREN . expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 91


state 60

   50 statementWhile: WHILE LPAREN . expr RPAREN LBRACE statementList RBRACE

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 92


state 61

   53 statementAssign: VAR EQUAL . expr SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 93


state 62

   12 statement: VAR LPAREN . argList RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 95
    commaArgList  go to state 96


state 63

   54 statementAssign: VAR LBRACKET . expr RBRACKET EQUAL expr SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 97


state 64

   13 statement: MOVEABSOLUTE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   14          | MOVEABSOLUTE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 98
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 99
    commaArgList  go to state 96


state 65

   15 statement: MOVERELATIVE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   16          | MOVERELATIVE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 100
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 101
    commaArgList  go to state 96


state 66

   17 statement: SLEEP LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   18          | SLEEP LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 102
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 103
    commaArgList  go to state 96


state 67

   19 statement: SLEEPUNTIL LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   20          | SLEEPUNTIL LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 104
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 105
    commaArgList  go to state 96


state 68

   21 statement: LED LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   22          | LED LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 106
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 107
    commaArgList  go to state 96


state 69

   23 statement: RPM LPAREN . BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   24          | RPM LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 108
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 109
    commaArgList  go to state 96


state 70

   25 statement: RPMx10k LPAREN . BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   26          | RPMx10k LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 110
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 111
    commaArgList  go to state 96


state 71

   27 statement: ACCELMICROSEC LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   28          | ACCELMICROSEC LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 112
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 113
    commaArgList  go to state 96


state 72

   29 statement: DEGREEx10kABSOLUTE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   30          | DEGREEx10kABSOLUTE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 114
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 115
    commaArgList  go to state 96


state 73

   31 statement: DEGREEx10kRELATIVE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   32          | DEGREEx10kRELATIVE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 116
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 117
    commaArgList  go to state 96


state 74

   33 statement: WAITFORIDLE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   34          | WAITFORIDLE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 118
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 119
    commaArgList  go to state 96


state 75

   35 statement: PRINTNUMBER LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   36          | PRINTNUMBER LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 120
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 121
    commaArgList  go to state 96


state 76

   37 statement: GETINPUT LPAREN . BITWISEAND VAR RPAREN SEMI
   38          | GETINPUT LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 122
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 123
    commaArgList  go to state 96


state 77

   39 statement: SETOUTPUT LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   40          | SETOUTPUT LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 124
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 125
    commaArgList  go to state 96


state 78

   41 statement: GETADC LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   42          | GETADC LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 126
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 127
    commaArgList  go to state 96


state 79

   43 statement: GETTEMP LPAREN . BITWISEAND VAR RPAREN SEMI
   44          | GETTEMP LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 128
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 129
    commaArgList  go to state 96


state 80

   45 statement: GETPOSITION LPAREN . BITWISEAND VAR RPAREN SEMI
   46          | GETPOSITION LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 130
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 131
    commaArgList  go to state 96


state 81

   47 statement: RESET LPAREN . BITWISEAND VAR RPAREN SEMI
   48          | RESET LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 85
    CONST       shift, and go to state 86
    BITWISEAND  shift, and go to state 132
    LPAREN      shift, and go to state 87
    MINUS       shift, and go to state 88
    BANG        shift, and go to state 89
    TILDE       shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 133
    commaArgList  go to state 96


state 82

    5 functionDefn: VAR LPAREN defnArgList RPAREN LBRACE statementList . RBRACE
    8 statementList: statementList . statement

    RBRACE              shift, and go to state 134
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42
    WAITFORIDLE         shift, and go to state 43
    PRINTNUMBER         shift, and go to state 44
    GETINPUT            shift, and go to state 45
    SETOUTPUT           shift, and go to state 46
    GETADC              shift, and go to state 47
    GETTEMP             shift, and go to state 48
    GETPOSITION         shift, and go to state 49
    RESET               shift, and go to state 50

    statement        go to state 51
    statementWhile   go to state 52
    statementIf      go to state 53
    statementAssign  go to state 54
    arrayDefine      go to state 55


state 83

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList RPAREN LBRACE statementList . RBRACE
    8 statementList: statementList . statement

    RBRACE              shift, and go to state 135
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42
    WAITFORIDLE         shift, and go to state 43
    PRINTNUMBER         shift, and go to state 44
    GETINPUT            shift, and go to state 45
    SETOUTPUT           shift, and go to state 46
    GETADC              shift, and go to state 47
    GETTEMP             shift, and go to state 48
    GETPOSITION         shift, and go to state 49
    RESET               shift, and go to state 50

    statement        go to state 51
    statementWhile   go to state 52
    statementIf      go to state 53
    statementAssign  go to state 54
    arrayDefine      go to state 55


state 84

   88 arrayDefine: ARRAYDEFINE VAR LBRACKET . CONST RBRACKET SEMI

    CONST  shift, and go to state 136


state 85

   74 expr: VAR .
   76     | VAR . LPAREN argList RPAREN
   77     | VAR . LBRACKET expr RBRACKET

    LPAREN    shift, and go to state 137
    LBRACKET  shift, and go to state 138

    $default  reduce using rule 74 (expr)


state 86

   75 expr: CONST .

    $default  reduce using rule 75 (expr)


state 87

   58 expr: LPAREN . expr RPAREN

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 139


state 88

   55 expr: MINUS . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 140


state 89

   56 expr: BANG . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 141


state 90

   57 expr: TILDE . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 142


state 91

   51 statementIf: IF LPAREN expr . RPAREN LBRACE statementList RBRACE
   52            | IF LPAREN expr . RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 158


state 92

   50 statementWhile: WHILE LPAREN expr . RPAREN LBRACE statementList RBRACE
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 159


state 93

   53 statementAssign: VAR EQUAL expr . SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    SEMI            shift, and go to state 160


state 94

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr
   80 commaArgList: expr .
   81             | expr . COMMA commaArgList

    COMMA           shift, and go to state 161
    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157

    $default  reduce using rule 80 (commaArgList)


state 95

   12 statement: VAR LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 162


state 96

   79 argList: commaArgList .

    $default  reduce using rule 79 (argList)


state 97

   54 statementAssign: VAR LBRACKET expr . RBRACKET EQUAL expr SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RBRACKET        shift, and go to state 163


state 98

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 164


state 99

   14 statement: MOVEABSOLUTE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 165


state 100

   15 statement: MOVERELATIVE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 166


state 101

   16 statement: MOVERELATIVE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 167


state 102

   17 statement: SLEEP LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 168


state 103

   18 statement: SLEEP LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 169


state 104

   19 statement: SLEEPUNTIL LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 170


state 105

   20 statement: SLEEPUNTIL LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 171


state 106

   21 statement: LED LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 172


state 107

   22 statement: LED LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 173


state 108

   23 statement: RPM LPAREN BITWISEAND . VAR COMMA expr COMMA expr RPAREN SEMI

    VAR  shift, and go to state 174


state 109

   24 statement: RPM LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 175


state 110

   25 statement: RPMx10k LPAREN BITWISEAND . VAR COMMA expr COMMA expr RPAREN SEMI

    VAR  shift, and go to state 176


state 111

   26 statement: RPMx10k LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 177


state 112

   27 statement: ACCELMICROSEC LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 178


state 113

   28 statement: ACCELMICROSEC LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 179


state 114

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 180


state 115

   30 statement: DEGREEx10kABSOLUTE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 181


state 116

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 182


state 117

   32 statement: DEGREEx10kRELATIVE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 183


state 118

   33 statement: WAITFORIDLE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 184


state 119

   34 statement: WAITFORIDLE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 185


state 120

   35 statement: PRINTNUMBER LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 186


state 121

   36 statement: PRINTNUMBER LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 187


state 122

   37 statement: GETINPUT LPAREN BITWISEAND . VAR RPAREN SEMI

    VAR  shift, and go to state 188


state 123

   38 statement: GETINPUT LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 189


state 124

   39 statement: SETOUTPUT LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 190


state 125

   40 statement: SETOUTPUT LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 191


state 126

   41 statement: GETADC LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 192


state 127

   42 statement: GETADC LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 193


state 128

   43 statement: GETTEMP LPAREN BITWISEAND . VAR RPAREN SEMI

    VAR  shift, and go to state 194


state 129

   44 statement: GETTEMP LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 195


state 130

   45 statement: GETPOSITION LPAREN BITWISEAND . VAR RPAREN SEMI

    VAR  shift, and go to state 196


state 131

   46 statement: GETPOSITION LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 197


state 132

   47 statement: RESET LPAREN BITWISEAND . VAR RPAREN SEMI

    VAR  shift, and go to state 198


state 133

   48 statement: RESET LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 199


state 134

    5 functionDefn: VAR LPAREN defnArgList RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 5 (functionDefn)


state 135

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 6 (functionDefn)


state 136

   88 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST . RBRACKET SEMI

    RBRACKET  shift, and go to state 200


state 137

   76 expr: VAR LPAREN . argList RPAREN

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    $default  reduce using rule 78 (argList)

    expr          go to state 94
    argList       go to state 201
    commaArgList  go to state 96


state 138

   77 expr: VAR LBRACKET . expr RBRACKET

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 202


state 139

   58 expr: LPAREN expr . RPAREN
   59     | expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 203


state 140

   55 expr: MINUS expr .
   59     | expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    XOR   shift, and go to state 155
    DIV   shift, and go to state 156
    MULT  shift, and go to state 157

    $default  reduce using rule 55 (expr)


state 141

   56 expr: BANG expr .
   59     | expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    $default  reduce using rule 56 (expr)


state 142

   57 expr: TILDE expr .
   59     | expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    $default  reduce using rule 57 (expr)


state 143

   67 expr: expr BITWISEOR . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 204


state 144

   66 expr: expr BITWISEAND . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 205


state 145

   65 expr: expr OR . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 206


state 146

   64 expr: expr AND . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 207


state 147

   73 expr: expr LSS . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 208


state 148

   72 expr: expr GTR . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 209


state 149

   69 expr: expr NEQ . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 210


state 150

   71 expr: expr LEQ . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 211


state 151

   70 expr: expr GEQ . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 212


state 152

   68 expr: expr TEST_FOR_EQUAL . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 213


state 153

   60 expr: expr MINUS . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 214


state 154

   59 expr: expr PLUS . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 215


state 155

   63 expr: expr XOR . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 216


state 156

   62 expr: expr DIV . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 217


state 157

   61 expr: expr MULT . expr

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 218


state 158

   51 statementIf: IF LPAREN expr RPAREN . LBRACE statementList RBRACE
   52            | IF LPAREN expr RPAREN . LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LBRACE  shift, and go to state 219


state 159

   50 statementWhile: WHILE LPAREN expr RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 220


state 160

   53 statementAssign: VAR EQUAL expr SEMI .

    $default  reduce using rule 53 (statementAssign)


state 161

   81 commaArgList: expr COMMA . commaArgList

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr          go to state 94
    commaArgList  go to state 221


state 162

   12 statement: VAR LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 222


state 163

   54 statementAssign: VAR LBRACKET expr RBRACKET . EQUAL expr SEMI

    EQUAL  shift, and go to state 223


state 164

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 224


state 165

   14 statement: MOVEABSOLUTE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 225


state 166

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 226


state 167

   16 statement: MOVERELATIVE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 227


state 168

   17 statement: SLEEP LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 228


state 169

   18 statement: SLEEP LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 229


state 170

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 230


state 171

   20 statement: SLEEPUNTIL LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 231


state 172

   21 statement: LED LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 232


state 173

   22 statement: LED LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 233


state 174

   23 statement: RPM LPAREN BITWISEAND VAR . COMMA expr COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 234


state 175

   24 statement: RPM LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 235


state 176

   25 statement: RPMx10k LPAREN BITWISEAND VAR . COMMA expr COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 236


state 177

   26 statement: RPMx10k LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 237


state 178

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 238


state 179

   28 statement: ACCELMICROSEC LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 239


state 180

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 240


state 181

   30 statement: DEGREEx10kABSOLUTE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 241


state 182

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 242


state 183

   32 statement: DEGREEx10kRELATIVE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 243


state 184

   33 statement: WAITFORIDLE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 244


state 185

   34 statement: WAITFORIDLE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 245


state 186

   35 statement: PRINTNUMBER LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 246


state 187

   36 statement: PRINTNUMBER LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 247


state 188

   37 statement: GETINPUT LPAREN BITWISEAND VAR . RPAREN SEMI

    RPAREN  shift, and go to state 248


state 189

   38 statement: GETINPUT LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 249


state 190

   39 statement: SETOUTPUT LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 250


state 191

   40 statement: SETOUTPUT LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 251


state 192

   41 statement: GETADC LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 252


state 193

   42 statement: GETADC LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 253


state 194

   43 statement: GETTEMP LPAREN BITWISEAND VAR . RPAREN SEMI

    RPAREN  shift, and go to state 254


state 195

   44 statement: GETTEMP LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 255


state 196

   45 statement: GETPOSITION LPAREN BITWISEAND VAR . RPAREN SEMI

    RPAREN  shift, and go to state 256


state 197

   46 statement: GETPOSITION LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 257


state 198

   47 statement: RESET LPAREN BITWISEAND VAR . RPAREN SEMI

    RPAREN  shift, and go to state 258


state 199

   48 statement: RESET LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 259


state 200

   88 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET . SEMI

    SEMI  shift, and go to state 260


state 201

   76 expr: VAR LPAREN argList . RPAREN

    RPAREN  shift, and go to state 261


state 202

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr
   77     | VAR LBRACKET expr . RBRACKET

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RBRACKET        shift, and go to state 262


state 203

   58 expr: LPAREN expr RPAREN .

    $default  reduce using rule 58 (expr)


state 204

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   67     | expr BITWISEOR expr .
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157

    $default  reduce using rule 67 (expr)


state 205

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   66     | expr BITWISEAND expr .
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157

    $default  reduce using rule 66 (expr)


state 206

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   65     | expr OR expr .
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157

    $default  reduce using rule 65 (expr)


state 207

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   64     | expr AND expr .
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157

    $default  reduce using rule 64 (expr)


state 208

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr
   73     | expr LSS expr .

    MINUS  shift, and go to state 153
    PLUS   shift, and go to state 154
    XOR    shift, and go to state 155
    DIV    shift, and go to state 156
    MULT   shift, and go to state 157

    $default  reduce using rule 73 (expr)


state 209

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   72     | expr GTR expr .
   73     | expr . LSS expr

    MINUS  shift, and go to state 153
    PLUS   shift, and go to state 154
    XOR    shift, and go to state 155
    DIV    shift, and go to state 156
    MULT   shift, and go to state 157

    $default  reduce using rule 72 (expr)


state 210

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   69     | expr NEQ expr .
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    MINUS  shift, and go to state 153
    PLUS   shift, and go to state 154
    XOR    shift, and go to state 155
    DIV    shift, and go to state 156
    MULT   shift, and go to state 157

    $default  reduce using rule 69 (expr)


state 211

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   71     | expr LEQ expr .
   72     | expr . GTR expr
   73     | expr . LSS expr

    MINUS  shift, and go to state 153
    PLUS   shift, and go to state 154
    XOR    shift, and go to state 155
    DIV    shift, and go to state 156
    MULT   shift, and go to state 157

    $default  reduce using rule 71 (expr)


state 212

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   70     | expr GEQ expr .
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    MINUS  shift, and go to state 153
    PLUS   shift, and go to state 154
    XOR    shift, and go to state 155
    DIV    shift, and go to state 156
    MULT   shift, and go to state 157

    $default  reduce using rule 70 (expr)


state 213

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   68     | expr TEST_FOR_EQUAL expr .
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    MINUS  shift, and go to state 153
    PLUS   shift, and go to state 154
    XOR    shift, and go to state 155
    DIV    shift, and go to state 156
    MULT   shift, and go to state 157

    $default  reduce using rule 68 (expr)


state 214

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   60     | expr MINUS expr .
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    XOR   shift, and go to state 155
    DIV   shift, and go to state 156
    MULT  shift, and go to state 157

    $default  reduce using rule 60 (expr)


state 215

   59 expr: expr . PLUS expr
   59     | expr PLUS expr .
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    XOR   shift, and go to state 155
    DIV   shift, and go to state 156
    MULT  shift, and go to state 157

    $default  reduce using rule 59 (expr)


state 216

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   63     | expr XOR expr .
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    DIV   shift, and go to state 156
    MULT  shift, and go to state 157

    $default  reduce using rule 63 (expr)


state 217

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   62     | expr DIV expr .
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    $default  reduce using rule 62 (expr)


state 218

   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   61     | expr MULT expr .
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    $default  reduce using rule 61 (expr)


state 219

   51 statementIf: IF LPAREN expr RPAREN LBRACE . statementList RBRACE
   52            | IF LPAREN expr RPAREN LBRACE . statementList RBRACE ELSE LBRACE statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 263


state 220

   50 statementWhile: WHILE LPAREN expr RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 264


state 221

   81 commaArgList: expr COMMA commaArgList .

    $default  reduce using rule 81 (commaArgList)


state 222

   12 statement: VAR LPAREN argList RPAREN SEMI .

    $default  reduce using rule 12 (statement)


state 223

   54 statementAssign: VAR LBRACKET expr RBRACKET EQUAL . expr SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 265


state 224

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 266


state 225

   14 statement: MOVEABSOLUTE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 14 (statement)


state 226

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 267


state 227

   16 statement: MOVERELATIVE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 16 (statement)


state 228

   17 statement: SLEEP LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 268


state 229

   18 statement: SLEEP LPAREN argList RPAREN SEMI .

    $default  reduce using rule 18 (statement)


state 230

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 269


state 231

   20 statement: SLEEPUNTIL LPAREN argList RPAREN SEMI .

    $default  reduce using rule 20 (statement)


state 232

   21 statement: LED LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 270


state 233

   22 statement: LED LPAREN argList RPAREN SEMI .

    $default  reduce using rule 22 (statement)


state 234

   23 statement: RPM LPAREN BITWISEAND VAR COMMA . expr COMMA expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 271


state 235

   24 statement: RPM LPAREN argList RPAREN SEMI .

    $default  reduce using rule 24 (statement)


state 236

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA . expr COMMA expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 272


state 237

   26 statement: RPMx10k LPAREN argList RPAREN SEMI .

    $default  reduce using rule 26 (statement)


state 238

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 273


state 239

   28 statement: ACCELMICROSEC LPAREN argList RPAREN SEMI .

    $default  reduce using rule 28 (statement)


state 240

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 274


state 241

   30 statement: DEGREEx10kABSOLUTE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 30 (statement)


state 242

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 275


state 243

   32 statement: DEGREEx10kRELATIVE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 32 (statement)


state 244

   33 statement: WAITFORIDLE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 276


state 245

   34 statement: WAITFORIDLE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 34 (statement)


state 246

   35 statement: PRINTNUMBER LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 277


state 247

   36 statement: PRINTNUMBER LPAREN argList RPAREN SEMI .

    $default  reduce using rule 36 (statement)


state 248

   37 statement: GETINPUT LPAREN BITWISEAND VAR RPAREN . SEMI

    SEMI  shift, and go to state 278


state 249

   38 statement: GETINPUT LPAREN argList RPAREN SEMI .

    $default  reduce using rule 38 (statement)


state 250

   39 statement: SETOUTPUT LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 279


state 251

   40 statement: SETOUTPUT LPAREN argList RPAREN SEMI .

    $default  reduce using rule 40 (statement)


state 252

   41 statement: GETADC LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 280


state 253

   42 statement: GETADC LPAREN argList RPAREN SEMI .

    $default  reduce using rule 42 (statement)


state 254

   43 statement: GETTEMP LPAREN BITWISEAND VAR RPAREN . SEMI

    SEMI  shift, and go to state 281


state 255

   44 statement: GETTEMP LPAREN argList RPAREN SEMI .

    $default  reduce using rule 44 (statement)


state 256

   45 statement: GETPOSITION LPAREN BITWISEAND VAR RPAREN . SEMI

    SEMI  shift, and go to state 282


state 257

   46 statement: GETPOSITION LPAREN argList RPAREN SEMI .

    $default  reduce using rule 46 (statement)


state 258

   47 statement: RESET LPAREN BITWISEAND VAR RPAREN . SEMI

    SEMI  shift, and go to state 283


state 259

   48 statement: RESET LPAREN argList RPAREN SEMI .

    $default  reduce using rule 48 (statement)


state 260

   88 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI .

    $default  reduce using rule 88 (arrayDefine)


state 261

   76 expr: VAR LPAREN argList RPAREN .

    $default  reduce using rule 76 (expr)


state 262

   77 expr: VAR LBRACKET expr RBRACKET .

    $default  reduce using rule 77 (expr)


state 263

    8 statementList: statementList . statement
   51 statementIf: IF LPAREN expr RPAREN LBRACE statementList . RBRACE
   52            | IF LPAREN expr RPAREN LBRACE statementList . RBRACE ELSE LBRACE statementList RBRACE

    RBRACE              shift, and go to state 284
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42
    WAITFORIDLE         shift, and go to state 43
    PRINTNUMBER         shift, and go to state 44
    GETINPUT            shift, and go to state 45
    SETOUTPUT           shift, and go to state 46
    GETADC              shift, and go to state 47
    GETTEMP             shift, and go to state 48
    GETPOSITION         shift, and go to state 49
    RESET               shift, and go to state 50

    statement        go to state 51
    statementWhile   go to state 52
    statementIf      go to state 53
    statementAssign  go to state 54
    arrayDefine      go to state 55


state 264

    8 statementList: statementList . statement
   50 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList . RBRACE

    RBRACE              shift, and go to state 285
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42
    WAITFORIDLE         shift, and go to state 43
    PRINTNUMBER         shift, and go to state 44
    GETINPUT            shift, and go to state 45
    SETOUTPUT           shift, and go to state 46
    GETADC              shift, and go to state 47
    GETTEMP             shift, and go to state 48
    GETPOSITION         shift, and go to state 49
    RESET               shift, and go to state 50

    statement        go to state 51
    statementWhile   go to state 52
    statementIf      go to state 53
    statementAssign  go to state 54
    arrayDefine      go to state 55


state 265

   54 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr . SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    SEMI            shift, and go to state 286


state 266

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 287


state 267

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 288


state 268

   17 statement: SLEEP LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 289


state 269

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 290


state 270

   21 statement: LED LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 291


state 271

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr . COMMA expr RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    COMMA           shift, and go to state 292
    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157


state 272

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr . COMMA expr RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    COMMA           shift, and go to state 293
    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157


state 273

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 294


state 274

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 295


state 275

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 296


state 276

   33 statement: WAITFORIDLE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 297


state 277

   35 statement: PRINTNUMBER LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 298


state 278

   37 statement: GETINPUT LPAREN BITWISEAND VAR RPAREN SEMI .

    $default  reduce using rule 37 (statement)


state 279

   39 statement: SETOUTPUT LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 299


state 280

   41 statement: GETADC LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 300


state 281

   43 statement: GETTEMP LPAREN BITWISEAND VAR RPAREN SEMI .

    $default  reduce using rule 43 (statement)


state 282

   45 statement: GETPOSITION LPAREN BITWISEAND VAR RPAREN SEMI .

    $default  reduce using rule 45 (statement)


state 283

   47 statement: RESET LPAREN BITWISEAND VAR RPAREN SEMI .

    $default  reduce using rule 47 (statement)


state 284

   51 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE .
   52            | IF LPAREN expr RPAREN LBRACE statementList RBRACE . ELSE LBRACE statementList RBRACE

    ELSE  shift, and go to state 301

    $default  reduce using rule 51 (statementIf)


state 285

   50 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 50 (statementWhile)


state 286

   54 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr SEMI .

    $default  reduce using rule 54 (statementAssign)


state 287

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 302


state 288

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 303


state 289

   17 statement: SLEEP LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 304


state 290

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 305


state 291

   21 statement: LED LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 306


state 292

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 307


state 293

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 85
    CONST   shift, and go to state 86
    LPAREN  shift, and go to state 87
    MINUS   shift, and go to state 88
    BANG    shift, and go to state 89
    TILDE   shift, and go to state 90

    expr  go to state 308


state 294

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 309


state 295

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 310


state 296

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 311


state 297

   33 statement: WAITFORIDLE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 312


state 298

   35 statement: PRINTNUMBER LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 313


state 299

   39 statement: SETOUTPUT LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 314


state 300

   41 statement: GETADC LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 315


state 301

   52 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 316


state 302

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 13 (statement)


state 303

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 15 (statement)


state 304

   17 statement: SLEEP LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 17 (statement)


state 305

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 19 (statement)


state 306

   21 statement: LED LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 21 (statement)


state 307

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 317


state 308

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA expr . RPAREN SEMI
   59 expr: expr . PLUS expr
   60     | expr . MINUS expr
   61     | expr . MULT expr
   62     | expr . DIV expr
   63     | expr . XOR expr
   64     | expr . AND expr
   65     | expr . OR expr
   66     | expr . BITWISEAND expr
   67     | expr . BITWISEOR expr
   68     | expr . TEST_FOR_EQUAL expr
   69     | expr . NEQ expr
   70     | expr . GEQ expr
   71     | expr . LEQ expr
   72     | expr . GTR expr
   73     | expr . LSS expr

    BITWISEOR       shift, and go to state 143
    BITWISEAND      shift, and go to state 144
    OR              shift, and go to state 145
    AND             shift, and go to state 146
    LSS             shift, and go to state 147
    GTR             shift, and go to state 148
    NEQ             shift, and go to state 149
    LEQ             shift, and go to state 150
    GEQ             shift, and go to state 151
    TEST_FOR_EQUAL  shift, and go to state 152
    MINUS           shift, and go to state 153
    PLUS            shift, and go to state 154
    XOR             shift, and go to state 155
    DIV             shift, and go to state 156
    MULT            shift, and go to state 157
    RPAREN          shift, and go to state 318


state 309

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 27 (statement)


state 310

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 29 (statement)


state 311

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 31 (statement)


state 312

   33 statement: WAITFORIDLE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 33 (statement)


state 313

   35 statement: PRINTNUMBER LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 35 (statement)


state 314

   39 statement: SETOUTPUT LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 39 (statement)


state 315

   41 statement: GETADC LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 41 (statement)


state 316

   52 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 319


state 317

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 320


state 318

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 321


state 319

    8 statementList: statementList . statement
   52 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList . RBRACE

    RBRACE              shift, and go to state 322
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42
    WAITFORIDLE         shift, and go to state 43
    PRINTNUMBER         shift, and go to state 44
    GETINPUT            shift, and go to state 45
    SETOUTPUT           shift, and go to state 46
    GETADC              shift, and go to state 47
    GETTEMP             shift, and go to state 48
    GETPOSITION         shift, and go to state 49
    RESET               shift, and go to state 50

    statement        go to state 51
    statementWhile   go to state 52
    statementIf      go to state 53
    statementAssign  go to state 54
    arrayDefine      go to state 55


state 320

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI .

    $default  reduce using rule 23 (statement)


state 321

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI .

    $default  reduce using rule 25 (statement)


state 322

   52 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE .

    $default  reduce using rule 52 (statementIf)
