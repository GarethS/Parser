Terminals unused in grammar

   INPUTS
   OUTPUTS
   VAR_METHOD
   CONST_FLOAT
   SHR
   SHL


Grammar

    0 $accept: program $end

    1 program: functionDefnMain functionDefnList

    2 functionDefnList: /* empty */
    3                 | functionDefnList functionDefn

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    5 functionDefn: VAR LPAREN defnArgList RPAREN LBRACE statementList RBRACE
    6             | MOVEABSOLUTE LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    7 statementList: /* empty */
    8              | statementList statement

    9 statement: statementAssign
   10          | statementIf
   11          | statementWhile
   12          | VAR LPAREN argList RPAREN SEMI
   13          | MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   14          | MOVEABSOLUTE LPAREN argList RPAREN SEMI
   15          | MOVERELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   16          | MOVERELATIVE LPAREN argList RPAREN SEMI
   17          | SLEEP LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   18          | SLEEP LPAREN argList RPAREN SEMI
   19          | SLEEPUNTIL LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   20          | SLEEPUNTIL LPAREN argList RPAREN SEMI
   21          | LED LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   22          | LED LPAREN argList RPAREN SEMI
   23          | RPM LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   24          | RPM LPAREN argList RPAREN SEMI
   25          | RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   26          | RPMx10k LPAREN argList RPAREN SEMI
   27          | ACCELMICROSEC LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   28          | ACCELMICROSEC LPAREN argList RPAREN SEMI
   29          | DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   30          | DEGREEx10kABSOLUTE LPAREN argList RPAREN SEMI
   31          | DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   32          | DEGREEx10kRELATIVE LPAREN argList RPAREN SEMI
   33          | arrayDefine

   34 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList RBRACE

   35 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE
   36            | IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

   37 statementAssign: VAR EQUAL expr SEMI
   38                | VAR LBRACKET expr RBRACKET EQUAL expr SEMI

   39 expr: MINUS expr
   40     | BANG expr
   41     | TILDE expr
   42     | LPAREN expr RPAREN
   43     | expr PLUS expr
   44     | expr MINUS expr
   45     | expr MULT expr
   46     | expr DIV expr
   47     | expr XOR expr
   48     | expr AND expr
   49     | expr OR expr
   50     | expr BITWISEAND expr
   51     | expr BITWISEOR expr
   52     | expr TEST_FOR_EQUAL expr
   53     | expr NEQ expr
   54     | expr GEQ expr
   55     | expr LEQ expr
   56     | expr GTR expr
   57     | expr LSS expr
   58     | VAR
   59     | CONST
   60     | VAR LPAREN argList RPAREN
   61     | VAR LBRACKET expr RBRACKET

   62 argList: /* empty */
   63        | commaArgList

   64 commaArgList: expr
   65             | expr COMMA commaArgList

   66 defnArgList: /* empty */
   67            | defnCommaArgList

   68 defnCommaArgList: VAR
   69                 | BITWISEAND VAR
   70                 | defnCommaArgList COMMA VAR
   71                 | defnCommaArgList COMMA BITWISEAND VAR

   72 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI


Terminals, with rules where they appear

$end (0) 0
error (256)
INPUTS (258)
OUTPUTS (259)
COMMA (260) 13 15 17 19 21 23 25 27 29 31 65 70 71
EQUAL (261) 37 38
LBRACE (262) 4 5 6 34 35 36
RBRACE (263) 4 5 6 34 35 36
ARRAYDEFINE (264) 72
IF (265) 35 36
ELSE (266) 36
WHILE (267) 34
VAR (268) 5 12 13 15 17 19 21 23 25 27 29 31 37 38 58 60 61 68 69 70
    71 72
VAR_METHOD (269)
CONST (270) 59 72
CONST_FLOAT (271)
MAIN (272) 4
MOVEABSOLUTE (273) 6 13 14
MOVERELATIVE (274) 15 16
SLEEP (275) 17 18
SLEEPUNTIL (276) 19 20
LED (277) 21 22
RPM (278) 23 24
RPMx10k (279) 25 26
ACCELMICROSEC (280) 27 28
DEGREEx10kABSOLUTE (281) 29 30
DEGREEx10kRELATIVE (282) 31 32
BITWISEOR (283) 51
BITWISEAND (284) 13 15 17 19 21 23 25 27 29 31 50 69 71
OR (285) 49
AND (286) 48
SHR (287)
SHL (288)
LSS (289) 57
GTR (290) 56
NEQ (291) 53
LEQ (292) 55
GEQ (293) 54
TEST_FOR_EQUAL (294) 52
LPAREN (295) 4 5 6 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 34 35 36 42 60
MINUS (296) 39 44
PLUS (297) 43
XOR (298) 47
DIV (299) 46
MULT (300) 45
LBRACKET (301) 38 61 72
RBRACKET (302) 38 61 72
RPAREN (303) 4 5 6 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 34 35 36 42 60
SEMI (304) 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
    31 32 37 38 72
BANG (305) 40
TILDE (306) 41


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functionDefnList (54)
    on left: 2 3, on right: 1 3
functionDefnMain (55)
    on left: 4, on right: 1
functionDefn (56)
    on left: 5 6, on right: 3
statementList (57)
    on left: 7 8, on right: 4 5 6 8 34 35 36
statement (58)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    28 29 30 31 32 33, on right: 8
statementWhile (59)
    on left: 34, on right: 11
statementIf (60)
    on left: 35 36, on right: 10
statementAssign (61)
    on left: 37 38, on right: 9
expr (62)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58 59 60 61, on right: 13 15 17 19 21 23 25 27 29 31 34 35 36
    37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    61 64 65
argList (63)
    on left: 62 63, on right: 12 14 16 18 20 22 24 26 28 30 32 60
commaArgList (64)
    on left: 64 65, on right: 63 65
defnArgList (65)
    on left: 66 67, on right: 4 5 6
defnCommaArgList (66)
    on left: 68 69 70 71, on right: 67 70 71
arrayDefine (67)
    on left: 72, on right: 33


state 0

    0 $accept: . program $end

    MAIN  shift, and go to state 1

    program           go to state 2
    functionDefnMain  go to state 3


state 1

    4 functionDefnMain: MAIN . LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: functionDefnMain . functionDefnList

    $default  reduce using rule 2 (functionDefnList)

    functionDefnList  go to state 6


state 4

    4 functionDefnMain: MAIN LPAREN . defnArgList RPAREN LBRACE statementList RBRACE

    VAR         shift, and go to state 7
    BITWISEAND  shift, and go to state 8

    $default  reduce using rule 66 (defnArgList)

    defnArgList       go to state 9
    defnCommaArgList  go to state 10


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: functionDefnMain functionDefnList .
    3 functionDefnList: functionDefnList . functionDefn

    VAR           shift, and go to state 11
    MOVEABSOLUTE  shift, and go to state 12

    $default  reduce using rule 1 (program)

    functionDefn  go to state 13


state 7

   68 defnCommaArgList: VAR .

    $default  reduce using rule 68 (defnCommaArgList)


state 8

   69 defnCommaArgList: BITWISEAND . VAR

    VAR  shift, and go to state 14


state 9

    4 functionDefnMain: MAIN LPAREN defnArgList . RPAREN LBRACE statementList RBRACE

    RPAREN  shift, and go to state 15


state 10

   67 defnArgList: defnCommaArgList .
   70 defnCommaArgList: defnCommaArgList . COMMA VAR
   71                 | defnCommaArgList . COMMA BITWISEAND VAR

    COMMA  shift, and go to state 16

    $default  reduce using rule 67 (defnArgList)


state 11

    5 functionDefn: VAR . LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 17


state 12

    6 functionDefn: MOVEABSOLUTE . LPAREN defnArgList RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 18


state 13

    3 functionDefnList: functionDefnList functionDefn .

    $default  reduce using rule 3 (functionDefnList)


state 14

   69 defnCommaArgList: BITWISEAND VAR .

    $default  reduce using rule 69 (defnCommaArgList)


state 15

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 19


state 16

   70 defnCommaArgList: defnCommaArgList COMMA . VAR
   71                 | defnCommaArgList COMMA . BITWISEAND VAR

    VAR         shift, and go to state 20
    BITWISEAND  shift, and go to state 21


state 17

    5 functionDefn: VAR LPAREN . defnArgList RPAREN LBRACE statementList RBRACE

    VAR         shift, and go to state 7
    BITWISEAND  shift, and go to state 8

    $default  reduce using rule 66 (defnArgList)

    defnArgList       go to state 22
    defnCommaArgList  go to state 10


state 18

    6 functionDefn: MOVEABSOLUTE LPAREN . defnArgList RPAREN LBRACE statementList RBRACE

    VAR         shift, and go to state 7
    BITWISEAND  shift, and go to state 8

    $default  reduce using rule 66 (defnArgList)

    defnArgList       go to state 23
    defnCommaArgList  go to state 10


state 19

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 24


state 20

   70 defnCommaArgList: defnCommaArgList COMMA VAR .

    $default  reduce using rule 70 (defnCommaArgList)


state 21

   71 defnCommaArgList: defnCommaArgList COMMA BITWISEAND . VAR

    VAR  shift, and go to state 25


state 22

    5 functionDefn: VAR LPAREN defnArgList . RPAREN LBRACE statementList RBRACE

    RPAREN  shift, and go to state 26


state 23

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList . RPAREN LBRACE statementList RBRACE

    RPAREN  shift, and go to state 27


state 24

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN LBRACE statementList . RBRACE
    8 statementList: statementList . statement

    RBRACE              shift, and go to state 28
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42

    statement        go to state 43
    statementWhile   go to state 44
    statementIf      go to state 45
    statementAssign  go to state 46
    arrayDefine      go to state 47


state 25

   71 defnCommaArgList: defnCommaArgList COMMA BITWISEAND VAR .

    $default  reduce using rule 71 (defnCommaArgList)


state 26

    5 functionDefn: VAR LPAREN defnArgList RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 48


state 27

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 49


state 28

    4 functionDefnMain: MAIN LPAREN defnArgList RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 4 (functionDefnMain)


state 29

   72 arrayDefine: ARRAYDEFINE . VAR LBRACKET CONST RBRACKET SEMI

    VAR  shift, and go to state 50


state 30

   35 statementIf: IF . LPAREN expr RPAREN LBRACE statementList RBRACE
   36            | IF . LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LPAREN  shift, and go to state 51


state 31

   34 statementWhile: WHILE . LPAREN expr RPAREN LBRACE statementList RBRACE

    LPAREN  shift, and go to state 52


state 32

   12 statement: VAR . LPAREN argList RPAREN SEMI
   37 statementAssign: VAR . EQUAL expr SEMI
   38                | VAR . LBRACKET expr RBRACKET EQUAL expr SEMI

    EQUAL     shift, and go to state 53
    LPAREN    shift, and go to state 54
    LBRACKET  shift, and go to state 55


state 33

   13 statement: MOVEABSOLUTE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   14          | MOVEABSOLUTE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 56


state 34

   15 statement: MOVERELATIVE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   16          | MOVERELATIVE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 57


state 35

   17 statement: SLEEP . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   18          | SLEEP . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 58


state 36

   19 statement: SLEEPUNTIL . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   20          | SLEEPUNTIL . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 59


state 37

   21 statement: LED . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   22          | LED . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 60


state 38

   23 statement: RPM . LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   24          | RPM . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 61


state 39

   25 statement: RPMx10k . LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   26          | RPMx10k . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 62


state 40

   27 statement: ACCELMICROSEC . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   28          | ACCELMICROSEC . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 63


state 41

   29 statement: DEGREEx10kABSOLUTE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   30          | DEGREEx10kABSOLUTE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 64


state 42

   31 statement: DEGREEx10kRELATIVE . LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI
   32          | DEGREEx10kRELATIVE . LPAREN argList RPAREN SEMI

    LPAREN  shift, and go to state 65


state 43

    8 statementList: statementList statement .

    $default  reduce using rule 8 (statementList)


state 44

   11 statement: statementWhile .

    $default  reduce using rule 11 (statement)


state 45

   10 statement: statementIf .

    $default  reduce using rule 10 (statement)


state 46

    9 statement: statementAssign .

    $default  reduce using rule 9 (statement)


state 47

   33 statement: arrayDefine .

    $default  reduce using rule 33 (statement)


state 48

    5 functionDefn: VAR LPAREN defnArgList RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 66


state 49

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 67


state 50

   72 arrayDefine: ARRAYDEFINE VAR . LBRACKET CONST RBRACKET SEMI

    LBRACKET  shift, and go to state 68


state 51

   35 statementIf: IF LPAREN . expr RPAREN LBRACE statementList RBRACE
   36            | IF LPAREN . expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 75


state 52

   34 statementWhile: WHILE LPAREN . expr RPAREN LBRACE statementList RBRACE

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 76


state 53

   37 statementAssign: VAR EQUAL . expr SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 77


state 54

   12 statement: VAR LPAREN . argList RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 79
    commaArgList  go to state 80


state 55

   38 statementAssign: VAR LBRACKET . expr RBRACKET EQUAL expr SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 81


state 56

   13 statement: MOVEABSOLUTE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   14          | MOVEABSOLUTE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 82
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 83
    commaArgList  go to state 80


state 57

   15 statement: MOVERELATIVE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   16          | MOVERELATIVE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 84
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 85
    commaArgList  go to state 80


state 58

   17 statement: SLEEP LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   18          | SLEEP LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 86
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 87
    commaArgList  go to state 80


state 59

   19 statement: SLEEPUNTIL LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   20          | SLEEPUNTIL LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 88
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 89
    commaArgList  go to state 80


state 60

   21 statement: LED LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   22          | LED LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 90
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 91
    commaArgList  go to state 80


state 61

   23 statement: RPM LPAREN . BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   24          | RPM LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 92
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 93
    commaArgList  go to state 80


state 62

   25 statement: RPMx10k LPAREN . BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI
   26          | RPMx10k LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 94
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 95
    commaArgList  go to state 80


state 63

   27 statement: ACCELMICROSEC LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   28          | ACCELMICROSEC LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 96
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 97
    commaArgList  go to state 80


state 64

   29 statement: DEGREEx10kABSOLUTE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   30          | DEGREEx10kABSOLUTE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 98
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 99
    commaArgList  go to state 80


state 65

   31 statement: DEGREEx10kRELATIVE LPAREN . BITWISEAND VAR COMMA expr RPAREN SEMI
   32          | DEGREEx10kRELATIVE LPAREN . argList RPAREN SEMI

    VAR         shift, and go to state 69
    CONST       shift, and go to state 70
    BITWISEAND  shift, and go to state 100
    LPAREN      shift, and go to state 71
    MINUS       shift, and go to state 72
    BANG        shift, and go to state 73
    TILDE       shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 101
    commaArgList  go to state 80


state 66

    5 functionDefn: VAR LPAREN defnArgList RPAREN LBRACE statementList . RBRACE
    8 statementList: statementList . statement

    RBRACE              shift, and go to state 102
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42

    statement        go to state 43
    statementWhile   go to state 44
    statementIf      go to state 45
    statementAssign  go to state 46
    arrayDefine      go to state 47


state 67

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList RPAREN LBRACE statementList . RBRACE
    8 statementList: statementList . statement

    RBRACE              shift, and go to state 103
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42

    statement        go to state 43
    statementWhile   go to state 44
    statementIf      go to state 45
    statementAssign  go to state 46
    arrayDefine      go to state 47


state 68

   72 arrayDefine: ARRAYDEFINE VAR LBRACKET . CONST RBRACKET SEMI

    CONST  shift, and go to state 104


state 69

   58 expr: VAR .
   60     | VAR . LPAREN argList RPAREN
   61     | VAR . LBRACKET expr RBRACKET

    LPAREN    shift, and go to state 105
    LBRACKET  shift, and go to state 106

    $default  reduce using rule 58 (expr)


state 70

   59 expr: CONST .

    $default  reduce using rule 59 (expr)


state 71

   42 expr: LPAREN . expr RPAREN

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 107


state 72

   39 expr: MINUS . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 108


state 73

   40 expr: BANG . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 109


state 74

   41 expr: TILDE . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 110


state 75

   35 statementIf: IF LPAREN expr . RPAREN LBRACE statementList RBRACE
   36            | IF LPAREN expr . RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 126


state 76

   34 statementWhile: WHILE LPAREN expr . RPAREN LBRACE statementList RBRACE
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 127


state 77

   37 statementAssign: VAR EQUAL expr . SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    SEMI            shift, and go to state 128


state 78

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   64 commaArgList: expr .
   65             | expr . COMMA commaArgList

    COMMA           shift, and go to state 129
    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125

    $default  reduce using rule 64 (commaArgList)


state 79

   12 statement: VAR LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 130


state 80

   63 argList: commaArgList .

    $default  reduce using rule 63 (argList)


state 81

   38 statementAssign: VAR LBRACKET expr . RBRACKET EQUAL expr SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RBRACKET        shift, and go to state 131


state 82

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 132


state 83

   14 statement: MOVEABSOLUTE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 133


state 84

   15 statement: MOVERELATIVE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 134


state 85

   16 statement: MOVERELATIVE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 135


state 86

   17 statement: SLEEP LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 136


state 87

   18 statement: SLEEP LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 137


state 88

   19 statement: SLEEPUNTIL LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 138


state 89

   20 statement: SLEEPUNTIL LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 139


state 90

   21 statement: LED LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 140


state 91

   22 statement: LED LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 141


state 92

   23 statement: RPM LPAREN BITWISEAND . VAR COMMA expr COMMA expr RPAREN SEMI

    VAR  shift, and go to state 142


state 93

   24 statement: RPM LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 143


state 94

   25 statement: RPMx10k LPAREN BITWISEAND . VAR COMMA expr COMMA expr RPAREN SEMI

    VAR  shift, and go to state 144


state 95

   26 statement: RPMx10k LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 145


state 96

   27 statement: ACCELMICROSEC LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 146


state 97

   28 statement: ACCELMICROSEC LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 147


state 98

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 148


state 99

   30 statement: DEGREEx10kABSOLUTE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 149


state 100

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND . VAR COMMA expr RPAREN SEMI

    VAR  shift, and go to state 150


state 101

   32 statement: DEGREEx10kRELATIVE LPAREN argList . RPAREN SEMI

    RPAREN  shift, and go to state 151


state 102

    5 functionDefn: VAR LPAREN defnArgList RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 5 (functionDefn)


state 103

    6 functionDefn: MOVEABSOLUTE LPAREN defnArgList RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 6 (functionDefn)


state 104

   72 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST . RBRACKET SEMI

    RBRACKET  shift, and go to state 152


state 105

   60 expr: VAR LPAREN . argList RPAREN

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    $default  reduce using rule 62 (argList)

    expr          go to state 78
    argList       go to state 153
    commaArgList  go to state 80


state 106

   61 expr: VAR LBRACKET . expr RBRACKET

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 154


state 107

   42 expr: LPAREN expr . RPAREN
   43     | expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 155


state 108

   39 expr: MINUS expr .
   43     | expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    XOR   shift, and go to state 123
    DIV   shift, and go to state 124
    MULT  shift, and go to state 125

    $default  reduce using rule 39 (expr)


state 109

   40 expr: BANG expr .
   43     | expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    $default  reduce using rule 40 (expr)


state 110

   41 expr: TILDE expr .
   43     | expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    $default  reduce using rule 41 (expr)


state 111

   51 expr: expr BITWISEOR . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 156


state 112

   50 expr: expr BITWISEAND . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 157


state 113

   49 expr: expr OR . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 158


state 114

   48 expr: expr AND . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 159


state 115

   57 expr: expr LSS . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 160


state 116

   56 expr: expr GTR . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 161


state 117

   53 expr: expr NEQ . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 162


state 118

   55 expr: expr LEQ . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 163


state 119

   54 expr: expr GEQ . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 164


state 120

   52 expr: expr TEST_FOR_EQUAL . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 165


state 121

   44 expr: expr MINUS . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 166


state 122

   43 expr: expr PLUS . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 167


state 123

   47 expr: expr XOR . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 168


state 124

   46 expr: expr DIV . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 169


state 125

   45 expr: expr MULT . expr

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 170


state 126

   35 statementIf: IF LPAREN expr RPAREN . LBRACE statementList RBRACE
   36            | IF LPAREN expr RPAREN . LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE

    LBRACE  shift, and go to state 171


state 127

   34 statementWhile: WHILE LPAREN expr RPAREN . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 172


state 128

   37 statementAssign: VAR EQUAL expr SEMI .

    $default  reduce using rule 37 (statementAssign)


state 129

   65 commaArgList: expr COMMA . commaArgList

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr          go to state 78
    commaArgList  go to state 173


state 130

   12 statement: VAR LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 174


state 131

   38 statementAssign: VAR LBRACKET expr RBRACKET . EQUAL expr SEMI

    EQUAL  shift, and go to state 175


state 132

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 176


state 133

   14 statement: MOVEABSOLUTE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 177


state 134

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 178


state 135

   16 statement: MOVERELATIVE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 179


state 136

   17 statement: SLEEP LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 180


state 137

   18 statement: SLEEP LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 181


state 138

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 182


state 139

   20 statement: SLEEPUNTIL LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 183


state 140

   21 statement: LED LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 184


state 141

   22 statement: LED LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 185


state 142

   23 statement: RPM LPAREN BITWISEAND VAR . COMMA expr COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 186


state 143

   24 statement: RPM LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 187


state 144

   25 statement: RPMx10k LPAREN BITWISEAND VAR . COMMA expr COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 188


state 145

   26 statement: RPMx10k LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 189


state 146

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 190


state 147

   28 statement: ACCELMICROSEC LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 191


state 148

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 192


state 149

   30 statement: DEGREEx10kABSOLUTE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 193


state 150

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR . COMMA expr RPAREN SEMI

    COMMA  shift, and go to state 194


state 151

   32 statement: DEGREEx10kRELATIVE LPAREN argList RPAREN . SEMI

    SEMI  shift, and go to state 195


state 152

   72 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET . SEMI

    SEMI  shift, and go to state 196


state 153

   60 expr: VAR LPAREN argList . RPAREN

    RPAREN  shift, and go to state 197


state 154

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   61     | VAR LBRACKET expr . RBRACKET

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RBRACKET        shift, and go to state 198


state 155

   42 expr: LPAREN expr RPAREN .

    $default  reduce using rule 42 (expr)


state 156

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   51     | expr BITWISEOR expr .
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125

    $default  reduce using rule 51 (expr)


state 157

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   50     | expr BITWISEAND expr .
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125

    $default  reduce using rule 50 (expr)


state 158

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   49     | expr OR expr .
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125

    $default  reduce using rule 49 (expr)


state 159

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   48     | expr AND expr .
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125

    $default  reduce using rule 48 (expr)


state 160

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr
   57     | expr LSS expr .

    MINUS  shift, and go to state 121
    PLUS   shift, and go to state 122
    XOR    shift, and go to state 123
    DIV    shift, and go to state 124
    MULT   shift, and go to state 125

    $default  reduce using rule 57 (expr)


state 161

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   56     | expr GTR expr .
   57     | expr . LSS expr

    MINUS  shift, and go to state 121
    PLUS   shift, and go to state 122
    XOR    shift, and go to state 123
    DIV    shift, and go to state 124
    MULT   shift, and go to state 125

    $default  reduce using rule 56 (expr)


state 162

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   53     | expr NEQ expr .
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    MINUS  shift, and go to state 121
    PLUS   shift, and go to state 122
    XOR    shift, and go to state 123
    DIV    shift, and go to state 124
    MULT   shift, and go to state 125

    $default  reduce using rule 53 (expr)


state 163

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   55     | expr LEQ expr .
   56     | expr . GTR expr
   57     | expr . LSS expr

    MINUS  shift, and go to state 121
    PLUS   shift, and go to state 122
    XOR    shift, and go to state 123
    DIV    shift, and go to state 124
    MULT   shift, and go to state 125

    $default  reduce using rule 55 (expr)


state 164

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   54     | expr GEQ expr .
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    MINUS  shift, and go to state 121
    PLUS   shift, and go to state 122
    XOR    shift, and go to state 123
    DIV    shift, and go to state 124
    MULT   shift, and go to state 125

    $default  reduce using rule 54 (expr)


state 165

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   52     | expr TEST_FOR_EQUAL expr .
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    MINUS  shift, and go to state 121
    PLUS   shift, and go to state 122
    XOR    shift, and go to state 123
    DIV    shift, and go to state 124
    MULT   shift, and go to state 125

    $default  reduce using rule 52 (expr)


state 166

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   44     | expr MINUS expr .
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    XOR   shift, and go to state 123
    DIV   shift, and go to state 124
    MULT  shift, and go to state 125

    $default  reduce using rule 44 (expr)


state 167

   43 expr: expr . PLUS expr
   43     | expr PLUS expr .
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    XOR   shift, and go to state 123
    DIV   shift, and go to state 124
    MULT  shift, and go to state 125

    $default  reduce using rule 43 (expr)


state 168

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   47     | expr XOR expr .
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    DIV   shift, and go to state 124
    MULT  shift, and go to state 125

    $default  reduce using rule 47 (expr)


state 169

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   46     | expr DIV expr .
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    $default  reduce using rule 46 (expr)


state 170

   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   45     | expr MULT expr .
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    $default  reduce using rule 45 (expr)


state 171

   35 statementIf: IF LPAREN expr RPAREN LBRACE . statementList RBRACE
   36            | IF LPAREN expr RPAREN LBRACE . statementList RBRACE ELSE LBRACE statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 199


state 172

   34 statementWhile: WHILE LPAREN expr RPAREN LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 200


state 173

   65 commaArgList: expr COMMA commaArgList .

    $default  reduce using rule 65 (commaArgList)


state 174

   12 statement: VAR LPAREN argList RPAREN SEMI .

    $default  reduce using rule 12 (statement)


state 175

   38 statementAssign: VAR LBRACKET expr RBRACKET EQUAL . expr SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 201


state 176

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 202


state 177

   14 statement: MOVEABSOLUTE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 14 (statement)


state 178

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 203


state 179

   16 statement: MOVERELATIVE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 16 (statement)


state 180

   17 statement: SLEEP LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 204


state 181

   18 statement: SLEEP LPAREN argList RPAREN SEMI .

    $default  reduce using rule 18 (statement)


state 182

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 205


state 183

   20 statement: SLEEPUNTIL LPAREN argList RPAREN SEMI .

    $default  reduce using rule 20 (statement)


state 184

   21 statement: LED LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 206


state 185

   22 statement: LED LPAREN argList RPAREN SEMI .

    $default  reduce using rule 22 (statement)


state 186

   23 statement: RPM LPAREN BITWISEAND VAR COMMA . expr COMMA expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 207


state 187

   24 statement: RPM LPAREN argList RPAREN SEMI .

    $default  reduce using rule 24 (statement)


state 188

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA . expr COMMA expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 208


state 189

   26 statement: RPMx10k LPAREN argList RPAREN SEMI .

    $default  reduce using rule 26 (statement)


state 190

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 209


state 191

   28 statement: ACCELMICROSEC LPAREN argList RPAREN SEMI .

    $default  reduce using rule 28 (statement)


state 192

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 210


state 193

   30 statement: DEGREEx10kABSOLUTE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 30 (statement)


state 194

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 211


state 195

   32 statement: DEGREEx10kRELATIVE LPAREN argList RPAREN SEMI .

    $default  reduce using rule 32 (statement)


state 196

   72 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI .

    $default  reduce using rule 72 (arrayDefine)


state 197

   60 expr: VAR LPAREN argList RPAREN .

    $default  reduce using rule 60 (expr)


state 198

   61 expr: VAR LBRACKET expr RBRACKET .

    $default  reduce using rule 61 (expr)


state 199

    8 statementList: statementList . statement
   35 statementIf: IF LPAREN expr RPAREN LBRACE statementList . RBRACE
   36            | IF LPAREN expr RPAREN LBRACE statementList . RBRACE ELSE LBRACE statementList RBRACE

    RBRACE              shift, and go to state 212
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42

    statement        go to state 43
    statementWhile   go to state 44
    statementIf      go to state 45
    statementAssign  go to state 46
    arrayDefine      go to state 47


state 200

    8 statementList: statementList . statement
   34 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList . RBRACE

    RBRACE              shift, and go to state 213
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42

    statement        go to state 43
    statementWhile   go to state 44
    statementIf      go to state 45
    statementAssign  go to state 46
    arrayDefine      go to state 47


state 201

   38 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr . SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    SEMI            shift, and go to state 214


state 202

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 215


state 203

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 216


state 204

   17 statement: SLEEP LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 217


state 205

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 218


state 206

   21 statement: LED LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 219


state 207

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr . COMMA expr RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    COMMA           shift, and go to state 220
    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125


state 208

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr . COMMA expr RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    COMMA           shift, and go to state 221
    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125


state 209

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 222


state 210

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 223


state 211

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 224


state 212

   35 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE .
   36            | IF LPAREN expr RPAREN LBRACE statementList RBRACE . ELSE LBRACE statementList RBRACE

    ELSE  shift, and go to state 225

    $default  reduce using rule 35 (statementIf)


state 213

   34 statementWhile: WHILE LPAREN expr RPAREN LBRACE statementList RBRACE .

    $default  reduce using rule 34 (statementWhile)


state 214

   38 statementAssign: VAR LBRACKET expr RBRACKET EQUAL expr SEMI .

    $default  reduce using rule 38 (statementAssign)


state 215

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 226


state 216

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 227


state 217

   17 statement: SLEEP LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 228


state 218

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 229


state 219

   21 statement: LED LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 230


state 220

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 231


state 221

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA . expr RPAREN SEMI

    VAR     shift, and go to state 69
    CONST   shift, and go to state 70
    LPAREN  shift, and go to state 71
    MINUS   shift, and go to state 72
    BANG    shift, and go to state 73
    TILDE   shift, and go to state 74

    expr  go to state 232


state 222

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 233


state 223

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 234


state 224

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 235


state 225

   36 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE . LBRACE statementList RBRACE

    LBRACE  shift, and go to state 236


state 226

   13 statement: MOVEABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 13 (statement)


state 227

   15 statement: MOVERELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 15 (statement)


state 228

   17 statement: SLEEP LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 17 (statement)


state 229

   19 statement: SLEEPUNTIL LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 19 (statement)


state 230

   21 statement: LED LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 21 (statement)


state 231

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 237


state 232

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA expr . RPAREN SEMI
   43 expr: expr . PLUS expr
   44     | expr . MINUS expr
   45     | expr . MULT expr
   46     | expr . DIV expr
   47     | expr . XOR expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . BITWISEAND expr
   51     | expr . BITWISEOR expr
   52     | expr . TEST_FOR_EQUAL expr
   53     | expr . NEQ expr
   54     | expr . GEQ expr
   55     | expr . LEQ expr
   56     | expr . GTR expr
   57     | expr . LSS expr

    BITWISEOR       shift, and go to state 111
    BITWISEAND      shift, and go to state 112
    OR              shift, and go to state 113
    AND             shift, and go to state 114
    LSS             shift, and go to state 115
    GTR             shift, and go to state 116
    NEQ             shift, and go to state 117
    LEQ             shift, and go to state 118
    GEQ             shift, and go to state 119
    TEST_FOR_EQUAL  shift, and go to state 120
    MINUS           shift, and go to state 121
    PLUS            shift, and go to state 122
    XOR             shift, and go to state 123
    DIV             shift, and go to state 124
    MULT            shift, and go to state 125
    RPAREN          shift, and go to state 238


state 233

   27 statement: ACCELMICROSEC LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 27 (statement)


state 234

   29 statement: DEGREEx10kABSOLUTE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 29 (statement)


state 235

   31 statement: DEGREEx10kRELATIVE LPAREN BITWISEAND VAR COMMA expr RPAREN SEMI .

    $default  reduce using rule 31 (statement)


state 236

   36 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE . statementList RBRACE

    $default  reduce using rule 7 (statementList)

    statementList  go to state 239


state 237

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 240


state 238

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN . SEMI

    SEMI  shift, and go to state 241


state 239

    8 statementList: statementList . statement
   36 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList . RBRACE

    RBRACE              shift, and go to state 242
    ARRAYDEFINE         shift, and go to state 29
    IF                  shift, and go to state 30
    WHILE               shift, and go to state 31
    VAR                 shift, and go to state 32
    MOVEABSOLUTE        shift, and go to state 33
    MOVERELATIVE        shift, and go to state 34
    SLEEP               shift, and go to state 35
    SLEEPUNTIL          shift, and go to state 36
    LED                 shift, and go to state 37
    RPM                 shift, and go to state 38
    RPMx10k             shift, and go to state 39
    ACCELMICROSEC       shift, and go to state 40
    DEGREEx10kABSOLUTE  shift, and go to state 41
    DEGREEx10kRELATIVE  shift, and go to state 42

    statement        go to state 43
    statementWhile   go to state 44
    statementIf      go to state 45
    statementAssign  go to state 46
    arrayDefine      go to state 47


state 240

   23 statement: RPM LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI .

    $default  reduce using rule 23 (statement)


state 241

   25 statement: RPMx10k LPAREN BITWISEAND VAR COMMA expr COMMA expr RPAREN SEMI .

    $default  reduce using rule 25 (statement)


state 242

   36 statementIf: IF LPAREN expr RPAREN LBRACE statementList RBRACE ELSE LBRACE statementList RBRACE .

    $default  reduce using rule 36 (statementIf)
