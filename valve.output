Terminals unused in grammar

   INPUTS
   OUTPUTS
   COMMA
   BANG
   NEQ


Grammar

    0 $accept: program $end

    1 program: patternActionList

    2 patternActionList: /* empty */
    3                  | patternActionList patternAction

    4 patternAction: IF LPAREN pattern RPAREN LBRACE action RBRACE

    5 action: /* empty */
    6       | action statementAction

    7 statementAction: var EQUAL arithmeticExpression SEMI
    8                | arrayDefine
    9                | array EQUAL arithmeticExpression SEMI

   10 pattern: LPAREN pattern RPAREN
   11        | pattern AND pattern
   12        | pattern OR pattern
   13        | patternCompare

   14 patternCompare: var operandTest arithmeticExpression
   15               | var
   16               | CONST

   17 arithmeticExpression: LPAREN arithmeticExpression RPAREN
   18                     | arithmeticExpression PLUS arithmeticExpression
   19                     | arithmeticExpression MINUS arithmeticExpression
   20                     | arithmeticExpression MULT arithmeticExpression
   21                     | arithmeticExpression DIV arithmeticExpression
   22                     | arithmeticExpression XOR arithmeticExpression
   23                     | var
   24                     | CONST
   25                     | array

   26 var: VAR
   27    | VAR_METHOD

   28 array: VAR LBRACKET arithmeticExpression RBRACKET

   29 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI

   30 operandTest: TEST_FOR_EQUAL
   31            | GEQ
   32            | LEQ
   33            | GTR
   34            | LSS


Terminals, with rules where they appear

$end (0) 0
error (256)
INPUTS (258)
OUTPUTS (259)
COMMA (260)
BANG (261)
EQUAL (262) 7 9
GEQ (263) 31
LEQ (264) 32
NEQ (265)
GTR (266) 33
LSS (267) 34
TEST_FOR_EQUAL (268) 30
LBRACE (269) 4
RBRACE (270) 4
ARRAYDEFINE (271) 29
IF (272) 4
VAR (273) 26 28 29
VAR_METHOD (274) 27
CONST (275) 16 24 29
LPAREN (276) 4 10 17
MINUS (277) 19
PLUS (278) 18
XOR (279) 22
OR (280) 12
AND (281) 11
DIV (282) 21
MULT (283) 20
LBRACKET (284) 28 29
RBRACKET (285) 28 29
RPAREN (286) 4 10 17
SEMI (287) 7 9 29


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
patternActionList (35)
    on left: 2 3, on right: 1 3
patternAction (36)
    on left: 4, on right: 3
action (37)
    on left: 5 6, on right: 4 6
statementAction (38)
    on left: 7 8 9, on right: 6
pattern (39)
    on left: 10 11 12 13, on right: 4 10 11 12
patternCompare (40)
    on left: 14 15 16, on right: 13
arithmeticExpression (41)
    on left: 17 18 19 20 21 22 23 24 25, on right: 7 9 14 17 18 19
    20 21 22 28
var (42)
    on left: 26 27, on right: 7 14 15 23
array (43)
    on left: 28, on right: 9 25
arrayDefine (44)
    on left: 29, on right: 8
operandTest (45)
    on left: 30 31 32 33 34, on right: 14


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (patternActionList)

    program            go to state 1
    patternActionList  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: patternActionList .
    3 patternActionList: patternActionList . patternAction

    IF  shift, and go to state 4

    $default  reduce using rule 1 (program)

    patternAction  go to state 5


state 3

    0 $accept: program $end .

    $default  accept


state 4

    4 patternAction: IF . LPAREN pattern RPAREN LBRACE action RBRACE

    LPAREN  shift, and go to state 6


state 5

    3 patternActionList: patternActionList patternAction .

    $default  reduce using rule 3 (patternActionList)


state 6

    4 patternAction: IF LPAREN . pattern RPAREN LBRACE action RBRACE

    VAR         shift, and go to state 7
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 9
    LPAREN      shift, and go to state 10

    pattern         go to state 11
    patternCompare  go to state 12
    var             go to state 13


state 7

   26 var: VAR .

    $default  reduce using rule 26 (var)


state 8

   27 var: VAR_METHOD .

    $default  reduce using rule 27 (var)


state 9

   16 patternCompare: CONST .

    $default  reduce using rule 16 (patternCompare)


state 10

   10 pattern: LPAREN . pattern RPAREN

    VAR         shift, and go to state 7
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 9
    LPAREN      shift, and go to state 10

    pattern         go to state 14
    patternCompare  go to state 12
    var             go to state 13


state 11

    4 patternAction: IF LPAREN pattern . RPAREN LBRACE action RBRACE
   11 pattern: pattern . AND pattern
   12        | pattern . OR pattern

    OR      shift, and go to state 15
    AND     shift, and go to state 16
    RPAREN  shift, and go to state 17


state 12

   13 pattern: patternCompare .

    $default  reduce using rule 13 (pattern)


state 13

   14 patternCompare: var . operandTest arithmeticExpression
   15               | var .

    GEQ             shift, and go to state 18
    LEQ             shift, and go to state 19
    GTR             shift, and go to state 20
    LSS             shift, and go to state 21
    TEST_FOR_EQUAL  shift, and go to state 22

    $default  reduce using rule 15 (patternCompare)

    operandTest  go to state 23


state 14

   10 pattern: LPAREN pattern . RPAREN
   11        | pattern . AND pattern
   12        | pattern . OR pattern

    OR      shift, and go to state 15
    AND     shift, and go to state 16
    RPAREN  shift, and go to state 24


state 15

   12 pattern: pattern OR . pattern

    VAR         shift, and go to state 7
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 9
    LPAREN      shift, and go to state 10

    pattern         go to state 25
    patternCompare  go to state 12
    var             go to state 13


state 16

   11 pattern: pattern AND . pattern

    VAR         shift, and go to state 7
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 9
    LPAREN      shift, and go to state 10

    pattern         go to state 26
    patternCompare  go to state 12
    var             go to state 13


state 17

    4 patternAction: IF LPAREN pattern RPAREN . LBRACE action RBRACE

    LBRACE  shift, and go to state 27


state 18

   31 operandTest: GEQ .

    $default  reduce using rule 31 (operandTest)


state 19

   32 operandTest: LEQ .

    $default  reduce using rule 32 (operandTest)


state 20

   33 operandTest: GTR .

    $default  reduce using rule 33 (operandTest)


state 21

   34 operandTest: LSS .

    $default  reduce using rule 34 (operandTest)


state 22

   30 operandTest: TEST_FOR_EQUAL .

    $default  reduce using rule 30 (operandTest)


state 23

   14 patternCompare: var operandTest . arithmeticExpression

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 31
    var                   go to state 32
    array                 go to state 33


state 24

   10 pattern: LPAREN pattern RPAREN .

    $default  reduce using rule 10 (pattern)


state 25

   11 pattern: pattern . AND pattern
   12        | pattern . OR pattern
   12        | pattern OR pattern .

    $default  reduce using rule 12 (pattern)


state 26

   11 pattern: pattern . AND pattern
   11        | pattern AND pattern .
   12        | pattern . OR pattern

    $default  reduce using rule 11 (pattern)


state 27

    4 patternAction: IF LPAREN pattern RPAREN LBRACE . action RBRACE

    $default  reduce using rule 5 (action)

    action  go to state 34


state 28

   26 var: VAR .
   28 array: VAR . LBRACKET arithmeticExpression RBRACKET

    LBRACKET  shift, and go to state 35

    $default  reduce using rule 26 (var)


state 29

   24 arithmeticExpression: CONST .

    $default  reduce using rule 24 (arithmeticExpression)


state 30

   17 arithmeticExpression: LPAREN . arithmeticExpression RPAREN

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 36
    var                   go to state 32
    array                 go to state 33


state 31

   14 patternCompare: var operandTest arithmeticExpression .
   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41

    $default  reduce using rule 14 (patternCompare)


state 32

   23 arithmeticExpression: var .

    $default  reduce using rule 23 (arithmeticExpression)


state 33

   25 arithmeticExpression: array .

    $default  reduce using rule 25 (arithmeticExpression)


state 34

    4 patternAction: IF LPAREN pattern RPAREN LBRACE action . RBRACE
    6 action: action . statementAction

    RBRACE       shift, and go to state 42
    ARRAYDEFINE  shift, and go to state 43
    VAR          shift, and go to state 28
    VAR_METHOD   shift, and go to state 8

    statementAction  go to state 44
    var              go to state 45
    array            go to state 46
    arrayDefine      go to state 47


state 35

   28 array: VAR LBRACKET . arithmeticExpression RBRACKET

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 48
    var                   go to state 32
    array                 go to state 33


state 36

   17 arithmeticExpression: LPAREN arithmeticExpression . RPAREN
   18                     | arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression

    MINUS   shift, and go to state 37
    PLUS    shift, and go to state 38
    XOR     shift, and go to state 39
    DIV     shift, and go to state 40
    MULT    shift, and go to state 41
    RPAREN  shift, and go to state 49


state 37

   19 arithmeticExpression: arithmeticExpression MINUS . arithmeticExpression

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 50
    var                   go to state 32
    array                 go to state 33


state 38

   18 arithmeticExpression: arithmeticExpression PLUS . arithmeticExpression

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 51
    var                   go to state 32
    array                 go to state 33


state 39

   22 arithmeticExpression: arithmeticExpression XOR . arithmeticExpression

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 52
    var                   go to state 32
    array                 go to state 33


state 40

   21 arithmeticExpression: arithmeticExpression DIV . arithmeticExpression

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 53
    var                   go to state 32
    array                 go to state 33


state 41

   20 arithmeticExpression: arithmeticExpression MULT . arithmeticExpression

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 54
    var                   go to state 32
    array                 go to state 33


state 42

    4 patternAction: IF LPAREN pattern RPAREN LBRACE action RBRACE .

    $default  reduce using rule 4 (patternAction)


state 43

   29 arrayDefine: ARRAYDEFINE . VAR LBRACKET CONST RBRACKET SEMI

    VAR  shift, and go to state 55


state 44

    6 action: action statementAction .

    $default  reduce using rule 6 (action)


state 45

    7 statementAction: var . EQUAL arithmeticExpression SEMI

    EQUAL  shift, and go to state 56


state 46

    9 statementAction: array . EQUAL arithmeticExpression SEMI

    EQUAL  shift, and go to state 57


state 47

    8 statementAction: arrayDefine .

    $default  reduce using rule 8 (statementAction)


state 48

   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression
   28 array: VAR LBRACKET arithmeticExpression . RBRACKET

    MINUS     shift, and go to state 37
    PLUS      shift, and go to state 38
    XOR       shift, and go to state 39
    DIV       shift, and go to state 40
    MULT      shift, and go to state 41
    RBRACKET  shift, and go to state 58


state 49

   17 arithmeticExpression: LPAREN arithmeticExpression RPAREN .

    $default  reduce using rule 17 (arithmeticExpression)


state 50

   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   19                     | arithmeticExpression MINUS arithmeticExpression .
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression

    XOR   shift, and go to state 39
    DIV   shift, and go to state 40
    MULT  shift, and go to state 41

    $default  reduce using rule 19 (arithmeticExpression)


state 51

   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   18                     | arithmeticExpression PLUS arithmeticExpression .
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression

    XOR   shift, and go to state 39
    DIV   shift, and go to state 40
    MULT  shift, and go to state 41

    $default  reduce using rule 18 (arithmeticExpression)


state 52

   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression
   22                     | arithmeticExpression XOR arithmeticExpression .

    DIV   shift, and go to state 40
    MULT  shift, and go to state 41

    $default  reduce using rule 22 (arithmeticExpression)


state 53

   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   21                     | arithmeticExpression DIV arithmeticExpression .
   22                     | arithmeticExpression . XOR arithmeticExpression

    $default  reduce using rule 21 (arithmeticExpression)


state 54

   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   20                     | arithmeticExpression MULT arithmeticExpression .
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression

    $default  reduce using rule 20 (arithmeticExpression)


state 55

   29 arrayDefine: ARRAYDEFINE VAR . LBRACKET CONST RBRACKET SEMI

    LBRACKET  shift, and go to state 59


state 56

    7 statementAction: var EQUAL . arithmeticExpression SEMI

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 60
    var                   go to state 32
    array                 go to state 33


state 57

    9 statementAction: array EQUAL . arithmeticExpression SEMI

    VAR         shift, and go to state 28
    VAR_METHOD  shift, and go to state 8
    CONST       shift, and go to state 29
    LPAREN      shift, and go to state 30

    arithmeticExpression  go to state 61
    var                   go to state 32
    array                 go to state 33


state 58

   28 array: VAR LBRACKET arithmeticExpression RBRACKET .

    $default  reduce using rule 28 (array)


state 59

   29 arrayDefine: ARRAYDEFINE VAR LBRACKET . CONST RBRACKET SEMI

    CONST  shift, and go to state 62


state 60

    7 statementAction: var EQUAL arithmeticExpression . SEMI
   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41
    SEMI   shift, and go to state 63


state 61

    9 statementAction: array EQUAL arithmeticExpression . SEMI
   18 arithmeticExpression: arithmeticExpression . PLUS arithmeticExpression
   19                     | arithmeticExpression . MINUS arithmeticExpression
   20                     | arithmeticExpression . MULT arithmeticExpression
   21                     | arithmeticExpression . DIV arithmeticExpression
   22                     | arithmeticExpression . XOR arithmeticExpression

    MINUS  shift, and go to state 37
    PLUS   shift, and go to state 38
    XOR    shift, and go to state 39
    DIV    shift, and go to state 40
    MULT   shift, and go to state 41
    SEMI   shift, and go to state 64


state 62

   29 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST . RBRACKET SEMI

    RBRACKET  shift, and go to state 65


state 63

    7 statementAction: var EQUAL arithmeticExpression SEMI .

    $default  reduce using rule 7 (statementAction)


state 64

    9 statementAction: array EQUAL arithmeticExpression SEMI .

    $default  reduce using rule 9 (statementAction)


state 65

   29 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET . SEMI

    SEMI  shift, and go to state 66


state 66

   29 arrayDefine: ARRAYDEFINE VAR LBRACKET CONST RBRACKET SEMI .

    $default  reduce using rule 29 (arrayDefine)
