Starting parse
Entering state 0
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 93 ("//")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("T")
--accepting rule at line 95 ("e")
--accepting rule at line 95 ("s")
--accepting rule at line 95 ("t")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("p")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("o")
--accepting rule at line 95 ("g")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("a")
--accepting rule at line 95 ("m")
--accepting rule at line 95 ("")
--accepting rule at line 97 ("
")
--accepting rule at line 93 ("//")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("(")
--accepting rule at line 95 ("c")
--accepting rule at line 95 (")")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("G")
--accepting rule at line 95 ("a")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("e")
--accepting rule at line 95 ("t")
--accepting rule at line 95 ("h")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("S")
--accepting rule at line 95 ("c")
--accepting rule at line 95 ("o")
--accepting rule at line 95 ("t")
--accepting rule at line 95 ("t")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("2")
--accepting rule at line 95 ("0")
--accepting rule at line 95 ("1")
--accepting rule at line 95 ("3")
--accepting rule at line 95 ("")
--accepting rule at line 97 ("
")
--accepting rule at line 70 ("main")
Next token is token MAIN ()
Shifting token MAIN ()
Entering state 1
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 4
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 66 (line 200):
-> $$ = nterm defnArgList ()
Stack now 0 1 4
Entering state 9
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 15
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 19
Reducing stack by rule 7 (line 114):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 53
Entering state 77
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 53
Entering state 77
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 53
Entering state 77
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("4")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 53
Entering state 77
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 53
Entering state 77
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 76 ("RPM")
Next token is token RPM ()
Shifting token RPM ()
Entering state 38
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 61
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 92
Reading a token: --accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 142
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 186
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 38 61 92 142 186
Entering state 207
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 220
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("100")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 38 61 92 142 186 207 220
Entering state 231
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 237
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 240
Reducing stack by rule 23 (line 140):
   $1 = token RPM ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token COMMA ()
   $8 = nterm expr ()
   $9 = token RPAREN ()
   $10 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 69 ("while")
Next token is token WHILE ()
Shifting token WHILE ()
Entering state 31
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 52
Reading a token: --accepting rule at line 83 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting default rule (" ")
--accepting rule at line 58 ("<")
Next token is token LSS ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52
Entering state 76
Next token is token LSS ()
Shifting token LSS ()
Entering state 115
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("142")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 115
Entering state 160
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 57 (line 188):
   $1 = nterm expr ()
   $2 = token LSS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52
Entering state 76
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 127
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 172
Reducing stack by rule 7 (line 114):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("!")
Next token is token BANG ()
Shifting token BANG ()
Entering state 73
Reading a token: --accepting rule at line 83 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 32 53 73
Entering state 109
Reducing stack by rule 40 (line 171):
   $1 = token BANG ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 32 53
Entering state 77
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 75 ("led")
Next token is token LED ()
Shifting token LED ()
Entering state 37
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 60
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 90
Reading a token: --accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 140
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 184
Reading a token: --accepting default rule (" ")
--accepting rule at line 83 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 37 60 90 140 184
Entering state 206
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 219
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 230
Reducing stack by rule 21 (line 137):
   $1 = token LED ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 93 ("//")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("T")
--accepting rule at line 95 ("h")
--accepting rule at line 95 ("e")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("f")
--accepting rule at line 95 ("i")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("s")
--accepting rule at line 95 ("t")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("p")
--accepting rule at line 95 ("a")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("a")
--accepting rule at line 95 ("m")
--accepting rule at line 95 ("a")
--accepting rule at line 95 ("t")
--accepting rule at line 95 ("e")
--accepting rule at line 95 ("r")
--accepting rule at line 95 (",")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("&")
--accepting rule at line 95 ("x")
--accepting rule at line 95 (",")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("i")
--accepting rule at line 95 ("s")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("t")
--accepting rule at line 95 ("h")
--accepting rule at line 95 ("e")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("e")
--accepting rule at line 95 ("t")
--accepting rule at line 95 ("u")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("n")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("v")
--accepting rule at line 95 ("a")
--accepting rule at line 95 ("l")
--accepting rule at line 95 ("u")
--accepting rule at line 95 ("e")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("a")
--accepting rule at line 95 ("n")
--accepting rule at line 95 ("d")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("i")
--accepting rule at line 95 ("s")
--accepting rule at line 95 (" ")
--accepting rule at line 95 ("p")
--accepting rule at line 95 ("a")
--accepting rule at line 95 ("s")
--accepting rule at line 95 ("s")
--accepting rule at line 95 ("-")
--accepting rule at line 95 ("b")
--accepting rule at line 95 ("y")
--accepting rule at line 95 ("-")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("e")
--accepting rule at line 95 ("f")
--accepting rule at line 95 ("e")
--accepting rule at line 95 ("r")
--accepting rule at line 95 ("e")
--accepting rule at line 95 ("n")
--accepting rule at line 95 ("c")
--accepting rule at line 95 ("e")
--accepting rule at line 95 ("")
--accepting rule at line 97 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("!")
Next token is token BANG ()
Shifting token BANG ()
Entering state 73
Reading a token: --accepting rule at line 83 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 32 53 73
Entering state 109
Reducing stack by rule 40 (line 171):
   $1 = token BANG ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 32 53
Entering state 77
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 58
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 86
Reading a token: --accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 136
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 180
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 35 58 86 136 180
Entering state 204
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 217
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 228
Reducing stack by rule 17 (line 131):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 75 ("led")
Next token is token LED ()
Shifting token LED ()
Entering state 37
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 60
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 90
Reading a token: --accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 140
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 184
Reading a token: --accepting default rule (" ")
--accepting rule at line 83 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 37 60 90 140 184
Entering state 206
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 219
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 230
Reducing stack by rule 21 (line 137):
   $1 = token LED ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 58
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 86
Reading a token: --accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 136
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 180
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 35 58 86 136 180
Entering state 204
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 217
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 228
Reducing stack by rule 17 (line 131):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 83 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting default rule (" ")
--accepting rule at line 49 ("+")
Next token is token PLUS ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 32 53
Entering state 77
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 122
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 32 53 77 122
Entering state 167
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 43 (line 174):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 32 53
Entering state 77
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 67 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 30
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 51
Reading a token: --accepting rule at line 83 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting default rule (" ")
--accepting rule at line 57 (">")
Next token is token GTR ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51
Entering state 75
Next token is token GTR ()
Shifting token GTR ()
Entering state 116
Reading a token: --accepting default rule (" ")
--accepting rule at line 83 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 116
Entering state 161
Next token is token RPAREN ()
Reducing stack by rule 56 (line 187):
   $1 = nterm expr ()
   $2 = token GTR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51
Entering state 75
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 126
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 171
Reducing stack by rule 7 (line 114):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171
Entering state 199
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("moveBack")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 83 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting default rule (" ")
--accepting rule at line 51 ("*")
Next token is token MULT ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 32 53
Entering state 77
Next token is token MULT ()
Shifting token MULT ()
Entering state 125
Reading a token: --accepting default rule (" ")
--accepting rule at line 50 ("-")
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 72
Reading a token: --accepting rule at line 83 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 32 53 77 125 72
Entering state 108
Next token is token SEMI ()
Reducing stack by rule 39 (line 170):
   $1 = token MINUS ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 32 53 77 125
Entering state 170
Reducing stack by rule 45 (line 176):
   $1 = nterm expr ()
   $2 = token MULT ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 32 53
Entering state 77
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171
Entering state 199
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 72 ("moveRelative")
Next token is token MOVERELATIVE ()
Shifting token MOVERELATIVE ()
Entering state 34
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 57
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 84
Reading a token: --accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 134
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 178
Reading a token: --accepting default rule (" ")
--accepting rule at line 83 ("moveBack")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 34 57 84 134 178
Entering state 203
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 216
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 227
Reducing stack by rule 15 (line 128):
   $1 = token MOVERELATIVE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171
Entering state 199
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 53
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 32 53
Entering state 77
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 128
Reducing stack by rule 37 (line 165):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199
Entering state 46
Reducing stack by rule 9 (line 117):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171
Entering state 199
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 58
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 86
Reading a token: --accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 136
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 180
Reading a token: --accepting default rule (" ")
--accepting rule at line 81 ("4000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 70
Reducing stack by rule 59 (line 190):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 35 58 86 136 180
Entering state 204
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 217
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 228
Reducing stack by rule 17 (line 131):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171
Entering state 199
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 212
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("else")
Next token is token ELSE ()
Shifting token ELSE ()
Entering state 225
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 236
Reducing stack by rule 7 (line 114):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 212 225 236
Entering state 239
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 72 ("moveRelative")
Next token is token MOVERELATIVE ()
Shifting token MOVERELATIVE ()
Entering state 34
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 57
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 84
Reading a token: --accepting rule at line 83 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 134
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 178
Reading a token: --accepting default rule (" ")
--accepting rule at line 83 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 69
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 58 (line 189):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 212 225 236 239 34 57 84 134 178
Entering state 203
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 216
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 227
Reducing stack by rule 15 (line 128):
   $1 = token MOVERELATIVE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 212 225 236 239
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200 30 51 75 126 171 199 212 225 236
Entering state 239
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 242
Reducing stack by rule 36 (line 163):
   $1 = token IF ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
   $8 = token ELSE ()
   $9 = token LBRACE ()
   $10 = nterm statementList ()
   $11 = token RBRACE ()
-> $$ = nterm statementIf ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 45
Reducing stack by rule 10 (line 118):
   $1 = nterm statementIf ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172 200
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 52 76 127 172
Entering state 200
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 213
Reducing stack by rule 34 (line 157):
   $1 = token WHILE ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm statementWhile ()
Stack now 0 1 4 9 15 19 24
Entering state 44
Reducing stack by rule 11 (line 119):
   $1 = nterm statementWhile ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 43
Reducing stack by rule 8 (line 115):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 28
Reducing stack by rule 4 (line 108):
   $1 = token MAIN ()
   $2 = token LPAREN ()
   $3 = nterm defnArgList ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm functionDefnMain ()
Stack now 0
Entering state 3
Reducing stack by rule 2 (line 105):
-> $$ = nterm functionDefnList ()
Stack now 0 3
Entering state 6
Reading a token: --accepting default rule ("")
--accepting rule at line 85 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 103):
   $1 = nterm functionDefnMain ()
   $2 = nterm functionDefnList ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Now at end of input.
Shifting token $end ()
Entering state 5
Stack now 0 2 5
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
