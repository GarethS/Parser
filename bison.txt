Starting parse
Entering state 0
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 87 ("//")
--accepting rule at line 89 (" ")
--accepting rule at line 89 (""")
--accepting rule at line 89 ("S")
--accepting rule at line 89 ("o")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("a")
--accepting rule at line 89 ("s")
--accepting rule at line 89 ("y")
--accepting rule at line 89 (",")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("v")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("n")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("y")
--accepting rule at line 89 ("o")
--accepting rule at line 89 ("u")
--accepting rule at line 89 ("r")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("G")
--accepting rule at line 89 ("r")
--accepting rule at line 89 ("a")
--accepting rule at line 89 ("n")
--accepting rule at line 89 ("n")
--accepting rule at line 89 ("y")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("c")
--accepting rule at line 89 ("o")
--accepting rule at line 89 ("u")
--accepting rule at line 89 ("l")
--accepting rule at line 89 ("d")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("d")
--accepting rule at line 89 ("o")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("i")
--accepting rule at line 89 ("t")
--accepting rule at line 89 (".")
--accepting rule at line 89 (""")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("")
--accepting rule at line 91 ("
")
--accepting rule at line 69 ("main")
Next token is token MAIN ()
Shifting token MAIN ()
Entering state 1
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 4
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 55 (line 175):
-> $$ = nterm defnArgList ()
Stack now 0 1 4
Entering state 9
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 15
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 19
Reducing stack by rule 7 (line 105):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 48
Entering state 66
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 48
Entering state 66
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 48
Entering state 66
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("16")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 48
Entering state 66
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("60")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 48
Entering state 66
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 68 ("while")
Next token is token WHILE ()
Shifting token WHILE ()
Entering state 31
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 47
Reading a token: --accepting rule at line 77 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting default rule (" ")
--accepting rule at line 57 ("<")
Next token is token LSS ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47
Entering state 65
Next token is token LSS ()
Shifting token LSS ()
Entering state 93
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("142")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 93
Entering state 128
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 46 (line 163):
   $1 = nterm expr ()
   $2 = token LSS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47
Entering state 65
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 105
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 140
Reducing stack by rule 7 (line 105):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 32 48
Entering state 66
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 74 ("led")
Next token is token LED ()
Shifting token LED ()
Entering state 37
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 55
Reading a token: --accepting rule at line 63 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 79
Reading a token: --accepting rule at line 77 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 118
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 152
Reading a token: --accepting default rule (" ")
--accepting rule at line 77 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 37 55 79 118 152
Entering state 164
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 172
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 178
Reducing stack by rule 21 (line 128):
   $1 = token LED ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 87 ("//")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("T")
--accepting rule at line 89 ("h")
--accepting rule at line 89 ("e")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("f")
--accepting rule at line 89 ("i")
--accepting rule at line 89 ("r")
--accepting rule at line 89 ("s")
--accepting rule at line 89 ("t")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("p")
--accepting rule at line 89 ("a")
--accepting rule at line 89 ("r")
--accepting rule at line 89 ("a")
--accepting rule at line 89 ("m")
--accepting rule at line 89 ("a")
--accepting rule at line 89 ("t")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("r")
--accepting rule at line 89 (",")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("&")
--accepting rule at line 89 ("x")
--accepting rule at line 89 (",")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("i")
--accepting rule at line 89 ("s")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("t")
--accepting rule at line 89 ("h")
--accepting rule at line 89 ("e")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("r")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("t")
--accepting rule at line 89 ("u")
--accepting rule at line 89 ("r")
--accepting rule at line 89 ("n")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("v")
--accepting rule at line 89 ("a")
--accepting rule at line 89 ("l")
--accepting rule at line 89 ("u")
--accepting rule at line 89 ("e")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("a")
--accepting rule at line 89 ("n")
--accepting rule at line 89 ("d")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("i")
--accepting rule at line 89 ("s")
--accepting rule at line 89 (" ")
--accepting rule at line 89 ("p")
--accepting rule at line 89 ("a")
--accepting rule at line 89 ("s")
--accepting rule at line 89 ("s")
--accepting rule at line 89 ("-")
--accepting rule at line 89 ("b")
--accepting rule at line 89 ("y")
--accepting rule at line 89 ("-")
--accepting rule at line 89 ("r")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("f")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("r")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("n")
--accepting rule at line 89 ("c")
--accepting rule at line 89 ("e")
--accepting rule at line 89 ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 32 48
Entering state 66
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 72 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 53
Reading a token: --accepting rule at line 63 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 75
Reading a token: --accepting rule at line 77 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 114
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 148
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("500")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 35 53 75 114 148
Entering state 162
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 170
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 176
Reducing stack by rule 17 (line 122):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 74 ("led")
Next token is token LED ()
Shifting token LED ()
Entering state 37
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 55
Reading a token: --accepting rule at line 63 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 79
Reading a token: --accepting rule at line 77 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 118
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 152
Reading a token: --accepting default rule (" ")
--accepting rule at line 77 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 37 55 79 118 152
Entering state 164
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 172
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 178
Reducing stack by rule 21 (line 128):
   $1 = token LED ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 72 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 53
Reading a token: --accepting rule at line 63 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 75
Reading a token: --accepting rule at line 77 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 114
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 148
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("500")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 35 53 75 114 148
Entering state 162
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 170
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 176
Reducing stack by rule 17 (line 122):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 77 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("+")
Next token is token PLUS ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 32 48
Entering state 66
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 100
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 32 48 66 100
Entering state 135
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 32 (line 149):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 32 48
Entering state 66
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 66 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 30
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 46
Reading a token: --accepting rule at line 77 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting default rule (" ")
--accepting rule at line 56 (">")
Next token is token GTR ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46
Entering state 64
Next token is token GTR ()
Shifting token GTR ()
Entering state 94
Reading a token: --accepting default rule (" ")
--accepting rule at line 77 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 94
Entering state 129
Next token is token RPAREN ()
Reducing stack by rule 45 (line 162):
   $1 = nterm expr ()
   $2 = token GTR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46
Entering state 64
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 104
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 139
Reducing stack by rule 7 (line 105):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139
Entering state 157
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("moveBack")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 77 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting default rule (" ")
--accepting rule at line 50 ("*")
Next token is token MULT ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 32 48
Entering state 66
Next token is token MULT ()
Shifting token MULT ()
Entering state 103
Reading a token: --accepting default rule (" ")
--accepting rule at line 49 ("-")
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 63
Reading a token: --accepting rule at line 77 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 32 48 66 103 63
Entering state 88
Next token is token SEMI ()
Reducing stack by rule 29 (line 146):
   $1 = token MINUS ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 32 48 66 103
Entering state 138
Reducing stack by rule 34 (line 151):
   $1 = nterm expr ()
   $2 = token MULT ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 32 48
Entering state 66
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139
Entering state 157
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 71 ("moveRelative")
Next token is token MOVERELATIVE ()
Shifting token MOVERELATIVE ()
Entering state 34
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 52
Reading a token: --accepting rule at line 63 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 73
Reading a token: --accepting rule at line 77 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 112
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 146
Reading a token: --accepting default rule (" ")
--accepting rule at line 77 ("moveBack")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 34 52 73 112 146
Entering state 161
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 169
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 175
Reducing stack by rule 15 (line 119):
   $1 = token MOVERELATIVE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139
Entering state 157
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 48
Reading a token: --accepting default rule (" ")
--accepting rule at line 75 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 61
Reducing stack by rule 48 (line 165):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 32 48
Entering state 66
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 106
Reducing stack by rule 27 (line 141):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157
Entering state 41
Reducing stack by rule 9 (line 108):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139
Entering state 157
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 165
Reading a token: --accepting default rule (" ")
--accepting rule at line 67 ("else")
Next token is token ELSE ()
Shifting token ELSE ()
Entering state 173
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 179
Reducing stack by rule 7 (line 105):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 165 173 179
Entering state 180
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 71 ("moveRelative")
Next token is token MOVERELATIVE ()
Shifting token MOVERELATIVE ()
Entering state 34
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 52
Reading a token: --accepting rule at line 63 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 73
Reading a token: --accepting rule at line 77 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 112
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 146
Reading a token: --accepting default rule (" ")
--accepting rule at line 77 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 60
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 47 (line 164):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 165 173 179 180 34 52 73 112 146
Entering state 161
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 169
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 175
Reducing stack by rule 15 (line 119):
   $1 = token MOVERELATIVE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 165 173 179 180
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158 30 46 64 104 139 157 165 173 179
Entering state 180
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 181
Reducing stack by rule 26 (line 139):
   $1 = token IF ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
   $8 = token ELSE ()
   $9 = token LBRACE ()
   $10 = nterm statementList ()
   $11 = token RBRACE ()
-> $$ = nterm statementIf ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 40
Reducing stack by rule 10 (line 109):
   $1 = nterm statementIf ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140 158
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 47 65 105 140
Entering state 158
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 166
Reducing stack by rule 24 (line 133):
   $1 = token WHILE ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm statementWhile ()
Stack now 0 1 4 9 15 19 24
Entering state 39
Reducing stack by rule 11 (line 110):
   $1 = nterm statementWhile ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 38
Reducing stack by rule 8 (line 106):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 28
Reducing stack by rule 4 (line 99):
   $1 = token MAIN ()
   $2 = token LPAREN ()
   $3 = nterm defnArgList ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm functionDefnMain ()
Stack now 0
Entering state 3
Reducing stack by rule 2 (line 96):
-> $$ = nterm functionDefnList ()
Stack now 0 3
Entering state 6
Reading a token: --accepting default rule ("")
--accepting rule at line 79 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 94):
   $1 = nterm functionDefnMain ()
   $2 = nterm functionDefnList ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Now at end of input.
Shifting token $end ()
Entering state 5
Stack now 0 2 5
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
