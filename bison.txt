Starting parse
Entering state 0
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 67 ("main")
Next token is token MAIN ()
Shifting token MAIN ()
Entering state 1
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 4
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 49 (line 156):
-> $$ = nterm defnArgList ()
Stack now 0 1 4
Entering state 9
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 15
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 20
Reducing stack by rule 7 (line 96):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20
Entering state 25
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 64 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 31
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 45
Reading a token: --accepting rule at line 73 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting default rule (" ")
--accepting rule at line 54 ("<=")
Next token is token LEQ ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45
Entering state 59
Next token is token LEQ ()
Shifting token LEQ ()
Entering state 84
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("4")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 84
Entering state 115
Reading a token: --accepting default rule (" ")
--accepting rule at line 58 ("||")
Next token is token OR ()
Reducing stack by rule 38 (line 142):
   $1 = nterm expr ()
   $2 = token LEQ ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45
Entering state 59
Next token is token OR ()
Shifting token OR ()
Entering state 79
Reading a token: --accepting default rule (" ")
--accepting rule at line 73 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting default rule (" ")
--accepting rule at line 56 (">")
Next token is token GTR ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 79
Entering state 110
Next token is token GTR ()
Shifting token GTR ()
Entering state 82
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 79 110 82
Entering state 113
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 39 (line 143):
   $1 = nterm expr ()
   $2 = token GTR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 79
Entering state 110
Next token is token RPAREN ()
Reducing stack by rule 32 (line 136):
   $1 = nterm expr ()
   $2 = token OR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45
Entering state 59
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 92
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 123
Reducing stack by rule 7 (line 96):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123
Entering state 137
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("5")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 33 47
Entering state 61
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123
Entering state 137
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("6")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 33 47
Entering state 61
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123
Entering state 137
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("6")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 33 47
Entering state 61
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123
Entering state 137
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 64 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 31
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 45
Reading a token: --accepting rule at line 73 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting default rule (" ")
--accepting rule at line 62 ("==")
Next token is token TEST_FOR_EQUAL ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 31 45
Entering state 59
Next token is token TEST_FOR_EQUAL ()
Shifting token TEST_FOR_EQUAL ()
Entering state 86
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("2")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 31 45 59 86
Entering state 117
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 35 (line 139):
   $1 = nterm expr ()
   $2 = token TEST_FOR_EQUAL ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 31 45
Entering state 59
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 92
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 123
Reducing stack by rule 7 (line 96):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 31 45 59 92 123
Entering state 137
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("4")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 31 45 59 92 123 137 33 47
Entering state 61
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 31 45 59 92 123 137
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 31 45 59 92 123 137
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 31 45 59 92 123
Entering state 137
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 77 ("/*")
--accepting rule at line 79 (" don't do this line ")
--accepting rule at line 81 ("*/")
--accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("//")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("d")
--accepting rule at line 85 ("")
--accepting rule at line 87 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 144
Reading a token: --accepting default rule (" ")
--accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 66 ("while")
Next token is token WHILE ()
Reducing stack by rule 21 (line 119):
   $1 = token IF ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm statementIf ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 39
Reducing stack by rule 10 (line 100):
   $1 = nterm statementIf ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123
Entering state 137
Next token is token WHILE ()
Shifting token WHILE ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 46
Reading a token: --accepting rule at line 73 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting default rule (" ")
--accepting rule at line 62 ("==")
Next token is token TEST_FOR_EQUAL ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46
Entering state 60
Next token is token TEST_FOR_EQUAL ()
Shifting token TEST_FOR_EQUAL ()
Entering state 86
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("3")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 86
Entering state 117
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 35 (line 139):
   $1 = nterm expr ()
   $2 = token TEST_FOR_EQUAL ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46
Entering state 60
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 93
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 124
Reducing stack by rule 7 (line 96):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124
Entering state 138
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 73 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("+")
Next token is token PLUS ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124 138 33 47
Entering state 61
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 88
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124 138 33 47 61 88
Entering state 119
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("+")
Next token is token PLUS ()
Reducing stack by rule 26 (line 130):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124 138 33 47
Entering state 61
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 88
Reading a token: --accepting default rule (" ")
--accepting rule at line 73 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124 138 33 47 61 88
Entering state 119
Next token is token SEMI ()
Reducing stack by rule 26 (line 130):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124 138 33 47
Entering state 61
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124 138
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124 138
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 32 46 60 93 124
Entering state 138
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 145
Reducing stack by rule 20 (line 117):
   $1 = token WHILE ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm statementWhile ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 38
Reducing stack by rule 11 (line 101):
   $1 = nterm statementWhile ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123
Entering state 137
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 144
Reading a token: --accepting default rule (" ")
--accepting rule at line 65 ("else")
Next token is token ELSE ()
Shifting token ELSE ()
Entering state 150
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 154
Reducing stack by rule 7 (line 96):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154
Entering state 155
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("7")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 47
Entering state 61
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154
Entering state 155
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("7")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 47
Entering state 61
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154
Entering state 155
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("//")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("f")
--accepting rule at line 85 ("o")
--accepting rule at line 85 ("o")
--accepting rule at line 85 ("(")
--accepting rule at line 85 (")")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("h")
--accepting rule at line 85 ("a")
--accepting rule at line 85 ("s")
--accepting rule at line 85 ("n")
--accepting rule at line 85 ("'")
--accepting rule at line 85 ("t")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("b")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("n")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("d")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("f")
--accepting rule at line 85 ("i")
--accepting rule at line 85 ("n")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("d")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("y")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("t")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("s")
--accepting rule at line 85 ("o")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("c")
--accepting rule at line 85 ("a")
--accepting rule at line 85 ("n")
--accepting rule at line 85 ("'")
--accepting rule at line 85 ("t")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("c")
--accepting rule at line 85 ("h")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("c")
--accepting rule at line 85 ("k")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("n")
--accepting rule at line 85 ("u")
--accepting rule at line 85 ("m")
--accepting rule at line 85 ("b")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("r")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("o")
--accepting rule at line 85 ("f")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("p")
--accepting rule at line 85 ("a")
--accepting rule at line 85 ("r")
--accepting rule at line 85 ("a")
--accepting rule at line 85 ("m")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("t")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("r")
--accepting rule at line 85 ("s")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("u")
--accepting rule at line 85 ("n")
--accepting rule at line 85 ("t")
--accepting rule at line 85 ("i")
--accepting rule at line 85 ("l")
--accepting rule at line 85 ("")
--accepting rule at line 87 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 83 ("//")
--accepting rule at line 85 (" ")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("w")
--accepting rule at line 85 ("e")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("r")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("a")
--accepting rule at line 85 ("c")
--accepting rule at line 85 ("h")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("t")
--accepting rule at line 85 ("h")
--accepting rule at line 85 ("e")
--accepting rule at line 85 (" ")
--accepting rule at line 85 ("d")
--accepting rule at line 85 ("e")
--accepting rule at line 85 ("f")
--accepting rule at line 85 ("i")
--accepting rule at line 85 ("n")
--accepting rule at line 85 ("i")
--accepting rule at line 85 ("t")
--accepting rule at line 85 ("i")
--accepting rule at line 85 ("o")
--accepting rule at line 85 ("n")
--accepting rule at line 85 ("")
--accepting rule at line 87 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("foo")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 48
Reading a token: --accepting rule at line 71 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 48
Entering state 62
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Reducing stack by rule 47 (line 153):
-> $$ = nterm commaArgList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 48 62
Entering state 95
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 125
Reading a token: --accepting rule at line 71 ("2")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 48 62 95 125
Entering state 139
Reading a token: --accepting rule at line 48 ("+")
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 88
Reading a token: --accepting rule at line 73 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 48 62 95 125 139 88
Entering state 119
Next token is token RPAREN ()
Reducing stack by rule 26 (line 130):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 48 62 95 125
Entering state 139
Next token is token RPAREN ()
Reducing stack by rule 48 (line 154):
   $1 = nterm commaArgList ()
   $2 = token COMMA ()
   $3 = nterm expr ()
-> $$ = nterm commaArgList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 48 62
Entering state 95
Next token is token RPAREN ()
Reducing stack by rule 46 (line 151):
   $1 = nterm expr ()
   $2 = nterm commaArgList ()
-> $$ = nterm argList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 48
Entering state 63
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 96
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 126
Reducing stack by rule 12 (line 102):
   $1 = token VAR ()
   $2 = token LPAREN ()
   $3 = nterm argList ()
   $4 = token RPAREN ()
   $5 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154
Entering state 155
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("q")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 73 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 33 47
Entering state 61
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154
Entering state 155
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 68 ("moveAbsolute")
Next token is token MOVEABSOLUTE ()
Shifting token MOVEABSOLUTE ()
Entering state 34
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 50
Reading a token: --accepting rule at line 61 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 65
Reading a token: --accepting rule at line 73 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 98
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 128
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("2")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155 34 50 65 98 128
Entering state 141
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 147
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 151
Reducing stack by rule 13 (line 105):
   $1 = token MOVEABSOLUTE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154 155
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20 25 31 45 59 92 123 137 144 150 154
Entering state 155
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 156
Reducing stack by rule 22 (line 123):
   $1 = token IF ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
   $8 = token ELSE ()
   $9 = token LBRACE ()
   $10 = nterm statementList ()
   $11 = token RBRACE ()
-> $$ = nterm statementIf ()
Stack now 0 1 4 9 15 20 25
Entering state 39
Reducing stack by rule 10 (line 100):
   $1 = nterm statementIf ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 20 25
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 20
Entering state 25
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 29
Reducing stack by rule 4 (line 90):
   $1 = token MAIN ()
   $2 = token LPAREN ()
   $3 = nterm defnArgList ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm functionDefnMain ()
Stack now 0
Entering state 3
Reducing stack by rule 2 (line 87):
-> $$ = nterm functionDefnList ()
Stack now 0 3
Entering state 6
Reading a token: --accepting default rule ("	")
--accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting rule at line 73 ("foo")
Next token is token VAR ()
Shifting token VAR ()
Entering state 10
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 16
Reading a token: --accepting rule at line 73 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 7
Reducing stack by rule 52 (line 160):
-> $$ = nterm defnCommaArgList ()
Stack now 0 3 6 10 16 7
Entering state 13
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 18
Reading a token: --accepting default rule (" ")
--accepting rule at line 61 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 24
Reading a token: --accepting rule at line 73 ("y")
Next token is token VAR ()
Shifting token VAR ()
Entering state 28
Reducing stack by rule 54 (line 162):
   $1 = nterm defnCommaArgList ()
   $2 = token COMMA ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
-> $$ = nterm defnCommaArgList ()
Stack now 0 3 6 10 16 7
Entering state 13
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 50 (line 157):
   $1 = token VAR ()
   $2 = nterm defnCommaArgList ()
-> $$ = nterm defnArgList ()
Stack now 0 3 6 10 16
Entering state 21
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 26
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 42
Reducing stack by rule 7 (line 96):
-> $$ = nterm statementList ()
Stack now 0 3 6 10 16 21 26 42
Entering state 53
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("n")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 71 ("3")
Next token is token CONST ()
Shifting token CONST ()
Entering state 57
Reducing stack by rule 42 (line 146):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 3 6 10 16 21 26 42 53 33 47
Entering state 61
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 3 6 10 16 21 26 42 53
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 3 6 10 16 21 26 42 53
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 3 6 10 16 21 26 42
Entering state 53
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("b")
Next token is token VAR ()
Shifting token VAR ()
Entering state 33
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 47
Reading a token: --accepting default rule (" ")
--accepting rule at line 73 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 56
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 41 (line 145):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 3 6 10 16 21 26 42 53 33 47
Entering state 61
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 94
Reducing stack by rule 23 (line 125):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 3 6 10 16 21 26 42 53
Entering state 40
Reducing stack by rule 9 (line 99):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 3 6 10 16 21 26 42 53
Entering state 37
Reducing stack by rule 8 (line 97):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 3 6 10 16 21 26 42
Entering state 53
Reading a token: --accepting default rule ("")
--accepting rule at line 75 ("
")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 71
Reducing stack by rule 5 (line 92):
   $1 = token VAR ()
   $2 = token LPAREN ()
   $3 = nterm defnArgList ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm functionDefn ()
Stack now 0 3 6
Entering state 12
Reducing stack by rule 3 (line 88):
   $1 = nterm functionDefnList ()
   $2 = nterm functionDefn ()
-> $$ = nterm functionDefnList ()
Stack now 0 3
Entering state 6
Reading a token: --(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 85):
   $1 = nterm functionDefnMain ()
   $2 = nterm functionDefnList ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Now at end of input.
Shifting token $end ()
Entering state 5
Stack now 0 2 5
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
