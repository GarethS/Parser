Starting parse
Entering state 0
Reducing stack by rule 2 (line 81):
-> $$ = nterm statementList ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 58 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 5
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 14
Reading a token: --accepting rule at line 63 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 19
Reading a token: --accepting default rule (" ")
--accepting rule at line 50 ("<=")
Next token is token LEQ ()
Reducing stack by rule 27 (line 119):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 2 5 14
Entering state 22
Next token is token LEQ ()
Shifting token LEQ ()
Entering state 34
Reading a token: --accepting default rule (" ")
--accepting rule at line 61 ("4")
Next token is token CONST ()
Shifting token CONST ()
Entering state 20
Reducing stack by rule 28 (line 120):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 34
Entering state 54
Reading a token: --accepting default rule (" ")
--accepting rule at line 54 ("||")
Next token is token OR ()
Reducing stack by rule 24 (line 116):
   $1 = nterm expr ()
   $2 = token LEQ ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 5 14
Entering state 22
Next token is token OR ()
Shifting token OR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 63 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 19
Reading a token: --accepting default rule (" ")
--accepting rule at line 52 (">")
Next token is token GTR ()
Reducing stack by rule 27 (line 119):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 29
Entering state 49
Next token is token GTR ()
Shifting token GTR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 61 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 20
Reducing stack by rule 28 (line 120):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 29 49 32
Entering state 52
Reading a token: --accepting rule at line 39 (")")
Next token is token RPAREN ()
Reducing stack by rule 25 (line 117):
   $1 = nterm expr ()
   $2 = token GTR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 29
Entering state 49
Next token is token RPAREN ()
Reducing stack by rule 20 (line 112):
   $1 = nterm expr ()
   $2 = token OR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 5 14
Entering state 22
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 42
Reading a token: --accepting default rule (" ")
--accepting rule at line 34 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 62
Reducing stack by rule 2 (line 81):
-> $$ = nterm statementList ()
Stack now 0 2 5 14 22 42 62
Entering state 67
Reading a token: --accepting default rule ("")
--accepting rule at line 65 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 63 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 7
Reading a token: --accepting default rule (" ")
--accepting rule at line 43 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 16
Reading a token: --accepting default rule (" ")
--accepting rule at line 61 ("5")
Next token is token CONST ()
Shifting token CONST ()
Entering state 20
Reducing stack by rule 28 (line 120):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 42 62 67 7 16
Entering state 24
Reading a token: --accepting rule at line 41 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 44
Reducing stack by rule 11 (line 100):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 2 5 14 22 42 62 67
Entering state 11
Reducing stack by rule 4 (line 85):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 2 5 14 22 42 62 67
Entering state 8
Reducing stack by rule 3 (line 82):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 2 5 14 22 42 62
Entering state 67
Reading a token: --accepting default rule ("")
--accepting rule at line 65 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 63 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 7
Reading a token: --accepting default rule (" ")
--accepting rule at line 43 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 16
Reading a token: --accepting default rule (" ")
--accepting rule at line 61 ("6")
Next token is token CONST ()
Shifting token CONST ()
Entering state 20
Reducing stack by rule 28 (line 120):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 42 62 67 7 16
Entering state 24
Reading a token: --accepting rule at line 41 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 44
Reducing stack by rule 11 (line 100):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 2 5 14 22 42 62 67
Entering state 11
Reducing stack by rule 4 (line 85):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 2 5 14 22 42 62 67
Entering state 8
Reducing stack by rule 3 (line 82):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 2 5 14 22 42 62
Entering state 67
Reading a token: --accepting default rule ("")
--accepting rule at line 65 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 58 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 5
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 14
Reading a token: --accepting rule at line 63 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 19
Reading a token: --accepting default rule (" ")
--accepting rule at line 56 ("==")
Next token is token TEST_FOR_EQUAL ()
Reducing stack by rule 27 (line 119):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 42 62 67 5 14
Entering state 22
Next token is token TEST_FOR_EQUAL ()
Shifting token TEST_FOR_EQUAL ()
Entering state 36
Reading a token: --accepting default rule (" ")
--accepting rule at line 61 ("2")
Next token is token CONST ()
Shifting token CONST ()
Entering state 20
Reducing stack by rule 28 (line 120):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 36
Entering state 56
Reading a token: --accepting rule at line 39 (")")
Next token is token RPAREN ()
Reducing stack by rule 21 (line 113):
   $1 = nterm expr ()
   $2 = token TEST_FOR_EQUAL ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 42 62 67 5 14
Entering state 22
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 42
Reading a token: --accepting default rule (" ")
--accepting rule at line 34 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 62
Reducing stack by rule 2 (line 81):
-> $$ = nterm statementList ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 42 62
Entering state 67
Reading a token: --accepting default rule ("")
--accepting rule at line 65 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 63 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 7
Reading a token: --accepting default rule (" ")
--accepting rule at line 43 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 16
Reading a token: --accepting default rule (" ")
--accepting rule at line 61 ("4")
Next token is token CONST ()
Shifting token CONST ()
Entering state 20
Reducing stack by rule 28 (line 120):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 42 62 67 7 16
Entering state 24
Reading a token: --accepting rule at line 41 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 44
Reducing stack by rule 11 (line 100):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 42 62 67
Entering state 11
Reducing stack by rule 4 (line 85):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 42 62 67
Entering state 8
Reducing stack by rule 3 (line 82):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 42 62
Entering state 67
Reading a token: --accepting default rule ("")
--accepting rule at line 65 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 67 ("/*")
--accepting rule at line 69 (" don't do this line ")
--accepting rule at line 71 ("*/")
--accepting default rule ("")
--accepting rule at line 65 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 63 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 7
Reading a token: --accepting default rule ("")
--accepting rule at line 65 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 35 ("}")
Next token is token RBRACE ()
Error: popping token VAR ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 42 62 67
Error: popping nterm statementList ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 42 62
Error: popping token LBRACE ()
Stack now 0 2 5 14 22 42 62 67 5 14 22 42
Error: popping token RPAREN ()
Stack now 0 2 5 14 22 42 62 67 5 14 22
Error: popping nterm expr ()
Stack now 0 2 5 14 22 42 62 67 5 14
Error: popping token LPAREN ()
Stack now 0 2 5 14 22 42 62 67 5
Error: popping token IF ()
Stack now 0 2 5 14 22 42 62 67
Error: popping nterm statementList ()
Stack now 0 2 5 14 22 42 62
Error: popping token LBRACE ()
Stack now 0 2 5 14 22 42
Error: popping token RPAREN ()
Stack now 0 2 5 14 22
Error: popping nterm expr ()
Stack now 0 2 5 14
Error: popping token LPAREN ()
Stack now 0 2 5
Error: popping token IF ()
Stack now 0 2
Error: popping nterm statementList ()
Stack now 0
Cleanup: discarding lookahead token RBRACE ()
Stack now 0
