Starting parse
Entering state 0
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 99 ("//")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("T")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("s")
--accepting rule at line 101 ("t")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("p")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("o")
--accepting rule at line 101 ("g")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("m")
--accepting rule at line 101 ("")
--accepting rule at line 103 ("
")
--accepting rule at line 99 ("//")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("(")
--accepting rule at line 101 ("c")
--accepting rule at line 101 (")")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("G")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("t")
--accepting rule at line 101 ("h")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("S")
--accepting rule at line 101 ("c")
--accepting rule at line 101 ("o")
--accepting rule at line 101 ("t")
--accepting rule at line 101 ("t")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("2")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("1")
--accepting rule at line 101 ("3")
--accepting rule at line 101 ("")
--accepting rule at line 103 ("
")
--accepting rule at line 70 ("main")
Next token is token MAIN ()
Shifting token MAIN ()
Entering state 1
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 4
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 78 (line 224):
-> $$ = nterm defnArgList ()
Stack now 0 1 4
Entering state 9
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 15
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 19
Reducing stack by rule 7 (line 120):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 59
Entering state 89
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 59
Entering state 89
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 59
Entering state 89
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("4")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 59
Entering state 89
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 59
Entering state 89
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 76 ("RPM")
Next token is token RPM ()
Shifting token RPM ()
Entering state 38
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 67
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 104
Reading a token: --accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 166
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 222
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("60")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 38 67 104 166 222
Entering state 255
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 274
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("120")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 38 67 104 166 222 255 274
Entering state 291
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 303
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 306
Reducing stack by rule 23 (line 146):
   $1 = token RPM ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token COMMA ()
   $8 = nterm expr ()
   $9 = token RPAREN ()
   $10 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 69 ("while")
Next token is token WHILE ()
Shifting token WHILE ()
Entering state 31
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 58
Reading a token: --accepting rule at line 89 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting default rule (" ")
--accepting rule at line 58 ("<")
Next token is token LSS ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58
Entering state 88
Next token is token LSS ()
Shifting token LSS ()
Entering state 139
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("142")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 139
Entering state 196
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 69 (line 212):
   $1 = nterm expr ()
   $2 = token LSS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58
Entering state 88
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 151
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 208
Reducing stack by rule 7 (line 120):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("!")
Next token is token BANG ()
Shifting token BANG ()
Entering state 85
Reading a token: --accepting rule at line 89 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 32 59 85
Entering state 133
Reducing stack by rule 52 (line 195):
   $1 = token BANG ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 32 59
Entering state 89
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 75 ("led")
Next token is token LED ()
Shifting token LED ()
Entering state 37
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 66
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 102
Reading a token: --accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 164
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 220
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 37 66 102 164 220
Entering state 254
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 273
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 290
Reducing stack by rule 21 (line 143):
   $1 = token LED ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 99 ("//")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("T")
--accepting rule at line 101 ("h")
--accepting rule at line 101 ("e")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("f")
--accepting rule at line 101 ("i")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("s")
--accepting rule at line 101 ("t")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("p")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("m")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("t")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("r")
--accepting rule at line 101 (",")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("&")
--accepting rule at line 101 ("x")
--accepting rule at line 101 (",")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("i")
--accepting rule at line 101 ("s")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("t")
--accepting rule at line 101 ("h")
--accepting rule at line 101 ("e")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("t")
--accepting rule at line 101 ("u")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("n")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("v")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("l")
--accepting rule at line 101 ("u")
--accepting rule at line 101 ("e")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("n")
--accepting rule at line 101 ("d")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("i")
--accepting rule at line 101 ("s")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("p")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("s")
--accepting rule at line 101 ("s")
--accepting rule at line 101 ("-")
--accepting rule at line 101 ("b")
--accepting rule at line 101 ("y")
--accepting rule at line 101 ("-")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("f")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("n")
--accepting rule at line 101 ("c")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("")
--accepting rule at line 103 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("!")
Next token is token BANG ()
Shifting token BANG ()
Entering state 85
Reading a token: --accepting rule at line 89 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 32 59 85
Entering state 133
Reducing stack by rule 52 (line 195):
   $1 = token BANG ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 32 59
Entering state 89
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 64
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 98
Reading a token: --accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 160
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 216
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 35 64 98 160 216
Entering state 252
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 271
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 288
Reducing stack by rule 17 (line 137):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 75 ("led")
Next token is token LED ()
Shifting token LED ()
Entering state 37
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 66
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 102
Reading a token: --accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 164
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 220
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 37 66 102 164 220
Entering state 254
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 273
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 290
Reducing stack by rule 21 (line 143):
   $1 = token LED ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 64
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 98
Reading a token: --accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 160
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 216
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 35 64 98 160 216
Entering state 252
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 271
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 288
Reducing stack by rule 17 (line 137):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting default rule (" ")
--accepting rule at line 49 ("+")
Next token is token PLUS ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 32 59
Entering state 89
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 146
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 32 59 89 146
Entering state 203
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 55 (line 198):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 32 59
Entering state 89
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 67 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 30
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 57
Reading a token: --accepting rule at line 89 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting default rule (" ")
--accepting rule at line 57 (">")
Next token is token GTR ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57
Entering state 87
Next token is token GTR ()
Shifting token GTR ()
Entering state 140
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 140
Entering state 197
Next token is token RPAREN ()
Reducing stack by rule 68 (line 211):
   $1 = nterm expr ()
   $2 = token GTR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57
Entering state 87
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 150
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 207
Reducing stack by rule 7 (line 120):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207
Entering state 247
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("moveBack")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting default rule (" ")
--accepting rule at line 51 ("*")
Next token is token MULT ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 32 59
Entering state 89
Next token is token MULT ()
Shifting token MULT ()
Entering state 149
Reading a token: --accepting default rule (" ")
--accepting rule at line 50 ("-")
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 84
Reading a token: --accepting rule at line 89 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 32 59 89 149 84
Entering state 132
Next token is token SEMI ()
Reducing stack by rule 51 (line 194):
   $1 = token MINUS ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 32 59 89 149
Entering state 206
Reducing stack by rule 57 (line 200):
   $1 = nterm expr ()
   $2 = token MULT ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 32 59
Entering state 89
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207
Entering state 247
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 72 ("moveRelative")
Next token is token MOVERELATIVE ()
Shifting token MOVERELATIVE ()
Entering state 34
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 63
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 96
Reading a token: --accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 158
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 214
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("moveBack")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 34 63 96 158 214
Entering state 251
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 270
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 287
Reducing stack by rule 15 (line 134):
   $1 = token MOVERELATIVE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207
Entering state 247
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 99 ("//")
--accepting rule at line 101 ("d")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("g")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("x")
--accepting rule at line 101 ("1")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("k")
--accepting rule at line 101 ("R")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("l")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("t")
--accepting rule at line 101 ("i")
--accepting rule at line 101 ("v")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("(")
--accepting rule at line 101 ("&")
--accepting rule at line 101 ("x")
--accepting rule at line 101 (",")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("-")
--accepting rule at line 101 ("9")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("0")
--accepting rule at line 101 (")")
--accepting rule at line 101 (";")
--accepting rule at line 101 ("")
--accepting rule at line 103 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 89 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 59
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 32 59
Entering state 89
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 152
Reducing stack by rule 49 (line 189):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247
Entering state 52
Reducing stack by rule 9 (line 123):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207
Entering state 247
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 64
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 98
Reading a token: --accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 160
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 216
Reading a token: --accepting default rule (" ")
--accepting rule at line 87 ("4000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 82
Reducing stack by rule 71 (line 214):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 35 64 98 160 216
Entering state 252
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 271
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 288
Reducing stack by rule 17 (line 137):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207
Entering state 247
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 266
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("else")
Next token is token ELSE ()
Shifting token ELSE ()
Entering state 285
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 302
Reducing stack by rule 7 (line 120):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 266 285 302
Entering state 305
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 72 ("moveRelative")
Next token is token MOVERELATIVE ()
Shifting token MOVERELATIVE ()
Entering state 34
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 63
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 96
Reading a token: --accepting rule at line 89 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 158
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 214
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 81
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 70 (line 213):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 266 285 302 305 34 63 96 158 214
Entering state 251
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 270
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 287
Reducing stack by rule 15 (line 134):
   $1 = token MOVERELATIVE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 266 285 302 305
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248 30 57 87 150 207 247 266 285 302
Entering state 305
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 99 ("//")
--accepting rule at line 101 ("d")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("g")
--accepting rule at line 101 ("r")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("x")
--accepting rule at line 101 ("1")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("k")
--accepting rule at line 101 ("R")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("l")
--accepting rule at line 101 ("a")
--accepting rule at line 101 ("t")
--accepting rule at line 101 ("i")
--accepting rule at line 101 ("v")
--accepting rule at line 101 ("e")
--accepting rule at line 101 ("(")
--accepting rule at line 101 ("&")
--accepting rule at line 101 ("x")
--accepting rule at line 101 (",")
--accepting rule at line 101 (" ")
--accepting rule at line 101 ("6")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("0")
--accepting rule at line 101 ("0")
--accepting rule at line 101 (")")
--accepting rule at line 101 (";")
--accepting rule at line 101 ("")
--accepting rule at line 103 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 308
Reducing stack by rule 48 (line 187):
   $1 = token IF ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
   $8 = token ELSE ()
   $9 = token LBRACE ()
   $10 = nterm statementList ()
   $11 = token RBRACE ()
-> $$ = nterm statementIf ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 51
Reducing stack by rule 10 (line 124):
   $1 = nterm statementIf ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208 248
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 58 88 151 208
Entering state 248
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 267
Reducing stack by rule 46 (line 181):
   $1 = token WHILE ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm statementWhile ()
Stack now 0 1 4 9 15 19 24
Entering state 50
Reducing stack by rule 11 (line 125):
   $1 = nterm statementWhile ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 49
Reducing stack by rule 8 (line 121):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 28
Reducing stack by rule 4 (line 114):
   $1 = token MAIN ()
   $2 = token LPAREN ()
   $3 = nterm defnArgList ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm functionDefnMain ()
Stack now 0
Entering state 3
Reducing stack by rule 2 (line 111):
-> $$ = nterm functionDefnList ()
Stack now 0 3
Entering state 6
Reading a token: --accepting default rule ("")
--accepting rule at line 91 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 109):
   $1 = nterm functionDefnMain ()
   $2 = nterm functionDefnList ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Now at end of input.
Shifting token $end ()
Entering state 5
Stack now 0 2 5
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
