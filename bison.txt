Starting parse
Entering state 0
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 67 ("main")
Next token is token MAIN ()
Shifting token MAIN ()
Entering state 1
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 4
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 42 (line 141):
-> $$ = nterm defnArgList ()
Stack now 0 1 4
Entering state 9
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 14
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 18
Reducing stack by rule 6 (line 93):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18
Entering state 22
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 64 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 27
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 37
Reading a token: --accepting rule at line 70 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 44
Reading a token: --accepting default rule (" ")
--accepting rule at line 54 ("<=")
Next token is token LEQ ()
Reducing stack by rule 34 (line 130):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37
Entering state 47
Next token is token LEQ ()
Shifting token LEQ ()
Entering state 65
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("4")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 65
Entering state 90
Reading a token: --accepting default rule (" ")
--accepting rule at line 58 ("||")
Next token is token OR ()
Reducing stack by rule 31 (line 127):
   $1 = nterm expr ()
   $2 = token LEQ ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37
Entering state 47
Next token is token OR ()
Shifting token OR ()
Entering state 60
Reading a token: --accepting default rule (" ")
--accepting rule at line 70 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 44
Reading a token: --accepting default rule (" ")
--accepting rule at line 56 (">")
Next token is token GTR ()
Reducing stack by rule 34 (line 130):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 60
Entering state 85
Next token is token GTR ()
Shifting token GTR ()
Entering state 63
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 60 85 63
Entering state 88
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 32 (line 128):
   $1 = nterm expr ()
   $2 = token GTR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 60
Entering state 85
Next token is token RPAREN ()
Reducing stack by rule 25 (line 121):
   $1 = nterm expr ()
   $2 = token OR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37
Entering state 47
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 73
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 98
Reducing stack by rule 6 (line 93):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98
Entering state 106
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("5")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 29 39
Entering state 49
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98
Entering state 106
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("6")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 29 39
Entering state 49
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98
Entering state 106
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("6")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 29 39
Entering state 49
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98
Entering state 106
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 64 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 27
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 37
Reading a token: --accepting rule at line 70 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 44
Reading a token: --accepting default rule (" ")
--accepting rule at line 62 ("==")
Next token is token TEST_FOR_EQUAL ()
Reducing stack by rule 34 (line 130):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 27 37
Entering state 47
Next token is token TEST_FOR_EQUAL ()
Shifting token TEST_FOR_EQUAL ()
Entering state 67
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("2")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 27 37 47 67
Entering state 92
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 28 (line 124):
   $1 = nterm expr ()
   $2 = token TEST_FOR_EQUAL ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 27 37
Entering state 47
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 73
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 98
Reducing stack by rule 6 (line 93):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 27 37 47 73 98
Entering state 106
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("4")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 27 37 47 73 98 106 29 39
Entering state 49
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 27 37 47 73 98 106
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 27 37 47 73 98 106
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 27 37 47 73 98
Entering state 106
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 74 ("/*")
--accepting rule at line 76 (" don't do this line ")
--accepting rule at line 78 ("*/")
--accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 80 ("//")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("d")
--accepting rule at line 82 ("")
--accepting rule at line 84 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 110
Reading a token: --accepting default rule (" ")
--accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 66 ("while")
Next token is token WHILE ()
Reducing stack by rule 14 (line 104):
   $1 = token IF ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm statementIf ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 32
Reducing stack by rule 9 (line 97):
   $1 = nterm statementIf ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98
Entering state 106
Next token is token WHILE ()
Shifting token WHILE ()
Entering state 28
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 38
Reading a token: --accepting rule at line 70 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 44
Reading a token: --accepting default rule (" ")
--accepting rule at line 62 ("==")
Next token is token TEST_FOR_EQUAL ()
Reducing stack by rule 34 (line 130):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38
Entering state 48
Next token is token TEST_FOR_EQUAL ()
Shifting token TEST_FOR_EQUAL ()
Entering state 67
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("3")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 67
Entering state 92
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 28 (line 124):
   $1 = nterm expr ()
   $2 = token TEST_FOR_EQUAL ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38
Entering state 48
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 74
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 99
Reducing stack by rule 6 (line 93):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99
Entering state 107
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 70 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 44
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("+")
Next token is token PLUS ()
Reducing stack by rule 34 (line 130):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99 107 29 39
Entering state 49
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 69
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99 107 29 39 49 69
Entering state 94
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("+")
Next token is token PLUS ()
Reducing stack by rule 19 (line 115):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99 107 29 39
Entering state 49
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 69
Reading a token: --accepting default rule (" ")
--accepting rule at line 70 ("d")
Next token is token VAR ()
Shifting token VAR ()
Entering state 44
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 34 (line 130):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99 107 29 39 49 69
Entering state 94
Next token is token SEMI ()
Reducing stack by rule 19 (line 115):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99 107 29 39
Entering state 49
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99 107
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99 107
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 28 38 48 74 99
Entering state 107
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 111
Reducing stack by rule 13 (line 102):
   $1 = token WHILE ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm statementWhile ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 31
Reducing stack by rule 10 (line 98):
   $1 = nterm statementWhile ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98
Entering state 106
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 110
Reading a token: --accepting default rule (" ")
--accepting rule at line 65 ("else")
Next token is token ELSE ()
Shifting token ELSE ()
Entering state 113
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 114
Reducing stack by rule 6 (line 93):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114
Entering state 115
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("counter")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("7")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115 29 39
Entering state 49
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114
Entering state 115
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("7")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115 29 39
Entering state 49
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114
Entering state 115
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 80 ("//")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("f")
--accepting rule at line 82 ("o")
--accepting rule at line 82 ("o")
--accepting rule at line 82 ("(")
--accepting rule at line 82 (")")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("h")
--accepting rule at line 82 ("a")
--accepting rule at line 82 ("s")
--accepting rule at line 82 ("n")
--accepting rule at line 82 ("'")
--accepting rule at line 82 ("t")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("b")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("n")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("d")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("f")
--accepting rule at line 82 ("i")
--accepting rule at line 82 ("n")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("d")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("y")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("t")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("s")
--accepting rule at line 82 ("o")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("c")
--accepting rule at line 82 ("a")
--accepting rule at line 82 ("n")
--accepting rule at line 82 ("'")
--accepting rule at line 82 ("t")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("c")
--accepting rule at line 82 ("h")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("c")
--accepting rule at line 82 ("k")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("n")
--accepting rule at line 82 ("u")
--accepting rule at line 82 ("m")
--accepting rule at line 82 ("b")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("r")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("o")
--accepting rule at line 82 ("f")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("p")
--accepting rule at line 82 ("a")
--accepting rule at line 82 ("r")
--accepting rule at line 82 ("a")
--accepting rule at line 82 ("m")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("t")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("r")
--accepting rule at line 82 ("s")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("u")
--accepting rule at line 82 ("n")
--accepting rule at line 82 ("t")
--accepting rule at line 82 ("i")
--accepting rule at line 82 ("l")
--accepting rule at line 82 ("")
--accepting rule at line 84 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 80 ("//")
--accepting rule at line 82 (" ")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("w")
--accepting rule at line 82 ("e")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("r")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("a")
--accepting rule at line 82 ("c")
--accepting rule at line 82 ("h")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("t")
--accepting rule at line 82 ("h")
--accepting rule at line 82 ("e")
--accepting rule at line 82 (" ")
--accepting rule at line 82 ("d")
--accepting rule at line 82 ("e")
--accepting rule at line 82 ("f")
--accepting rule at line 82 ("i")
--accepting rule at line 82 ("n")
--accepting rule at line 82 ("i")
--accepting rule at line 82 ("t")
--accepting rule at line 82 ("i")
--accepting rule at line 82 ("o")
--accepting rule at line 82 ("n")
--accepting rule at line 82 ("")
--accepting rule at line 84 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("foo")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 40
Reading a token: --accepting rule at line 68 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115 29 40
Entering state 50
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Reducing stack by rule 40 (line 138):
-> $$ = nterm commaArgList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115 29 40 50
Entering state 76
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 100
Reading a token: --accepting rule at line 68 ("2")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115 29 40 50 76 100
Entering state 108
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 41 (line 139):
   $1 = nterm commaArgList ()
   $2 = token COMMA ()
   $3 = nterm expr ()
-> $$ = nterm commaArgList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115 29 40 50
Entering state 76
Next token is token RPAREN ()
Reducing stack by rule 39 (line 136):
   $1 = nterm expr ()
   $2 = nterm commaArgList ()
-> $$ = nterm argList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115 29 40
Entering state 51
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 77
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 101
Reducing stack by rule 11 (line 99):
   $1 = token VAR ()
   $2 = token LPAREN ()
   $3 = nterm argList ()
   $4 = token RPAREN ()
   $5 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114
Entering state 115
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("q")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 70 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 44
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 34 (line 130):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115 29 39
Entering state 49
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114 115
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18 22 27 37 47 73 98 106 110 113 114
Entering state 115
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 116
Reducing stack by rule 15 (line 108):
   $1 = token IF ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
   $8 = token ELSE ()
   $9 = token LBRACE ()
   $10 = nterm statementList ()
   $11 = token RBRACE ()
-> $$ = nterm statementIf ()
Stack now 0 1 4 9 14 18 22
Entering state 32
Reducing stack by rule 9 (line 97):
   $1 = nterm statementIf ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 14 18 22
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 14 18
Entering state 22
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 25
Reducing stack by rule 4 (line 89):
   $1 = token MAIN ()
   $2 = token LPAREN ()
   $3 = nterm defnArgList ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm functionDefnMain ()
Stack now 0
Entering state 3
Reducing stack by rule 2 (line 86):
-> $$ = nterm functionDefnList ()
Stack now 0 3
Entering state 6
Reading a token: --accepting default rule ("	")
--accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting rule at line 70 ("foo")
Next token is token VAR ()
Shifting token VAR ()
Entering state 10
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 15
Reading a token: --accepting rule at line 70 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 7
Reducing stack by rule 45 (line 145):
-> $$ = nterm defnCommaArgList ()
Stack now 0 3 6 10 15 7
Entering state 12
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 16
Reading a token: --accepting default rule (" ")
--accepting rule at line 61 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 21
Reading a token: --accepting rule at line 70 ("y")
Next token is token VAR ()
Shifting token VAR ()
Entering state 24
Reducing stack by rule 47 (line 147):
   $1 = nterm defnCommaArgList ()
   $2 = token COMMA ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
-> $$ = nterm defnCommaArgList ()
Stack now 0 3 6 10 15 7
Entering state 12
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 43 (line 142):
   $1 = token VAR ()
   $2 = nterm defnCommaArgList ()
-> $$ = nterm defnArgList ()
Stack now 0 3 6 10 15
Entering state 19
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 23
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 35
Reducing stack by rule 6 (line 93):
-> $$ = nterm statementList ()
Stack now 0 3 6 10 15 19 23 35
Entering state 42
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("n")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("3")
Next token is token CONST ()
Shifting token CONST ()
Entering state 45
Reducing stack by rule 35 (line 131):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 3 6 10 15 19 23 35 42 29 39
Entering state 49
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 3 6 10 15 19 23 35 42
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 3 6 10 15 19 23 35 42
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 3 6 10 15 19 23 35
Entering state 42
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 70 ("b")
Next token is token VAR ()
Shifting token VAR ()
Entering state 29
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 39
Reading a token: --accepting default rule (" ")
--accepting rule at line 70 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 44
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 34 (line 130):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 3 6 10 15 19 23 35 42 29 39
Entering state 49
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 75
Reducing stack by rule 16 (line 110):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 3 6 10 15 19 23 35 42
Entering state 33
Reducing stack by rule 8 (line 96):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 3 6 10 15 19 23 35 42
Entering state 30
Reducing stack by rule 7 (line 94):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 3 6 10 15 19 23 35
Entering state 42
Reading a token: --accepting default rule ("")
--accepting rule at line 72 ("
")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 53
Reducing stack by rule 5 (line 91):
   $1 = token VAR ()
   $2 = token LPAREN ()
   $3 = nterm defnArgList ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm functionDefn ()
Stack now 0 3 6
Entering state 11
Reducing stack by rule 3 (line 87):
   $1 = nterm functionDefnList ()
   $2 = nterm functionDefn ()
-> $$ = nterm functionDefnList ()
Stack now 0 3
Entering state 6
Reading a token: --(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 84):
   $1 = nterm functionDefnMain ()
   $2 = nterm functionDefnList ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Now at end of input.
Shifting token $end ()
Entering state 5
Stack now 0 2 5
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
