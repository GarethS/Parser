Starting parse
Entering state 0
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 101 ("//")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("T")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("s")
--accepting rule at line 103 ("t")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("p")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("o")
--accepting rule at line 103 ("g")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("m")
--accepting rule at line 103 ("")
--accepting rule at line 105 ("
")
--accepting rule at line 101 ("//")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("(")
--accepting rule at line 103 ("c")
--accepting rule at line 103 (")")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("G")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("t")
--accepting rule at line 103 ("h")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("S")
--accepting rule at line 103 ("c")
--accepting rule at line 103 ("o")
--accepting rule at line 103 ("t")
--accepting rule at line 103 ("t")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("2")
--accepting rule at line 103 ("0")
--accepting rule at line 103 ("1")
--accepting rule at line 103 ("3")
--accepting rule at line 103 ("")
--accepting rule at line 105 ("
")
--accepting rule at line 70 ("main")
Next token is token MAIN ()
Shifting token MAIN ()
Entering state 1
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 4
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 82 (line 232):
-> $$ = nterm defnArgList ()
Stack now 0 1 4
Entering state 9
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 15
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 19
Reducing stack by rule 7 (line 122):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 61
Entering state 93
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 61
Entering state 93
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 61
Entering state 93
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("15")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 61
Entering state 93
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 32 61
Entering state 93
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 76 ("RPM")
Next token is token RPM ()
Shifting token RPM ()
Entering state 38
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 69
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 108
Reading a token: --accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 174
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 234
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("60")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 38 69 108 174 234
Entering state 271
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 292
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("120")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 38 69 108 174 234 271 292
Entering state 307
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 317
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 320
Reducing stack by rule 23 (line 148):
   $1 = token RPM ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token COMMA ()
   $8 = nterm expr ()
   $9 = token RPAREN ()
   $10 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 69 ("while")
Next token is token WHILE ()
Shifting token WHILE ()
Entering state 31
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 60
Reading a token: --accepting rule at line 91 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting default rule (" ")
--accepting rule at line 58 ("<")
Next token is token LSS ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60
Entering state 92
Next token is token LSS ()
Shifting token LSS ()
Entering state 147
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("142")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 147
Entering state 208
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 73 (line 220):
   $1 = nterm expr ()
   $2 = token LSS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60
Entering state 92
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 159
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 220
Reducing stack by rule 7 (line 122):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("!")
Next token is token BANG ()
Shifting token BANG ()
Entering state 89
Reading a token: --accepting rule at line 91 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 32 61 89
Entering state 141
Reducing stack by rule 56 (line 203):
   $1 = token BANG ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 32 61
Entering state 93
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 75 ("led")
Next token is token LED ()
Shifting token LED ()
Entering state 37
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 68
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 106
Reading a token: --accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 172
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 232
Reading a token: --accepting default rule (" ")
--accepting rule at line 91 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 37 68 106 172 232
Entering state 270
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 291
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 306
Reducing stack by rule 21 (line 145):
   $1 = token LED ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 101 ("//")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("T")
--accepting rule at line 103 ("h")
--accepting rule at line 103 ("e")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("f")
--accepting rule at line 103 ("i")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("s")
--accepting rule at line 103 ("t")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("p")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("m")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("t")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("r")
--accepting rule at line 103 (",")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("&")
--accepting rule at line 103 ("x")
--accepting rule at line 103 (",")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("i")
--accepting rule at line 103 ("s")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("t")
--accepting rule at line 103 ("h")
--accepting rule at line 103 ("e")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("t")
--accepting rule at line 103 ("u")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("n")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("v")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("l")
--accepting rule at line 103 ("u")
--accepting rule at line 103 ("e")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("n")
--accepting rule at line 103 ("d")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("i")
--accepting rule at line 103 ("s")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("p")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("s")
--accepting rule at line 103 ("s")
--accepting rule at line 103 ("-")
--accepting rule at line 103 ("b")
--accepting rule at line 103 ("y")
--accepting rule at line 103 ("-")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("f")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("r")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("n")
--accepting rule at line 103 ("c")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("")
--accepting rule at line 105 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 47 ("!")
Next token is token BANG ()
Shifting token BANG ()
Entering state 89
Reading a token: --accepting rule at line 91 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 32 61 89
Entering state 141
Reducing stack by rule 56 (line 203):
   $1 = token BANG ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 32 61
Entering state 93
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 66
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 102
Reading a token: --accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 168
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 228
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 35 66 102 168 228
Entering state 268
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 289
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 304
Reducing stack by rule 17 (line 139):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 75 ("led")
Next token is token LED ()
Shifting token LED ()
Entering state 37
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 68
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 106
Reading a token: --accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 172
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 232
Reading a token: --accepting default rule (" ")
--accepting rule at line 91 ("on")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 37 68 106 172 232
Entering state 270
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 291
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 306
Reducing stack by rule 21 (line 145):
   $1 = token LED ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 66
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 102
Reading a token: --accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 168
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 228
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("1000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 35 66 102 168 228
Entering state 268
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 289
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 304
Reducing stack by rule 17 (line 139):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 91 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting default rule (" ")
--accepting rule at line 49 ("+")
Next token is token PLUS ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 32 61
Entering state 93
Next token is token PLUS ()
Shifting token PLUS ()
Entering state 154
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("1")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 32 61 93 154
Entering state 215
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 59 (line 206):
   $1 = nterm expr ()
   $2 = token PLUS ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 32 61
Entering state 93
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 67 ("if")
Next token is token IF ()
Shifting token IF ()
Entering state 30
Reading a token: --accepting default rule (" ")
--accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 59
Reading a token: --accepting rule at line 91 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting default rule (" ")
--accepting rule at line 57 (">")
Next token is token GTR ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59
Entering state 91
Next token is token GTR ()
Shifting token GTR ()
Entering state 148
Reading a token: --accepting default rule (" ")
--accepting rule at line 91 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 148
Entering state 209
Next token is token RPAREN ()
Reducing stack by rule 72 (line 219):
   $1 = nterm expr ()
   $2 = token GTR ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59
Entering state 91
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 158
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 219
Reducing stack by rule 7 (line 122):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219
Entering state 263
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("moveBack")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 91 ("moveDistance")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting default rule (" ")
--accepting rule at line 51 ("*")
Next token is token MULT ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 32 61
Entering state 93
Next token is token MULT ()
Shifting token MULT ()
Entering state 157
Reading a token: --accepting default rule (" ")
--accepting rule at line 50 ("-")
Next token is token MINUS ()
Shifting token MINUS ()
Entering state 88
Reading a token: --accepting rule at line 91 ("limit")
Next token is token VAR ()
Shifting token VAR ()
Entering state 85
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Reducing stack by rule 74 (line 221):
   $1 = token VAR ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 32 61 93 157 88
Entering state 140
Next token is token SEMI ()
Reducing stack by rule 55 (line 202):
   $1 = token MINUS ()
   $2 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 32 61 93 157
Entering state 218
Reducing stack by rule 61 (line 208):
   $1 = nterm expr ()
   $2 = token MULT ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 32 61
Entering state 93
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219
Entering state 263
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 101 ("//")
--accepting rule at line 103 ("m")
--accepting rule at line 103 ("o")
--accepting rule at line 103 ("v")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("R")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("l")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("t")
--accepting rule at line 103 ("i")
--accepting rule at line 103 ("v")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("(")
--accepting rule at line 103 ("&")
--accepting rule at line 103 ("x")
--accepting rule at line 103 (",")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("m")
--accepting rule at line 103 ("o")
--accepting rule at line 103 ("v")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("B")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("c")
--accepting rule at line 103 ("k")
--accepting rule at line 103 (")")
--accepting rule at line 103 (";")
--accepting rule at line 103 ("")
--accepting rule at line 105 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 80 ("degreex10kRelative")
Next token is token DEGREEx10kRELATIVE ()
Shifting token DEGREEx10kRELATIVE ()
Entering state 42
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 73
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 116
Reading a token: --accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 182
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 242
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("-900000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 42 73 116 182 242
Entering state 275
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 296
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 311
Reducing stack by rule 31 (line 160):
   $1 = token DEGREEx10kRELATIVE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219
Entering state 263
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 91 ("count")
Next token is token VAR ()
Shifting token VAR ()
Entering state 32
Reading a token: --accepting default rule (" ")
--accepting rule at line 48 ("=")
Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 61
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("0")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 32 61
Entering state 93
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 160
Reducing stack by rule 53 (line 197):
   $1 = token VAR ()
   $2 = token EQUAL ()
   $3 = nterm expr ()
   $4 = token SEMI ()
-> $$ = nterm statementAssign ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263
Entering state 54
Reducing stack by rule 9 (line 125):
   $1 = nterm statementAssign ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219
Entering state 263
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 73 ("sleep")
Next token is token SLEEP ()
Shifting token SLEEP ()
Entering state 35
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 66
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 102
Reading a token: --accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 168
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 228
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("4000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 35 66 102 168 228
Entering state 268
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 289
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 304
Reducing stack by rule 17 (line 139):
   $1 = token SLEEP ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219
Entering state 263
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 284
Reading a token: --accepting default rule (" ")
--accepting rule at line 68 ("else")
Next token is token ELSE ()
Shifting token ELSE ()
Entering state 301
Reading a token: --accepting default rule (" ")
--accepting rule at line 38 ("{")
Next token is token LBRACE ()
Shifting token LBRACE ()
Entering state 316
Reducing stack by rule 7 (line 122):
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 284 301 316
Entering state 319
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 101 ("//")
--accepting rule at line 103 ("m")
--accepting rule at line 103 ("o")
--accepting rule at line 103 ("v")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("R")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("l")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("t")
--accepting rule at line 103 ("i")
--accepting rule at line 103 ("v")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("(")
--accepting rule at line 103 ("&")
--accepting rule at line 103 ("x")
--accepting rule at line 103 (",")
--accepting rule at line 103 (" ")
--accepting rule at line 103 ("m")
--accepting rule at line 103 ("o")
--accepting rule at line 103 ("v")
--accepting rule at line 103 ("e")
--accepting rule at line 103 ("D")
--accepting rule at line 103 ("i")
--accepting rule at line 103 ("s")
--accepting rule at line 103 ("t")
--accepting rule at line 103 ("a")
--accepting rule at line 103 ("n")
--accepting rule at line 103 ("c")
--accepting rule at line 103 ("e")
--accepting rule at line 103 (")")
--accepting rule at line 103 (";")
--accepting rule at line 103 ("")
--accepting rule at line 105 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 80 ("degreex10kRelative")
Next token is token DEGREEx10kRELATIVE ()
Shifting token DEGREEx10kRELATIVE ()
Entering state 42
Reading a token: --accepting rule at line 42 ("(")
Next token is token LPAREN ()
Shifting token LPAREN ()
Entering state 73
Reading a token: --accepting rule at line 64 ("&")
Next token is token BITWISEAND ()
Shifting token BITWISEAND ()
Entering state 116
Reading a token: --accepting rule at line 91 ("x")
Next token is token VAR ()
Shifting token VAR ()
Entering state 182
Reading a token: --accepting rule at line 44 (",")
Next token is token COMMA ()
Shifting token COMMA ()
Entering state 242
Reading a token: --accepting default rule (" ")
--accepting rule at line 89 ("60000")
Next token is token CONST ()
Shifting token CONST ()
Entering state 86
Reducing stack by rule 75 (line 222):
   $1 = token CONST ()
-> $$ = nterm expr ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 284 301 316 319 42 73 116 182 242
Entering state 275
Reading a token: --accepting rule at line 43 (")")
Next token is token RPAREN ()
Shifting token RPAREN ()
Entering state 296
Reading a token: --accepting rule at line 45 (";")
Next token is token SEMI ()
Shifting token SEMI ()
Entering state 311
Reducing stack by rule 31 (line 160):
   $1 = token DEGREEx10kRELATIVE ()
   $2 = token LPAREN ()
   $3 = token BITWISEAND ()
   $4 = token VAR ()
   $5 = token COMMA ()
   $6 = nterm expr ()
   $7 = token RPAREN ()
   $8 = token SEMI ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 284 301 316 319
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264 30 59 91 158 219 263 284 301 316
Entering state 319
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 322
Reducing stack by rule 52 (line 195):
   $1 = token IF ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
   $8 = token ELSE ()
   $9 = token LBRACE ()
   $10 = nterm statementList ()
   $11 = token RBRACE ()
-> $$ = nterm statementIf ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 53
Reducing stack by rule 10 (line 126):
   $1 = nterm statementIf ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220 264
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19 24 31 60 92 159 220
Entering state 264
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting default rule (" ")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 285
Reducing stack by rule 50 (line 189):
   $1 = token WHILE ()
   $2 = token LPAREN ()
   $3 = nterm expr ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm statementWhile ()
Stack now 0 1 4 9 15 19 24
Entering state 52
Reducing stack by rule 11 (line 127):
   $1 = nterm statementWhile ()
-> $$ = nterm statement ()
Stack now 0 1 4 9 15 19 24
Entering state 51
Reducing stack by rule 8 (line 123):
   $1 = nterm statementList ()
   $2 = nterm statement ()
-> $$ = nterm statementList ()
Stack now 0 1 4 9 15 19
Entering state 24
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--accepting rule at line 39 ("}")
Next token is token RBRACE ()
Shifting token RBRACE ()
Entering state 28
Reducing stack by rule 4 (line 116):
   $1 = token MAIN ()
   $2 = token LPAREN ()
   $3 = nterm defnArgList ()
   $4 = token RPAREN ()
   $5 = token LBRACE ()
   $6 = nterm statementList ()
   $7 = token RBRACE ()
-> $$ = nterm functionDefnMain ()
Stack now 0
Entering state 3
Reducing stack by rule 2 (line 113):
-> $$ = nterm functionDefnList ()
Stack now 0 3
Entering state 6
Reading a token: --accepting default rule ("")
--accepting rule at line 93 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 111):
   $1 = nterm functionDefnMain ()
   $2 = nterm functionDefnList ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Now at end of input.
Shifting token $end ()
Entering state 5
Stack now 0 2 5
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
