                                                                                                                                                                                                  
FunctionDefn: main
Statement:
*LEFT Var: index,2 name,count
*RIGHT Var: index,1 name,0
ROOT Operator: = 262
Statement:
*LEFT Var: index,4 name,on
*RIGHT Var: index,3 name,1
ROOT Operator: = 262
Statement:
*LEFT Var: index,5 name,x
*RIGHT Var: index,1 name,0
ROOT Operator: = 262
Statement:
ROOT
While 2
**LEFT Var: index,2 name,count
**RIGHT Var: index,6 name,12
*LEFT Operator: < 285
If EVALWHILE == 0 JMP EndWhile 2
Statement:
*LEFT Var: index,4 name,on
*RIGHT Var: index,3 name,1
ROOT Operator: = 262
Statement:
ROOT FunctionCall: index,7 name,LED
Statement:
ROOT Var: index,5 name,x
Statement:
ROOT Var: index,4 name,on 
FunctionCallEnd: index,7 name,LED
Statement:
ROOT
If 0
***LEFT Var: index,2 name,count
***RIGHT Var: index,8 name,2
**LEFT Operator: == 290
***LEFT Var: index,2 name,count
***RIGHT Var: index,9 name,4
**RIGHT Operator: == 290
*LEFT Operator: || 281
If EVAL == 0 JMP Else 0
Statement:
ROOT FunctionCall: index,11 name,moveRelative
Statement:
ROOT Var: index,5 name,x
Statement:
ROOT Var: index,10 name,800 
FunctionCallEnd: index,11 name,moveRelative
JMP EndIf 0
Else 0
Statement:
ROOT FunctionCall: index,11 name,moveRelative
Statement:
ROOT Var: index,5 name,x
Statement:
ROOT Var: index,12 name,100 
FunctionCallEnd: index,11 name,moveRelative
EndIf 0
Statement:
*LEFT Var: index,4 name,on
*RIGHT Var: index,1 name,0
ROOT Operator: = 262
Statement:
ROOT FunctionCall: index,14 name,sleep
Statement:
ROOT Var: index,5 name,x
Statement:
ROOT Var: index,13 name,1000 
FunctionCallEnd: index,14 name,sleep
Statement:
ROOT FunctionCall: index,7 name,LED
Statement:
ROOT Var: index,5 name,x
Statement:
ROOT Var: index,4 name,on 
FunctionCallEnd: index,7 name,LED
Statement:
ROOT FunctionCall: index,14 name,sleep
Statement:
ROOT Var: index,5 name,x
Statement:
ROOT Var: index,13 name,1000 
FunctionCallEnd: index,14 name,sleep
Statement:
*LEFT Var: index,2 name,count
**LEFT Var: index,2 name,count
**RIGHT Var: index,3 name,1
*RIGHT Operator: + 293
ROOT Operator: = 262
Statement:
ROOT
If 1
**LEFT Var: index,2 name,count
**RIGHT Var: index,15 name,10
*LEFT Operator: >= 289
If EVAL == 0 JMP Else 1
Statement:
*LEFT Var: index,2 name,count
*RIGHT Var: index,1 name,0
ROOT Operator: = 262
JMP EndIf 1
Else 1
EndIf 1
EndWhile 2
ProgramEnd

Symbol table start:
index:0, name:main, type:16, val:0, fcnLink:0
index:1, name:0, type:1, val:0
index:2, name:count, type:0, val:0
index:3, name:1, type:1, val:1
index:4, name:on, type:0, val:0
index:5, name:x, type:0, val:0
index:6, name:12, type:1, val:12
index:7, name:LED, type:15, val:2, fcnLink:-6
index:8, name:2, type:1, val:2
index:9, name:4, type:1, val:4
index:10, name:800, type:1, val:800
index:11, name:moveRelative, type:15, val:2, fcnLink:-3
index:12, name:100, type:1, val:100
index:13, name:1000, type:1, val:1000
index:14, name:sleep, type:15, val:2, fcnLink:-4
index:15, name:10, type:1, val:10
Symbol table end:
