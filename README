
Gareth Scott (c) 2011, garethjscott@gmail.com

This project describes a language to run a motor and is based on the generic 'pattern{action}' syntax used by the AWK language.
The grammar specifices a declarative language without function calls where the action statements (within { and }) are only
executed when the pattern test evaluates to true.
An example is shown below:

	   /* Try to parse this as an experiment: */
	   counter == 4 && (m1.position >= 3 || m1.velocity < 0) {
			counter = counter + 1;
			m1.position = 2;
			
	   }

	  

	  
Pending tasks:
1. Allow each 'pattern{action}' phrase to specify the priority level it should be run at.	   